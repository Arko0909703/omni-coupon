2024-08-20 01:40:20 INFO  Version:21 - HV000001: Hibernate Validator 8.0.1.Final
2024-08-20 01:40:20 INFO  CouponApplication:50 - Starting CouponApplication using Java 21.0.2 with PID 53654 (/Users/satyakibhattacharje/Desktop/coupon 2/target/classes started by satyakibhattacharje in /Users/satyakibhattacharje/Desktop/coupon 2)
2024-08-20 01:40:20 DEBUG CouponApplication:51 - Running with Spring Boot v3.2.5, Spring v6.1.6
2024-08-20 01:40:20 INFO  CouponApplication:660 - The following 1 profile is active: "dev"
2024-08-20 01:40:20 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 01:40:20 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BaseCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ConstructsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ItemsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.MilestoneDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentMilestoneMappingRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UsersRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 52 ms. Found 18 JPA repository interfaces.
2024-08-20 01:40:20 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 01:40:20 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.AuthRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.TokenRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponFeedbackRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponIssueRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.IssueQuestionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.JpaItemsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.ProductMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.StoreMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.TransactionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.TermsAndConditionsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepo; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.PageRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.RoleRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:40:20 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 16 ms. Found 12 MongoDB repository interfaces.
2024-08-20 01:40:21 INFO  TomcatWebServer:109 - Tomcat initialized with port 8080 (http)
2024-08-20 01:40:21 INFO  Http11NioProtocol:173 - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-20 01:40:21 INFO  StandardService:173 - Starting service [Tomcat]
2024-08-20 01:40:21 INFO  StandardEngine:173 - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-08-20 01:40:21 INFO  [/]:173 - Initializing Spring embedded WebApplicationContext
2024-08-20 01:40:21 INFO  ServletWebServerApplicationContext:296 - Root WebApplicationContext: initialization completed in 815 ms
2024-08-20 01:40:21 INFO  LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-20 01:40:21 INFO  Version:44 - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-08-20 01:40:21 INFO  RegionFactoryInitiator:50 - HHH000026: Second-level cache disabled
2024-08-20 01:40:21 INFO  SpringPersistenceUnitInfo:87 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-20 01:40:21 INFO  HikariDataSource:110 - HikariPool-1 - Starting...
2024-08-20 01:40:21 INFO  HikariPool:565 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@283bb8b7
2024-08-20 01:40:21 INFO  HikariDataSource:123 - HikariPool-1 - Start completed.
2024-08-20 01:40:22 INFO  JtaPlatformInitiator:58 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-20 01:40:22 INFO  LocalContainerEntityManagerFactoryBean:437 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 01:40:22 DEBUG JwtAuthenticationFilter:240 - Filter 'jwtAuthenticationFilter' configured for use
2024-08-20 01:40:23 INFO  client:71 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.2+13-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@2dac4d04, com.mongodb.Jep395RecordCodecProvider@367a245e, com.mongodb.KotlinCodecProvider@65b17373]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-20 01:40:23 INFO  cluster:71 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=34490958, setName='rs0', canonicalAddress=127.0.0.1:27017, hosts=[127.0.0.1:27017], passives=[], arbiters=[], primary='127.0.0.1:27017', tagSet=TagSet{[]}, electionId=7fffffff0000000000000001, setVersion=1, topologyVersion=TopologyVersion{processId=66b601f70679bd8076e41ce4, counter=6}, lastWriteDate=Tue Aug 20 01:40:19 IST 2024, lastUpdateTimeNanos=1306773992936458}
2024-08-20 01:40:23 INFO  QueryEnhancerFactory:49 - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-20 01:40:23 WARN  JpaBaseConfiguration$JpaWebConfiguration:232 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-20 01:40:23 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.a.c.AuthController:
	{POST [/auth/register]}: register(SignUpRequestDto)
	{POST [/auth/token]}: token(LoginRequestDto)
2024-08-20 01:40:23 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.CouponController:
	{POST [/coupon/createUserSpecificConstraints]}: createUserSpecificConstraints(UserSpecificConstraintsRequest)
	{POST [/coupon/createCouponApplicability]}: createCouponApplicability(CouponApplicabilityRequest)
	{POST [/coupon/uploadsegment/batchcoupons/{couponcode}], consumes [multipart/form-data]}: uploadSegmentForBatchCoupons(String,MultipartFile,String,String)
	{PUT [/coupon/update-date-range/base]}: updateBaseCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/batch]}: updateBatchCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/unique]}: updateUniqueCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/updateUserSpecificConstraints]}: updateUserSpecificConstraints(UserSpecificConstraintsRequest)
	{PUT [/coupon/updateCouponApplicability]}: updateCouponApplicability(CouponApplicabilityRequest)
	{PUT [/coupon/usage/selection]}: updateCouponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
	{POST [/coupon/createmongocoupon]}: createMongoCoupon(CouponRequest)
	{POST [/coupon/updatebasecoupon/{basecouponname}]}: createBaseCoupon(String,BaseCouponRequest)
	{POST [/coupon/createbasecoupon]}: createBaseCoupon(BaseCouponRequest)
	{POST [/coupon/createuniquecoupon]}: createUniqueCoupon(UniqueCouponRequest)
	{POST [/coupon/updateuniquecoupon]}: updateUniqueCoupon(UniqueCouponRequest)
	{GET [/coupon/getuniquecoupon/{uniquecouponname}]}: getUniqueCoupon(String)
	{GET [/coupon/getallbasecoupon]}: getAllBaseCoupon()
	{PUT [/coupon/delete/base]}: deleteBaseCoupons(List)
	{PUT [/coupon/delete/batch]}: deleteBatchCoupons(List)
	{PUT [/coupon/delete/unique]}: deleteUniqueCoupons(List)
	{POST [/coupon/createCouponConstruct]}: createCouponConstruct(CouponConstructRequest)
	{POST [/coupon/upload/image/{code}]}: uploadCouponImage(MultipartFile,String)
	{PUT [/coupon/createCouponConstruct]}: updateCouponConstruct(CouponConstructRequest)
	{POST [/coupon/type-selection]}: selectCouponType(CouponTypeSelectionRequest)
	{PUT [/coupon/type-selection]}: updateSelectCouponType(CouponTypeSelectionRequest)
	{POST [/coupon/usage/selection]}: couponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
	{GET [/coupon/download_temp_file/{fileName}]}: downloadTempFile(String)
	{GET [/coupon/download_general/{type}]}: downloadTemplate(String)
	{POST [/coupon/createcoupun]}: createCoupon(CouponRequest)
	{GET [/coupon/getbasecoupon/{basecouponname}]}: getBaseCoupon(String)
	{POST [/coupon/upload/{type}]}: uploadFile(MultipartFile,String)
	{POST [/coupon/uploadsegment/applicablefor/{couponcode}]}: uploadSegment(String,MultipartFile)
	{POST [/coupon/upload_items/{uniquecouponname}]}: uploadItems(String,String,MultipartFile)
2024-08-20 01:40:23 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.GetCouponController:
	{GET [/getCoupons/getuserspecificconstraints/{code}]}: getUniqueCouponUserSpecificConstraints(String)
	{GET [/getCoupons/number/{mobileNumber}]}: getCouponUsingMobileNumber(String)
	{GET [/getCoupons/couponCode/{couponCode}]}: getCouponUsingCouponCode(String)
	{GET [/getCoupons/getcouponapplicability/{code}]}: getUniqueCouponApplicability(String)
	{GET [/getCoupons/getcouponconstructs/{code}]}: getUniqueCouponConstruts(String)
	{GET [/getCoupons/getcouponusage/{code}]}: getgetUniqueCouponUsage(String)
	{GET [/getCoupons/filter/{couponCategory}]}: getFilteredCoupons(String,String,String,String,String,String,String,String,int,int,String)
	{GET [/getCoupons/getuniquecoupons]}: getUniqueCoupons(int,int)
	{GET [/getCoupons/getbatchcoupons]}: getBatchCoupons(int,int)
	{GET [/getCoupons/getmilestonedetails]}: getMilestoneDetails(int,int)
	{GET [/getCoupons/getmilestonecoupons/{mobileNumber}]}: getMilestonesCoupons(String)
	{GET [/getCoupons/getproductmaster]}: getProductMaster()
	{GET [/getCoupons/search/{couponCategory}]}: searchCoupons(String,String,int,int)
	{GET [/getCoupons/getbasecoupons]}: getBaseCoupons(int,int)
	{POST [/getCoupons/updateStatus/{couponCategory}]}: updateStatus(String,UpdateStatusRequest)
	{GET [/getCoupons/getstoremaster]}: getStoreMaster()
2024-08-20 01:40:23 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.RedeemCouponController:
	{POST [/coupons/redeemcoupon]}: redeemCouponForSapphire(PosInputRequest)
	{POST [/coupons/enquirycoupon]}: enquireCouponForSapphire(PosInputEnquiry)
	{POST [/coupons/cancellationcoupon]}: settleCouponForSapphire(PosInputCancel)
	{POST [/coupons/settlementcoupon]}: cancelCouponForSapphire(PosInputSettle)
	{POST [/coupons/issue-question]}: saveIssueQuestion(IssueQuestionRequest)
	{GET [/coupons/issue-question]}: getIssueQuestion()
	{POST [/coupons/redeem-coupon/{couponCode}]}: redeemCoupon(PosInputRequest,String)
	{POST [/coupons/enquiry-coupon/{couponCode}]}: enquireCoupon(PosInputEnquiry,String)
	{POST [/coupons/settlement-coupon/{couponCode}]}: cancelCoupon(PosInputSettle,String)
	{POST [/coupons/cancellation-coupon/{couponCode}]}: settleCoupon(PosInputCancel,String)
	{POST [/coupons/feedback/{couponCode}]}: couponFeedback(CouponFeedbackRequest,String)
	{POST [/coupons/issue/{couponCode}]}: couponIssue(CouponIssueRequest,String)
2024-08-20 01:40:23 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.u.c.UserController:
	{POST [/user/login]}: login(LoginRequest)
	{GET [/user/getallroles]}: getAllRoles()
	{POST [/user/createrole]}: createRole(CreateRoleRequest)
	{POST [/user/updaterole]}: updateRole(CreateRoleRequest)
	{POST [/user/createuser]}: createUser(CreateUserRequest)
	{POST [/user/updateuser]}: updateUser(CreateUserRequest)
	{GET [/user/getuser/{email}]}: getUser(String)
	{POST [/user/resetpassword]}: resetPassword(ResetPasswordRequest)
2024-08-20 01:40:23 TRACE RequestMappingHandlerMapping:291 - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2024-08-20 01:40:23 DEBUG RequestMappingHandlerMapping:366 - 72 mappings in 'requestMappingHandlerMapping'
2024-08-20 01:40:23 DEBUG BeanNameUrlHandlerMapping:89 - Detected 0 mappings in 'beanNameHandlerMapping'
2024-08-20 01:40:23 TRACE RouterFunctionMapping:177 - 0 RouterFunction(s) in 'routerFunctionMapping'
2024-08-20 01:40:23 TRACE SimpleUrlHandlerMapping:452 - Mapped [/webjars/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2024-08-20 01:40:23 TRACE SimpleUrlHandlerMapping:452 - Mapped [/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2024-08-20 01:40:23 DEBUG SimpleUrlHandlerMapping:187 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-08-20 01:40:23 INFO  DefaultSecurityFilterChain:54 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@118b73d9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@24e2d0d1, org.springframework.security.web.context.SecurityContextHolderFilter@7d1f3f67, org.springframework.security.web.header.HeaderWriterFilter@69ca48bf, org.springframework.web.filter.CorsFilter@2968ff7a, org.springframework.security.web.authentication.logout.LogoutFilter@6b5e9923, com.project.coupon.security.config.JwtAuthenticationFilter@58f27c37, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2ea0e29d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5c31eb42, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@63cd8f26, org.springframework.security.web.session.SessionManagementFilter@7fe5dd5c, org.springframework.security.web.access.ExceptionTranslationFilter@3a3e0f7a, org.springframework.security.web.access.intercept.AuthorizationFilter@23b2ddc4]
2024-08-20 01:40:23 DEBUG RequestMappingHandlerAdapter:634 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-08-20 01:40:23 DEBUG ExceptionHandlerExceptionResolver:305 - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-08-20 01:40:23 INFO  Http11NioProtocol:173 - Starting ProtocolHandler ["http-nio-8080"]
2024-08-20 01:40:23 INFO  TomcatWebServer:241 - Tomcat started on port 8080 (http) with context path ''
2024-08-20 01:40:23 INFO  CouponApplication:56 - Started CouponApplication in 3.663 seconds (process running for 4.337)
2024-08-20 01:41:08 INFO  [/]:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-20 01:41:08 INFO  DispatcherServlet:532 - Initializing Servlet 'dispatcherServlet'
2024-08-20 01:41:08 TRACE DispatcherServlet:530 - Detected org.springframework.web.multipart.support.StandardServletMultipartResolver@5bfa2801
2024-08-20 01:41:08 TRACE DispatcherServlet:554 - Detected org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@6dafdb99
2024-08-20 01:41:08 TRACE DispatcherServlet:580 - Detected org.springframework.web.servlet.theme.FixedThemeResolver@4a094674
2024-08-20 01:41:08 TRACE DispatcherServlet:730 - Detected DefaultRequestToViewNameTranslator
2024-08-20 01:41:08 TRACE DispatcherServlet:794 - Detected SessionFlashMapManager
2024-08-20 01:41:08 DEBUG DispatcherServlet:549 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-08-20 01:41:08 INFO  DispatcherServlet:554 - Completed initialization in 4 ms
2024-08-20 01:41:08 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 01:41:08 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 01:41:08 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 01:41:08 INFO  JwtImplementation:139 - Is Token Expired: false
2024-08-20 01:41:08 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 01:41:08 INFO  JwtImplementation:131 - Is Token Valid: true
2024-08-20 01:41:08 TRACE DispatcherServlet:117 - GET "/coupon/download_general/FREEBIE", parameters={}, headers={masked} in DispatcherServlet 'dispatcherServlet'
2024-08-20 01:41:08 TRACE RequestMappingHandlerMapping:528 - Mapped to com.project.coupon.controller.CouponController#downloadTemplate(String)
2024-08-20 01:41:08 TRACE HandlerMethod:180 - Arguments: [FREEBIE]
2024-08-20 01:41:08 DEBUG HttpEntityMethodProcessor:275 - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-08-20 01:41:08 TRACE HttpEntityMethodProcessor:117 - Writing [com.project.coupon.response.DownloadTemplateResponse@7421d0ad]
2024-08-20 01:41:08 TRACE DispatcherServlet:1174 - No view rendering, null ModelAndView returned.
2024-08-20 01:41:08 DEBUG DispatcherServlet:1138 - Completed 200 OK, headers={masked}
2024-08-20 01:45:22 INFO  LocalContainerEntityManagerFactoryBean:650 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 01:45:22 INFO  HikariDataSource:350 - HikariPool-1 - Shutdown initiated...
2024-08-20 01:45:22 INFO  HikariDataSource:352 - HikariPool-1 - Shutdown completed.
2024-08-20 01:45:26 INFO  Version:21 - HV000001: Hibernate Validator 8.0.1.Final
2024-08-20 01:45:26 INFO  CouponApplication:50 - Starting CouponApplication using Java 21.0.2 with PID 54754 (/Users/satyakibhattacharje/Desktop/coupon 2/target/classes started by satyakibhattacharje in /Users/satyakibhattacharje/Desktop/coupon 2)
2024-08-20 01:45:26 DEBUG CouponApplication:51 - Running with Spring Boot v3.2.5, Spring v6.1.6
2024-08-20 01:45:26 INFO  CouponApplication:660 - The following 1 profile is active: "dev"
2024-08-20 01:45:26 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 01:45:26 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BaseCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ConstructsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ItemsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.MilestoneDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentMilestoneMappingRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UsersRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 53 ms. Found 18 JPA repository interfaces.
2024-08-20 01:45:26 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 01:45:26 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.AuthRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.TokenRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponFeedbackRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponIssueRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.IssueQuestionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.JpaItemsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.ProductMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.StoreMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.TransactionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.TermsAndConditionsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepo; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.PageRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.RoleRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:45:26 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 16 ms. Found 12 MongoDB repository interfaces.
2024-08-20 01:45:27 INFO  TomcatWebServer:109 - Tomcat initialized with port 8080 (http)
2024-08-20 01:45:27 INFO  Http11NioProtocol:173 - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-20 01:45:27 INFO  StandardService:173 - Starting service [Tomcat]
2024-08-20 01:45:27 INFO  StandardEngine:173 - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-08-20 01:45:27 INFO  [/]:173 - Initializing Spring embedded WebApplicationContext
2024-08-20 01:45:27 INFO  ServletWebServerApplicationContext:296 - Root WebApplicationContext: initialization completed in 807 ms
2024-08-20 01:45:27 INFO  LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-20 01:45:27 INFO  Version:44 - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-08-20 01:45:27 INFO  RegionFactoryInitiator:50 - HHH000026: Second-level cache disabled
2024-08-20 01:45:27 INFO  SpringPersistenceUnitInfo:87 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-20 01:45:27 INFO  HikariDataSource:110 - HikariPool-1 - Starting...
2024-08-20 01:45:27 INFO  HikariPool:565 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@25e95af1
2024-08-20 01:45:27 INFO  HikariDataSource:123 - HikariPool-1 - Start completed.
2024-08-20 01:45:28 INFO  JtaPlatformInitiator:58 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-20 01:45:28 INFO  LocalContainerEntityManagerFactoryBean:437 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 01:45:28 DEBUG JwtAuthenticationFilter:240 - Filter 'jwtAuthenticationFilter' configured for use
2024-08-20 01:45:28 INFO  client:71 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.2+13-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@21c7415e, com.mongodb.Jep395RecordCodecProvider@7f1581bb, com.mongodb.KotlinCodecProvider@30407f28]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-20 01:45:29 INFO  cluster:71 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=23061417, setName='rs0', canonicalAddress=127.0.0.1:27017, hosts=[127.0.0.1:27017], passives=[], arbiters=[], primary='127.0.0.1:27017', tagSet=TagSet{[]}, electionId=7fffffff0000000000000001, setVersion=1, topologyVersion=TopologyVersion{processId=66b601f70679bd8076e41ce4, counter=6}, lastWriteDate=Tue Aug 20 01:45:21 IST 2024, lastUpdateTimeNanos=1307079896983500}
2024-08-20 01:45:29 INFO  QueryEnhancerFactory:49 - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-20 01:45:29 WARN  JpaBaseConfiguration$JpaWebConfiguration:232 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-20 01:45:29 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.a.c.AuthController:
	{POST [/auth/register]}: register(SignUpRequestDto)
	{POST [/auth/token]}: token(LoginRequestDto)
2024-08-20 01:45:29 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.CouponController:
	{POST [/coupon/createUserSpecificConstraints]}: createUserSpecificConstraints(UserSpecificConstraintsRequest)
	{POST [/coupon/createCouponApplicability]}: createCouponApplicability(CouponApplicabilityRequest)
	{POST [/coupon/uploadsegment/batchcoupons/{couponcode}], consumes [multipart/form-data]}: uploadSegmentForBatchCoupons(String,MultipartFile,String,String)
	{PUT [/coupon/update-date-range/base]}: updateBaseCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/batch]}: updateBatchCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/unique]}: updateUniqueCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/updateUserSpecificConstraints]}: updateUserSpecificConstraints(UserSpecificConstraintsRequest)
	{PUT [/coupon/updateCouponApplicability]}: updateCouponApplicability(CouponApplicabilityRequest)
	{PUT [/coupon/usage/selection]}: updateCouponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
	{POST [/coupon/createcoupun]}: createCoupon(CouponRequest)
	{GET [/coupon/getbasecoupon/{basecouponname}]}: getBaseCoupon(String)
	{POST [/coupon/upload/{type}]}: uploadFile(MultipartFile,String)
	{POST [/coupon/uploadsegment/applicablefor/{couponcode}]}: uploadSegment(String,MultipartFile)
	{POST [/coupon/upload_items/{uniquecouponname}]}: uploadItems(String,String,MultipartFile)
	{POST [/coupon/createmongocoupon]}: createMongoCoupon(CouponRequest)
	{POST [/coupon/updatebasecoupon/{basecouponname}]}: createBaseCoupon(String,BaseCouponRequest)
	{POST [/coupon/createbasecoupon]}: createBaseCoupon(BaseCouponRequest)
	{POST [/coupon/createuniquecoupon]}: createUniqueCoupon(UniqueCouponRequest)
	{POST [/coupon/updateuniquecoupon]}: updateUniqueCoupon(UniqueCouponRequest)
	{GET [/coupon/getuniquecoupon/{uniquecouponname}]}: getUniqueCoupon(String)
	{GET [/coupon/getallbasecoupon]}: getAllBaseCoupon()
	{PUT [/coupon/delete/base]}: deleteBaseCoupons(List)
	{PUT [/coupon/delete/batch]}: deleteBatchCoupons(List)
	{PUT [/coupon/delete/unique]}: deleteUniqueCoupons(List)
	{POST [/coupon/createCouponConstruct]}: createCouponConstruct(CouponConstructRequest)
	{POST [/coupon/upload/image/{code}]}: uploadCouponImage(MultipartFile,String)
	{PUT [/coupon/createCouponConstruct]}: updateCouponConstruct(CouponConstructRequest)
	{POST [/coupon/type-selection]}: selectCouponType(CouponTypeSelectionRequest)
	{PUT [/coupon/type-selection]}: updateSelectCouponType(CouponTypeSelectionRequest)
	{POST [/coupon/usage/selection]}: couponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
	{GET [/coupon/download_temp_file/{fileName}]}: downloadTempFile(String)
	{GET [/coupon/download_general/{type}]}: downloadTemplate(String)
2024-08-20 01:45:29 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.GetCouponController:
	{GET [/getCoupons/getuserspecificconstraints/{code}]}: getUniqueCouponUserSpecificConstraints(String)
	{GET [/getCoupons/number/{mobileNumber}]}: getCouponUsingMobileNumber(String)
	{GET [/getCoupons/couponCode/{couponCode}]}: getCouponUsingCouponCode(String)
	{GET [/getCoupons/getcouponapplicability/{code}]}: getUniqueCouponApplicability(String)
	{GET [/getCoupons/getcouponconstructs/{code}]}: getUniqueCouponConstruts(String)
	{GET [/getCoupons/getcouponusage/{code}]}: getgetUniqueCouponUsage(String)
	{GET [/getCoupons/search/{couponCategory}]}: searchCoupons(String,String,int,int)
	{GET [/getCoupons/getbasecoupons]}: getBaseCoupons(int,int)
	{POST [/getCoupons/updateStatus/{couponCategory}]}: updateStatus(String,UpdateStatusRequest)
	{GET [/getCoupons/getstoremaster]}: getStoreMaster()
	{GET [/getCoupons/filter/{couponCategory}]}: getFilteredCoupons(String,String,String,String,String,String,String,String,int,int,String)
	{GET [/getCoupons/getuniquecoupons]}: getUniqueCoupons(int,int)
	{GET [/getCoupons/getbatchcoupons]}: getBatchCoupons(int,int)
	{GET [/getCoupons/getmilestonedetails]}: getMilestoneDetails(int,int)
	{GET [/getCoupons/getmilestonecoupons/{mobileNumber}]}: getMilestonesCoupons(String)
	{GET [/getCoupons/getproductmaster]}: getProductMaster()
2024-08-20 01:45:29 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.RedeemCouponController:
	{POST [/coupons/redeemcoupon]}: redeemCouponForSapphire(PosInputRequest)
	{POST [/coupons/enquirycoupon]}: enquireCouponForSapphire(PosInputEnquiry)
	{POST [/coupons/cancellationcoupon]}: settleCouponForSapphire(PosInputCancel)
	{POST [/coupons/settlementcoupon]}: cancelCouponForSapphire(PosInputSettle)
	{POST [/coupons/redeem-coupon/{couponCode}]}: redeemCoupon(PosInputRequest,String)
	{POST [/coupons/enquiry-coupon/{couponCode}]}: enquireCoupon(PosInputEnquiry,String)
	{POST [/coupons/settlement-coupon/{couponCode}]}: cancelCoupon(PosInputSettle,String)
	{POST [/coupons/cancellation-coupon/{couponCode}]}: settleCoupon(PosInputCancel,String)
	{POST [/coupons/feedback/{couponCode}]}: couponFeedback(CouponFeedbackRequest,String)
	{POST [/coupons/issue/{couponCode}]}: couponIssue(CouponIssueRequest,String)
	{POST [/coupons/issue-question]}: saveIssueQuestion(IssueQuestionRequest)
	{GET [/coupons/issue-question]}: getIssueQuestion()
2024-08-20 01:45:29 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.u.c.UserController:
	{POST [/user/login]}: login(LoginRequest)
	{POST [/user/createrole]}: createRole(CreateRoleRequest)
	{POST [/user/updaterole]}: updateRole(CreateRoleRequest)
	{POST [/user/createuser]}: createUser(CreateUserRequest)
	{POST [/user/updateuser]}: updateUser(CreateUserRequest)
	{GET [/user/getuser/{email}]}: getUser(String)
	{POST [/user/resetpassword]}: resetPassword(ResetPasswordRequest)
	{GET [/user/getallroles]}: getAllRoles()
2024-08-20 01:45:29 TRACE RequestMappingHandlerMapping:291 - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2024-08-20 01:45:29 DEBUG RequestMappingHandlerMapping:366 - 72 mappings in 'requestMappingHandlerMapping'
2024-08-20 01:45:29 DEBUG BeanNameUrlHandlerMapping:89 - Detected 0 mappings in 'beanNameHandlerMapping'
2024-08-20 01:45:29 TRACE RouterFunctionMapping:177 - 0 RouterFunction(s) in 'routerFunctionMapping'
2024-08-20 01:45:29 TRACE SimpleUrlHandlerMapping:452 - Mapped [/webjars/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2024-08-20 01:45:29 TRACE SimpleUrlHandlerMapping:452 - Mapped [/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2024-08-20 01:45:29 DEBUG SimpleUrlHandlerMapping:187 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-08-20 01:45:29 INFO  DefaultSecurityFilterChain:54 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@98e0718, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1ca9fd34, org.springframework.security.web.context.SecurityContextHolderFilter@4feb7abb, org.springframework.security.web.header.HeaderWriterFilter@3cbe4472, org.springframework.web.filter.CorsFilter@3a1e803, org.springframework.security.web.authentication.logout.LogoutFilter@52c3f893, com.project.coupon.security.config.JwtAuthenticationFilter@1d47b761, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2631075f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@427b8fe4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7279d0f8, org.springframework.security.web.session.SessionManagementFilter@69ca48bf, org.springframework.security.web.access.ExceptionTranslationFilter@26d47eba, org.springframework.security.web.access.intercept.AuthorizationFilter@767c69d4]
2024-08-20 01:45:29 DEBUG RequestMappingHandlerAdapter:634 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-08-20 01:45:29 DEBUG ExceptionHandlerExceptionResolver:305 - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-08-20 01:45:29 INFO  Http11NioProtocol:173 - Starting ProtocolHandler ["http-nio-8080"]
2024-08-20 01:45:29 INFO  TomcatWebServer:241 - Tomcat started on port 8080 (http) with context path ''
2024-08-20 01:45:29 INFO  CouponApplication:56 - Started CouponApplication in 3.529 seconds (process running for 4.075)
2024-08-20 01:45:48 INFO  [/]:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-20 01:45:48 INFO  DispatcherServlet:532 - Initializing Servlet 'dispatcherServlet'
2024-08-20 01:45:48 TRACE DispatcherServlet:530 - Detected org.springframework.web.multipart.support.StandardServletMultipartResolver@494e502c
2024-08-20 01:45:48 TRACE DispatcherServlet:554 - Detected org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@4fbdd61f
2024-08-20 01:45:48 TRACE DispatcherServlet:580 - Detected org.springframework.web.servlet.theme.FixedThemeResolver@4795def
2024-08-20 01:45:48 TRACE DispatcherServlet:730 - Detected DefaultRequestToViewNameTranslator
2024-08-20 01:45:48 TRACE DispatcherServlet:794 - Detected SessionFlashMapManager
2024-08-20 01:45:48 DEBUG DispatcherServlet:549 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-08-20 01:45:48 INFO  DispatcherServlet:554 - Completed initialization in 4 ms
2024-08-20 01:45:48 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 01:45:49 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 01:45:49 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 01:45:49 INFO  JwtImplementation:139 - Is Token Expired: false
2024-08-20 01:45:49 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 01:45:49 INFO  JwtImplementation:131 - Is Token Valid: true
2024-08-20 01:45:49 TRACE DispatcherServlet:117 - GET "/coupon/download_general/FREEBIE", parameters={}, headers={masked} in DispatcherServlet 'dispatcherServlet'
2024-08-20 01:45:49 TRACE RequestMappingHandlerMapping:528 - Mapped to com.project.coupon.controller.CouponController#downloadTemplate(String)
2024-08-20 01:45:49 TRACE HandlerMethod:180 - Arguments: [FREEBIE]
2024-08-20 01:45:49 DEBUG HttpEntityMethodProcessor:216 - Found 'Content-Type:application/octet-stream' in response
2024-08-20 01:45:49 TRACE HttpEntityMethodProcessor:117 - Writing [Byte array resource [resource loaded from byte array]]
2024-08-20 01:45:49 TRACE DispatcherServlet:1174 - No view rendering, null ModelAndView returned.
2024-08-20 01:45:49 DEBUG DispatcherServlet:1138 - Completed 200 OK, headers={masked}
2024-08-20 01:51:08 INFO  LocalContainerEntityManagerFactoryBean:650 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 01:51:09 INFO  HikariDataSource:350 - HikariPool-1 - Shutdown initiated...
2024-08-20 01:51:09 INFO  HikariDataSource:352 - HikariPool-1 - Shutdown completed.
2024-08-20 01:51:13 INFO  Version:21 - HV000001: Hibernate Validator 8.0.1.Final
2024-08-20 01:51:13 INFO  CouponApplication:50 - Starting CouponApplication using Java 21.0.2 with PID 56084 (/Users/satyakibhattacharje/Desktop/coupon 2/target/classes started by satyakibhattacharje in /Users/satyakibhattacharje/Desktop/coupon 2)
2024-08-20 01:51:13 DEBUG CouponApplication:51 - Running with Spring Boot v3.2.5, Spring v6.1.6
2024-08-20 01:51:13 INFO  CouponApplication:660 - The following 1 profile is active: "dev"
2024-08-20 01:51:13 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 01:51:13 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BaseCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ConstructsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ItemsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.MilestoneDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentMilestoneMappingRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UsersRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 43 ms. Found 18 JPA repository interfaces.
2024-08-20 01:51:13 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 01:51:13 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.AuthRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.TokenRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponFeedbackRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponIssueRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.IssueQuestionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.JpaItemsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.ProductMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.StoreMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.TransactionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.TermsAndConditionsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepo; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.PageRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.RoleRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 01:51:13 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 14 ms. Found 12 MongoDB repository interfaces.
2024-08-20 01:51:13 INFO  TomcatWebServer:109 - Tomcat initialized with port 8080 (http)
2024-08-20 01:51:13 INFO  Http11NioProtocol:173 - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-20 01:51:13 INFO  StandardService:173 - Starting service [Tomcat]
2024-08-20 01:51:13 INFO  StandardEngine:173 - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-08-20 01:51:13 INFO  [/]:173 - Initializing Spring embedded WebApplicationContext
2024-08-20 01:51:13 INFO  ServletWebServerApplicationContext:296 - Root WebApplicationContext: initialization completed in 766 ms
2024-08-20 01:51:13 INFO  LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-20 01:51:13 INFO  Version:44 - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-08-20 01:51:13 INFO  RegionFactoryInitiator:50 - HHH000026: Second-level cache disabled
2024-08-20 01:51:14 INFO  SpringPersistenceUnitInfo:87 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-20 01:51:14 INFO  HikariDataSource:110 - HikariPool-1 - Starting...
2024-08-20 01:51:14 INFO  HikariPool:565 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@13390a96
2024-08-20 01:51:14 INFO  HikariDataSource:123 - HikariPool-1 - Start completed.
2024-08-20 01:51:15 INFO  JtaPlatformInitiator:58 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-20 01:51:15 INFO  LocalContainerEntityManagerFactoryBean:437 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 01:51:15 DEBUG JwtAuthenticationFilter:240 - Filter 'jwtAuthenticationFilter' configured for use
2024-08-20 01:51:15 INFO  client:71 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.2+13-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1b9785aa, com.mongodb.Jep395RecordCodecProvider@340f4723, com.mongodb.KotlinCodecProvider@6193a9e2]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-20 01:51:15 INFO  cluster:71 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=25572625, setName='rs0', canonicalAddress=127.0.0.1:27017, hosts=[127.0.0.1:27017], passives=[], arbiters=[], primary='127.0.0.1:27017', tagSet=TagSet{[]}, electionId=7fffffff0000000000000001, setVersion=1, topologyVersion=TopologyVersion{processId=66b601f70679bd8076e41ce4, counter=6}, lastWriteDate=Tue Aug 20 01:51:13 IST 2024, lastUpdateTimeNanos=1307426601817500}
2024-08-20 01:51:15 INFO  QueryEnhancerFactory:49 - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-20 01:51:16 WARN  JpaBaseConfiguration$JpaWebConfiguration:232 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-20 01:51:16 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.a.c.AuthController:
	{POST [/auth/register]}: register(SignUpRequestDto)
	{POST [/auth/token]}: token(LoginRequestDto)
2024-08-20 01:51:16 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.CouponController:
	{POST [/coupon/createUserSpecificConstraints]}: createUserSpecificConstraints(UserSpecificConstraintsRequest)
	{POST [/coupon/createCouponApplicability]}: createCouponApplicability(CouponApplicabilityRequest)
	{POST [/coupon/uploadsegment/batchcoupons/{couponcode}], consumes [multipart/form-data]}: uploadSegmentForBatchCoupons(String,MultipartFile,String,String)
	{PUT [/coupon/update-date-range/base]}: updateBaseCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/batch]}: updateBatchCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/unique]}: updateUniqueCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/updateUserSpecificConstraints]}: updateUserSpecificConstraints(UserSpecificConstraintsRequest)
	{PUT [/coupon/updateCouponApplicability]}: updateCouponApplicability(CouponApplicabilityRequest)
	{PUT [/coupon/usage/selection]}: updateCouponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
	{POST [/coupon/createmongocoupon]}: createMongoCoupon(CouponRequest)
	{POST [/coupon/updatebasecoupon/{basecouponname}]}: createBaseCoupon(String,BaseCouponRequest)
	{POST [/coupon/createbasecoupon]}: createBaseCoupon(BaseCouponRequest)
	{POST [/coupon/createuniquecoupon]}: createUniqueCoupon(UniqueCouponRequest)
	{POST [/coupon/updateuniquecoupon]}: updateUniqueCoupon(UniqueCouponRequest)
	{GET [/coupon/getuniquecoupon/{uniquecouponname}]}: getUniqueCoupon(String)
	{GET [/coupon/getallbasecoupon]}: getAllBaseCoupon()
	{PUT [/coupon/delete/base]}: deleteBaseCoupons(List)
	{PUT [/coupon/delete/batch]}: deleteBatchCoupons(List)
	{PUT [/coupon/delete/unique]}: deleteUniqueCoupons(List)
	{POST [/coupon/createCouponConstruct]}: createCouponConstruct(CouponConstructRequest)
	{POST [/coupon/upload/image/{code}]}: uploadCouponImage(MultipartFile,String)
	{PUT [/coupon/createCouponConstruct]}: updateCouponConstruct(CouponConstructRequest)
	{POST [/coupon/type-selection]}: selectCouponType(CouponTypeSelectionRequest)
	{PUT [/coupon/type-selection]}: updateSelectCouponType(CouponTypeSelectionRequest)
	{POST [/coupon/usage/selection]}: couponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
	{GET [/coupon/download_temp_file/{fileName}]}: downloadTempFile(String)
	{GET [/coupon/download_general/{type}]}: downloadTemplate(String)
	{POST [/coupon/createcoupun]}: createCoupon(CouponRequest)
	{GET [/coupon/getbasecoupon/{basecouponname}]}: getBaseCoupon(String)
	{POST [/coupon/upload/{type}]}: uploadFile(MultipartFile,String)
	{POST [/coupon/uploadsegment/applicablefor/{couponcode}]}: uploadSegment(String,MultipartFile)
	{POST [/coupon/upload_items/{uniquecouponname}]}: uploadItems(String,String,MultipartFile)
2024-08-20 01:51:16 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.GetCouponController:
	{GET [/getCoupons/number/{mobileNumber}]}: getCouponUsingMobileNumber(String)
	{GET [/getCoupons/couponCode/{couponCode}]}: getCouponUsingCouponCode(String)
	{GET [/getCoupons/getcouponapplicability/{code}]}: getUniqueCouponApplicability(String)
	{GET [/getCoupons/getcouponconstructs/{code}]}: getUniqueCouponConstruts(String)
	{GET [/getCoupons/getcouponusage/{code}]}: getgetUniqueCouponUsage(String)
	{GET [/getCoupons/getuserspecificconstraints/{code}]}: getUniqueCouponUserSpecificConstraints(String)
	{GET [/getCoupons/filter/{couponCategory}]}: getFilteredCoupons(String,String,String,String,String,String,String,String,int,int,String)
	{GET [/getCoupons/getuniquecoupons]}: getUniqueCoupons(int,int)
	{GET [/getCoupons/getbatchcoupons]}: getBatchCoupons(int,int)
	{GET [/getCoupons/getmilestonedetails]}: getMilestoneDetails(int,int)
	{GET [/getCoupons/getmilestonecoupons/{mobileNumber}]}: getMilestonesCoupons(String)
	{GET [/getCoupons/getproductmaster]}: getProductMaster()
	{GET [/getCoupons/search/{couponCategory}]}: searchCoupons(String,String,int,int)
	{GET [/getCoupons/getbasecoupons]}: getBaseCoupons(int,int)
	{POST [/getCoupons/updateStatus/{couponCategory}]}: updateStatus(String,UpdateStatusRequest)
	{GET [/getCoupons/getstoremaster]}: getStoreMaster()
2024-08-20 01:51:16 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.RedeemCouponController:
	{POST [/coupons/redeemcoupon]}: redeemCouponForSapphire(PosInputRequest)
	{POST [/coupons/enquirycoupon]}: enquireCouponForSapphire(PosInputEnquiry)
	{POST [/coupons/cancellationcoupon]}: settleCouponForSapphire(PosInputCancel)
	{POST [/coupons/settlementcoupon]}: cancelCouponForSapphire(PosInputSettle)
	{POST [/coupons/issue-question]}: saveIssueQuestion(IssueQuestionRequest)
	{GET [/coupons/issue-question]}: getIssueQuestion()
	{POST [/coupons/redeem-coupon/{couponCode}]}: redeemCoupon(PosInputRequest,String)
	{POST [/coupons/enquiry-coupon/{couponCode}]}: enquireCoupon(PosInputEnquiry,String)
	{POST [/coupons/settlement-coupon/{couponCode}]}: cancelCoupon(PosInputSettle,String)
	{POST [/coupons/cancellation-coupon/{couponCode}]}: settleCoupon(PosInputCancel,String)
	{POST [/coupons/feedback/{couponCode}]}: couponFeedback(CouponFeedbackRequest,String)
	{POST [/coupons/issue/{couponCode}]}: couponIssue(CouponIssueRequest,String)
2024-08-20 01:51:16 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.u.c.UserController:
	{POST [/user/login]}: login(LoginRequest)
	{GET [/user/getallroles]}: getAllRoles()
	{POST [/user/createrole]}: createRole(CreateRoleRequest)
	{POST [/user/updaterole]}: updateRole(CreateRoleRequest)
	{POST [/user/createuser]}: createUser(CreateUserRequest)
	{POST [/user/updateuser]}: updateUser(CreateUserRequest)
	{GET [/user/getuser/{email}]}: getUser(String)
	{POST [/user/resetpassword]}: resetPassword(ResetPasswordRequest)
2024-08-20 01:51:16 TRACE RequestMappingHandlerMapping:291 - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2024-08-20 01:51:16 DEBUG RequestMappingHandlerMapping:366 - 72 mappings in 'requestMappingHandlerMapping'
2024-08-20 01:51:16 DEBUG BeanNameUrlHandlerMapping:89 - Detected 0 mappings in 'beanNameHandlerMapping'
2024-08-20 01:51:16 TRACE RouterFunctionMapping:177 - 0 RouterFunction(s) in 'routerFunctionMapping'
2024-08-20 01:51:16 TRACE SimpleUrlHandlerMapping:452 - Mapped [/webjars/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2024-08-20 01:51:16 TRACE SimpleUrlHandlerMapping:452 - Mapped [/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2024-08-20 01:51:16 DEBUG SimpleUrlHandlerMapping:187 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-08-20 01:51:16 INFO  DefaultSecurityFilterChain:54 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@75b9bbab, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7a82be85, org.springframework.security.web.context.SecurityContextHolderFilter@55bcd722, org.springframework.security.web.header.HeaderWriterFilter@427b8fe4, org.springframework.web.filter.CorsFilter@42c10f3d, org.springframework.security.web.authentication.logout.LogoutFilter@bb6bf68, com.project.coupon.security.config.JwtAuthenticationFilter@504216ff, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5618b26b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@21ff56e7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@791a53c7, org.springframework.security.web.session.SessionManagementFilter@5c31eb42, org.springframework.security.web.access.ExceptionTranslationFilter@745f4c49, org.springframework.security.web.access.intercept.AuthorizationFilter@63cd8f26]
2024-08-20 01:51:16 DEBUG RequestMappingHandlerAdapter:634 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-08-20 01:51:16 DEBUG ExceptionHandlerExceptionResolver:305 - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-08-20 01:51:16 INFO  Http11NioProtocol:173 - Starting ProtocolHandler ["http-nio-8080"]
2024-08-20 01:51:16 INFO  TomcatWebServer:241 - Tomcat started on port 8080 (http) with context path ''
2024-08-20 01:51:16 INFO  CouponApplication:56 - Started CouponApplication in 3.567 seconds (process running for 4.159)
2024-08-20 01:51:25 INFO  [/]:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-20 01:51:25 INFO  DispatcherServlet:532 - Initializing Servlet 'dispatcherServlet'
2024-08-20 01:51:25 TRACE DispatcherServlet:530 - Detected org.springframework.web.multipart.support.StandardServletMultipartResolver@391133ad
2024-08-20 01:51:25 TRACE DispatcherServlet:554 - Detected org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@4cd0b8cf
2024-08-20 01:51:25 TRACE DispatcherServlet:580 - Detected org.springframework.web.servlet.theme.FixedThemeResolver@7eecb648
2024-08-20 01:51:25 TRACE DispatcherServlet:730 - Detected DefaultRequestToViewNameTranslator
2024-08-20 01:51:25 TRACE DispatcherServlet:794 - Detected SessionFlashMapManager
2024-08-20 01:51:25 DEBUG DispatcherServlet:549 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-08-20 01:51:25 INFO  DispatcherServlet:554 - Completed initialization in 15 ms
2024-08-20 01:51:25 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 01:51:25 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 01:51:25 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 01:51:25 INFO  JwtImplementation:139 - Is Token Expired: false
2024-08-20 01:51:25 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 01:51:25 INFO  JwtImplementation:131 - Is Token Valid: true
2024-08-20 01:51:25 TRACE DispatcherServlet:117 - GET "/coupon/download_general/FREEBIE", parameters={}, headers={masked} in DispatcherServlet 'dispatcherServlet'
2024-08-20 01:51:25 TRACE RequestMappingHandlerMapping:528 - Mapped to com.project.coupon.controller.CouponController#downloadTemplate(String)
2024-08-20 01:51:25 TRACE HandlerMethod:180 - Arguments: [FREEBIE]
2024-08-20 01:51:26 DEBUG HttpEntityMethodProcessor:216 - Found 'Content-Type:application/octet-stream' in response
2024-08-20 01:51:26 TRACE HttpEntityMethodProcessor:117 - Writing [{80, 75, 3, 4, 20, 0, 8, 8, 8, 0, 109, 14, 20, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 19, 0, 0, 0, 91, 67, 111, 110, 116, 101, 110, 116, 95, 84, 121, 112, 101, 115, 93, 46, 120, 109, 108, -75, 83, -53, 110, -62, 48, 16, -4, -107, -56, -41, 42, 54, -12, 80, 85, 21, -127, 67, 31, -57, 22, -87, -12, 3, 92, 123, -109, 88, -8, 37, -81, -95, -16, -9, 93, 7, 56, -108, 82, -119, 10, 113, -14, 99, 102, 103, 102, 87, -10, 100, -74, 113, -74, 90, 67, 66, 19, 124, -61, -58, 124, -60, 42, -16, 42, 104, -29, -69, -122, 125, 44, 94, -22, 123, 86, 97, -106, 94, 75, 27, 60, 52, -52, 7, 54, -101, 78, 22, -37, 8, 88, 81, -87, -57, -122, -11, 57, -57, 7, 33, 80, -11, -32, 36, -14, 16, -63, 19, -46, -122, -28, 100, -90, 99, -22, 68, -108, 106, 41, 59, 16, -73, -93, -47, -99, 80, -63, 103, -16, -71, -50, 69, -125, 77, 39, 79, -48, -54, -107, -51, -43, -29, -18, -66, 72, 55, 76, -58, 104, -115, -110, -103, 82, -119, -75, -41, 71, -94, -11, 94, -112, 39, -80, 3, 7, 123, 19, -15, -122, 8, -84, 122, -34, -112, -54, -82, 27, 66, -111, -119, 51, 28, -114, 11, -53, -103, -22, -34, 104, 46, -55, 104, -8, 87, -76, -48, -74, 70, -127, 14, 106, -27, -88, -124, 67, 81, -43, -96, -21, -104, -120, -104, -78, -127, 125, -50, -71, 76, -7, 85, 58, 18, 20, 68, -98, 19, -118, -126, -92, -7, 37, -34, -121, -79, -88, -112, -32, 44, -61, 66, -68, -56, -15, -88, 91, -116, 9, -92, -58, 30, 32, 59, -53, -79, -105, 9, -12, 123, 78, -12, -104, 126, -121, -40, 88, -15, -125, 112, -59, 28, 121, 107, 79, 76, -95, 4, 24, -112, 107, 78, -128, 86, -18, -92, -15, -89, -36, -65, 66, 90, 126, -122, -80, -68, -98, 127, 113, 24, -10, 127, -39, 15, 32, -118, 97, 25, 31, 114, -120, -31, 123, 79, -65, 1, 80, 75, 7, 8, 122, -108, -54, 113, 59, 1, 0, 0, 28, 4, 0, 0, 80, 75, 3, 4, 20, 0, 8, 8, 8, 0, 109, 14, 20, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 95, 114, 101, 108, 115, 47, 46, 114, 101, 108, 115, -83, -110, -63, 106, -61, 48, 12, -122, 95, -59, -24, -34, 56, -19, 96, -116, 81, -73, -105, 50, -24, 109, -116, -18, 1, 52, 91, 73, 76, 98, -53, -40, -38, -106, -67, -3, -52, 46, 91, 75, 10, 27, -20, 40, 36, 125, -1, 7, -46, 118, 63, -121, 73, -67, 81, 46, -98, -93, -127, 117, -45, -126, -94, 104, -39, -7, -40, 27, 120, 62, 61, -84, -18, 64, 21, -63, -24, 112, -30, 72, 6, 34, -61, 126, -73, 125, -94, 9, -91, 110, -108, -63, -89, -94, 42, 34, 22, 3, -125, 72, -70, -41, -70, -40, -127, 2, -106, -122, 19, -59, -38, -23, 56, 7, -108, 90, -26, 94, 39, -76, 35, -10, -92, 55, 109, 123, -85, -13, 79, 6, -100, 51, -43, -47, 25, -56, 71, -73, 6, 117, -62, -36, -109, 24, -104, 39, -3, -50, 121, 124, 97, 30, -101, -118, -83, -115, -113, 68, -65, 9, -27, -82, -13, -106, 14, 108, 95, 3, 69, 89, -56, -66, -104, 0, -67, -20, -78, -7, 118, 113, 108, 31, 51, -41, 77, 76, -23, -65, 101, 104, 22, -118, -114, -36, 42, -43, 4, -54, -30, -87, 92, 51, -70, 89, 48, -78, -100, -23, 111, 74, -41, -113, -94, 3, 9, 58, 20, -4, -94, 94, 8, -23, -77, 31, -40, 125, 2, 80, 75, 7, 8, -89, -116, 122, -67, -29, 0, 0, 0, 73, 2, 0, 0, 80, 75, 3, 4, 20, 0, 8, 8, 8, 0, 109, 14, 20, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 100, 111, 99, 80, 114, 111, 112, 115, 47, 97, 112, 112, 46, 120, 109, 108, 77, -114, -63, 10, -62, 48, 16, 68, -17, 126, 69, -56, -67, -35, -22, 65, 68, -46, -108, -126, 8, -98, -20, 65, 63, 32, -92, -37, 54, -48, 108, 66, -78, 74, 63, -33, -100, -44, -29, -52, 48, -113, -89, -70, -51, -81, -30, -115, 41, -69, 64, -83, -36, -41, -115, 20, 72, 54, -116, -114, -26, 86, 62, 31, -41, -22, 36, 59, -67, 83, 67, 10, 17, 19, 59, -52, -94, 28, 40, -73, 114, 97, -114, 103, -128, 108, 23, -12, 38, -41, 101, -90, -78, 76, 33, 121, -61, 37, -90, 25, -62, 52, 57, -117, -105, 96, 95, 30, -119, -31, -48, 52, 71, -64, -115, -111, 70, 28, -85, -8, 5, 74, -83, -6, 24, 87, 103, 13, 23, 7, -35, 71, 83, -112, 98, -72, -33, 20, -4, -9, 10, 126, 14, -6, 3, 80, 75, 7, 8, -31, 124, 119, -40, -111, 0, 0, 0, -73, 0, 0, 0, 80, 75, 3, 4, 20, 0, 8, 8, 8, 0, 109, 14, 20, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 100, 111, 99, 80, 114, 111, 112, 115, 47, 99, 111, 114, 101, 46, 120, 109, 108, 109, -112, 93, 75, -61, 48, 20, -122, -1, 74, -56, 125, -101, -113, -55, -104, -95, -19, 16, 101, 32, 40, 14, -100, 40, -34, -123, -28, -40, 22, -101, 15, -110, 104, -25, -65, 55, -83, -77, -126, 122, -105, -28, 125, -50, -61, -55, 91, 109, -113, 102, 64, -17, 16, 98, -17, 108, -115, 89, 73, 49, 2, -85, -100, -18, 109, 91, -29, -121, -61, -82, -40, 96, 20, -109, -76, 90, 14, -50, 66, -115, -83, -61, -37, -90, 82, 94, 40, 23, 96, 31, -100, -121, -112, 122, -120, 40, 107, 108, 20, -54, -41, -72, 75, -55, 11, 66, -94, -22, -64, -56, 88, 102, -62, -26, -16, -59, 5, 35, 83, -66, -122, -106, 120, -87, 94, 101, 11, -124, 83, -70, 38, 6, -110, -44, 50, 73, 50, 9, 11, -65, 24, -15, 73, -87, -43, -94, -12, 111, 97, -104, 5, 90, 17, 24, -64, -128, 77, -111, -80, -110, -111, 31, 54, 65, 48, -15, -33, -127, 57, 89, -56, 99, -20, 23, 106, 28, -57, 114, 92, -51, 92, -34, -120, -111, -89, -37, -101, -5, 121, -7, -94, -73, -45, -41, 21, -32, -90, 58, -87, -123, 10, 32, 19, 104, -108, 5, 34, 125, -8, -36, -56, 119, -14, -72, -70, -68, 58, -20, 112, -61, 41, 63, 43, -24, -90, 96, -25, 7, 78, 5, 103, -126, -81, -97, 43, -14, 107, 126, 18, 126, -99, 93, 104, 46, 114, 33, 29, -96, -3, -35, -11, -60, 45, -49, 21, -7, 83, 115, -13, 9, 80, 75, 7, 8, -60, -9, -75, -99, 5, 1, 0, 0, -80, 1, 0, 0, 80, 75, 3, 4, 20, 0, 8, 8, 8, 0, 109, 14, 20, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 120, 108, 47, 115, 104, 97, 114, 101, 100, 83, 116, 114, 105, 110, 103, 115, 46, 120, 109, 108, 101, -113, -63, 10, -62, 48, 16, 68, -17, 126, 69, -55, 93, 83, 5, 69, 36, 77, 15, -126, 95, -96, 103, 9, -23, 106, 23, -52, 38, 102, -73, -94, 126, -67, 81, 65, 68, -113, -13, 6, -34, 48, -90, -67, -122, 83, 117, -127, -52, 24, -87, 81, -45, 73, -83, 42, 32, 31, 59, -92, 99, -93, 118, -37, -51, 120, -87, 90, 59, 50, -52, 82, -7, 56, -112, 52, 106, -82, -86, -127, -16, 60, -64, -6, -109, -117, -125, -72, 81, -67, 72, 90, 105, -51, -66, -121, -32, 120, 18, 19, 80, 105, 14, 49, 7, 39, 37, -26, -93, -26, -108, -63, 117, -36, 3, 72, 56, -23, 89, 93, 47, 116, 112, 72, -54, 26, 70, 107, -60, -94, 64, -40, -105, 117, 48, 90, -84, -47, 79, -8, 46, 82, 70, -1, 7, -49, -125, 35, 65, -71, -3, -14, -105, -91, 3, -10, 25, -109, -108, 95, -65, 61, -29, -3, -53, -91, -53, 55, -5, 0, 80, 75, 7, 8, -105, 5, 120, -93, -86, 0, 0, 0, 8, 1, 0, 0, 80, 75, 3, 4, 20, 0, 8, 8, 8, 0, 109, 14, 20, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 120, 108, 47, 115, 116, 121, 108, 101, 115, 46, 120, 109, 108, -91, -110, -79, 110, -61, 32, 16, -122, -9, 62, 5, 98, 111, 112, 50, 84, 81, -123, -55, 80, 41, 85, -25, -92, 82, 87, 98, -50, 54, 42, 28, 22, -112, -56, -18, -45, 23, -116, -45, -92, 83, -121, 78, 119, -9, 115, -1, -57, -31, 51, -33, -115, -42, -112, 11, -8, -96, 29, -42, 116, -67, -86, 40, 1, 108, -100, -46, -40, -43, -12, -3, -72, 127, -36, -46, -99, 120, -32, 33, 78, 6, 14, 61, 64, 36, -55, -128, -95, -90, 125, -116, -61, 51, 99, -95, -23, -63, -54, -80, 114, 3, 96, 58, 105, -99, -73, 50, -90, -46, 119, 44, 12, 30, -92, 10, -39, 100, 13, -37, 84, -43, 19, -77, 82, 35, 21, 28, -49, 118, 111, 99, 32, -115, 59, 99, -84, 105, 69, -103, -32, -83, -61, -101, -78, -90, 69, 16, 60, 124, -111, -117, 52, 73, -55, -93, -91, -74, -58, 25, -25, -119, 70, 5, 35, -88, -102, 110, -77, -122, -46, 66, -23, 122, -111, 70, -97, -68, -98, 121, -46, 106, 51, 21, 121, -109, -123, 121, -46, -91, -49, 106, 116, 62, -117, -84, -36, 50, -121, -112, 76, -38, -104, -97, 33, 54, -76, 8, -126, 15, 50, 70, -16, -72, 79, 5, 89, -14, -29, 52, 64, 77, -47, 33, 20, -52, -36, -9, 71, -73, -110, -2, -13, -43, -53, -23, -50, 49, -121, 116, -15, -55, 121, -107, -106, 112, -1, -2, 34, 9, 110, -96, -115, -55, -32, 117, -41, -25, 24, -35, -64, -14, 97, -116, -50, -90, 68, 105, -39, 57, -108, 38, 35, -81, -114, 37, 73, -40, 6, -116, 57, -28, -43, 125, -76, -65, -40, 99, 75, -54, 14, -34, 84, -2, -4, 36, 63, -1, -102, -90, -127, -106, -76, 96, 74, -111, -7, -9, -76, -62, -2, 55, -106, -116, -19, 111, -2, -116, 102, -73, -33, 77, 124, 3, 80, 75, 7, 8, -87, 49, 88, 64, 67, 1, 0, 0, -94, 2, 0, 0, 80, 75, 3, 4, 20, 0, 8, 8, 8, 0, 109, 14, 20, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 120, 108, 47, 119, 111, 114, 107, 98, 111, 111, 107, 46, 120, 109, 108, -115, -114, -51, 78, -61, 48, 16, -124, -17, 60, -123, -75, 119, 106, 7, 16, -126, 40, 78, 47, 85, -91, -34, 56, 4, -18, 91, 103, -45, 88, -115, 127, -28, 53, 45, -113, -113, -109, 42, -64, -111, -45, 106, 52, -33, -50, 76, -77, -3, 114, -109, -72, 80, 98, 27, -68, -122, 106, -93, 64, -112, 55, -95, -73, -2, -92, -31, -67, -37, -33, -65, -64, -74, -67, 107, -82, 33, -99, -113, 33, -100, 69, -63, 61, 107, 24, 115, -114, -75, -108, 108, 70, 114, -56, -101, 16, -55, 23, 103, 8, -55, 97, 46, 50, -99, 36, -57, 68, -40, -13, 72, -108, -35, 36, 31, -108, 122, -106, 14, -83, -121, 91, 66, -99, -2, -109, 17, -122, -63, 26, -38, 5, -13, -23, -56, -25, 91, 72, -94, 9, 115, 25, -53, -93, -115, 12, -19, -49, -78, -73, 36, 122, -52, 84, -67, -86, 39, 13, 3, 78, 76, 32, -37, 102, 118, 62, 44, 93, -7, 23, -100, -91, 64, -109, -19, -123, 58, 60, 106, 80, 51, 39, -1, -128, -53, -26, -11, 10, -113, -114, 52, 116, -28, 98, -23, 37, 16, -87, -74, -67, -122, 116, -24, 31, 65, 44, -60, -95, -56, 106, -55, 88, 31, -27, 90, -43, 126, 3, 80, 75, 7, 8, -7, -31, 106, 77, -38, 0, 0, 0, 95, 1, 0, 0, 80, 75, 3, 4, 20, 0, 8, 8, 8, 0, 109, 14, 20, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, 120, 108, 47, 95, 114, 101, 108, 115, 47, 119, 111, 114, 107, 98, 111, 111, 107, 46, 120, 109, 108, 46, 114, 101, 108, 115, -83, -111, 77, 107, -61, 48, 12, 64, -1, -118, -47, 125, 113, -46, -63, 24, -93, 110, 47, 99, -48, -21, -42, -3, 0, 99, 43, 113, 104, 34, 25, 75, -5, -24, -65, -97, -69, -61, -42, 64, 7, 59, -12, 36, -116, -16, 123, 15, -76, -34, 126, -50, -109, 121, -57, 34, 35, -109, -125, -82, 105, -63, 32, 5, -114, 35, 13, 14, 94, -9, 79, 55, -9, 96, 68, 61, 69, 63, 49, -95, 3, 98, -40, 110, -42, -49, 56, 121, -83, 63, 36, -115, 89, 76, 69, -112, 56, 72, -86, -7, -63, 90, 9, 9, 103, 47, 13, 103, -92, -70, -23, -71, -52, 94, -21, -77, 12, 54, -5, 112, -16, 3, -38, 85, -37, -34, -39, 114, -50, -128, 37, -45, -20, -94, -125, -78, -117, 29, -104, -67, 47, 3, -86, 3, 73, -66, 96, 124, -47, 82, -53, -92, -87, -32, -70, 58, 102, -4, -113, -106, -5, 126, 12, -8, -56, -31, 109, 70, -46, 11, 118, -69, -128, -125, -67, 28, -77, 58, -117, -47, -29, -124, -41, -81, -8, -90, -2, -91, -65, -3, -43, 127, 112, 57, 72, 66, -44, 83, 121, 29, -35, -75, 75, 126, 4, -89, 24, -69, -72, -10, -26, 11, 80, 75, 7, 8, -122, 3, 59, -111, -44, 0, 0, 0, 51, 2, 0, 0, 80, 75, 3, 4, 20, 0, 8, 8, 8, 0, 109, 14, 20, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 120, 108, 47, 119, 111, 114, 107, 115, 104, 101, 101, 116, 115, 47, 115, 104, 101, 101, 116, 49, 46, 120, 109, 108, 101, -110, -53, 78, -61, 48, 16, 69, -9, 124, -123, -27, 61, 117, -46, 82, 64, -107, -29, -86, -48, 86, -80, 64, 66, -68, -10, 78, 50, 73, -84, -58, 118, 100, 79, 27, 62, 31, 59, 125, -120, 42, -69, -71, -102, 115, 117, 103, -58, -26, -53, 95, -35, -110, 3, 56, -81, -84, -55, 104, 58, 73, 40, 1, 83, -40, 82, -103, 58, -93, -33, 95, -37, -37, 71, -70, 20, 55, -68, -73, 110, -25, 27, 0, 36, -127, 55, 62, -93, 13, 98, -73, 96, -52, 23, 13, 104, -23, 39, -74, 3, 19, 58, -107, 117, 90, 98, -112, -82, 102, -66, 115, 32, -53, -63, -92, 91, 54, 77, -110, 123, -90, -91, 50, 84, -16, 82, 105, 48, 49, -112, 56, -88, 50, -70, 74, 23, -101, -108, 50, -63, 7, -10, 71, 65, -17, -1, -43, 36, 70, -25, -42, -18, -94, 120, 45, 51, 26, 38, 68, -103, 127, 66, 11, 5, 66, -48, -24, -10, 16, -35, 108, 100, -33, 14, -45, -68, 59, 82, 66, 37, -9, 45, 126, -40, -2, 5, 84, -35, 96, 88, 116, 30, 54, 61, 71, -82, 37, 74, -63, -99, -19, -119, 11, -99, 48, 96, 17, -117, 85, 26, -126, 50, -22, 41, -15, 49, 84, -16, -125, 72, 56, 59, -124, -96, -30, 68, 60, -115, -119, -12, -102, 120, 30, 19, -45, 107, 98, 61, 38, 102, -41, -60, 102, 76, -36, 93, 8, 22, -90, 62, -81, 126, 92, -93, -109, 53, -68, 73, 87, 43, -29, 73, 110, 17, -83, 14, -82, -55, -61, -100, -110, -54, 90, 4, 23, -43, -116, -110, 38, -68, -51, 69, -76, 80, -31, 64, 81, -30, -114, -9, 25, 106, -76, -35, -55, 27, -49, 123, -7, 2, -30, 15, 80, 75, 7, 8, 127, 79, 49, 126, 47, 1, 0, 0, 53, 2, 0, 0, 80, 75, 1, 2, 20, 0, 20, 0, 8, 8, 8, 0, 109, 14, 20, 89, 122, -108, -54, 113, 59, 1, 0, 0, 28, 4, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 91, 67, 111, 110, 116, 101, 110, 116, 95, 84, 121, 112, 101, 115, 93, 46, 120, 109, 108, 80, 75, 1, 2, 20, 0, 20, 0, 8, 8, 8, 0, 109, 14, 20, 89, -89, -116, 122, -67, -29, 0, 0, 0, 73, 2, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 1, 0, 0, 95, 114, 101, 108, 115, 47, 46, 114, 101, 108, 115, 80, 75, 1, 2, 20, 0, 20, 0, 8, 8, 8, 0, 109, 14, 20, 89, -31, 124, 119, -40, -111, 0, 0, 0, -73, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -104, 2, 0, 0, 100, 111, 99, 80, 114, 111, 112, 115, 47, 97, 112, 112, 46, 120, 109, 108, 80, 75, 1, 2, 20, 0, 20, 0, 8, 8, 8, 0, 109, 14, 20, 89, -60, -9, -75, -99, 5, 1, 0, 0, -80, 1, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 3, 0, 0, 100, 111, 99, 80, 114, 111, 112, 115, 47, 99, 111, 114, 101, 46, 120, 109, 108, 80, 75, 1, 2, 20, 0, 20, 0, 8, 8, 8, 0, 109, 14, 20, 89, -105, 5, 120, -93, -86, 0, 0, 0, 8, 1, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -85, 4, 0, 0, 120, 108, 47, 115, 104, 97, 114, 101, 100, 83, 116, 114, 105, 110, 103, 115, 46, 120, 109, 108, 80, 75, 1, 2, 20, 0, 20, 0, 8, 8, 8, 0, 109, 14, 20, 89, -87, 49, 88, 64, 67, 1, 0, 0, -94, 2, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -105, 5, 0, 0, 120, 108, 47, 115, 116, 121, 108, 101, 115, 46, 120, 109, 108, 80, 75, 1, 2, 20, 0, 20, 0, 8, 8, 8, 0, 109, 14, 20, 89, -7, -31, 106, 77, -38, 0, 0, 0, 95, 1, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 7, 0, 0, 120, 108, 47, 119, 111, 114, 107, 98, 111, 111, 107, 46, 120, 109, 108, 80, 75, 1, 2, 20, 0, 20, 0, 8, 8, 8, 0, 109, 14, 20, 89, -122, 3, 59, -111, -44, 0, 0, 0, 51, 2, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 8, 0, 0, 120, 108, 47, 95, 114, 101, 108, 115, 47, 119, 111, 114, 107, 98, 111, 111, 107, 46, 120, 109, 108, 46, 114, 101, 108, 115, 80, 75, 1, 2, 20, 0, 20, 0, 8, 8, 8, 0, 109, 14, 20, 89, 127, 79, 49, 126, 47, 1, 0, 0, 53, 2, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 9, 0, 0, 120, 108, 47, 119, 111, 114, 107, 115, 104, 101, 101, 116, 115, 47, 115, 104, 101, 101, 116, 49, 46, 120, 109, 108, 80, 75, 5, 6, 0, 0, 0, 0, 9, 0, 9, 0, 63, 2, 0, 0, -67, 10, 0, 0, 0, 0}]
2024-08-20 01:51:26 TRACE DispatcherServlet:1174 - No view rendering, null ModelAndView returned.
2024-08-20 01:51:26 DEBUG DispatcherServlet:1138 - Completed 200 OK, headers={masked}
2024-08-20 01:54:57 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 01:54:57 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 01:54:57 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 01:54:57 INFO  JwtImplementation:139 - Is Token Expired: false
2024-08-20 01:54:57 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 01:54:57 INFO  JwtImplementation:131 - Is Token Valid: true
2024-08-20 01:54:57 TRACE DispatcherServlet:117 - GET "/coupon/download_general/PRODUCT", parameters={}, headers={masked} in DispatcherServlet 'dispatcherServlet'
2024-08-20 01:54:57 TRACE RequestMappingHandlerMapping:528 - Mapped to com.project.coupon.controller.CouponController#downloadTemplate(String)
2024-08-20 01:54:57 TRACE HandlerMethod:180 - Arguments: [PRODUCT]
2024-08-20 01:54:57 DEBUG HttpEntityMethodProcessor:216 - Found 'Content-Type:application/octet-stream' in response
2024-08-20 01:54:57 TRACE HttpEntityMethodProcessor:117 - Writing [{80, 75, 3, 4, 20, 0, 8, 8, 8, 0, -36, 14, 20, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 19, 0, 0, 0, 91, 67, 111, 110, 116, 101, 110, 116, 95, 84, 121, 112, 101, 115, 93, 46, 120, 109, 108, -75, 83, -53, 110, -62, 48, 16, -4, -107, -56, -41, 42, 54, -12, 80, 85, 21, -127, 67, 31, -57, 22, -87, -12, 3, 92, 123, -109, 88, -8, 37, -81, -95, -16, -9, 93, 7, 56, -108, 82, -119, 10, 113, -14, 99, 102, 103, 102, 87, -10, 100, -74, 113, -74, 90, 67, 66, 19, 124, -61, -58, 124, -60, 42, -16, 42, 104, -29, -69, -122, 125, 44, 94, -22, 123, 86, 97, -106, 94, 75, 27, 60, 52, -52, 7, 54, -101, 78, 22, -37, 8, 88, 81, -87, -57, -122, -11, 57, -57, 7, 33, 80, -11, -32, 36, -14, 16, -63, 19, -46, -122, -28, 100, -90, 99, -22, 68, -108, 106, 41, 59, 16, -73, -93, -47, -99, 80, -63, 103, -16, -71, -50, 69, -125, 77, 39, 79, -48, -54, -107, -51, -43, -29, -18, -66, 72, 55, 76, -58, 104, -115, -110, -103, 82, -119, -75, -41, 71, -94, -11, 94, -112, 39, -80, 3, 7, 123, 19, -15, -122, 8, -84, 122, -34, -112, -54, -82, 27, 66, -111, -119, 51, 28, -114, 11, -53, -103, -22, -34, 104, 46, -55, 104, -8, 87, -76, -48, -74, 70, -127, 14, 106, -27, -88, -124, 67, 81, -43, -96, -21, -104, -120, -104, -78, -127, 125, -50, -71, 76, -7, 85, 58, 18, 20, 68, -98, 19, -118, -126, -92, -7, 37, -34, -121, -79, -88, -112, -32, 44, -61, 66, -68, -56, -15, -88, 91, -116, 9, -92, -58, 30, 32, 59, -53, -79, -105, 9, -12, 123, 78, -12, -104, 126, -121, -40, 88, -15, -125, 112, -59, 28, 121, 107, 79, 76, -95, 4, 24, -112, 107, 78, -128, 86, -18, -92, -15, -89, -36, -65, 66, 90, 126, -122, -80, -68, -98, 127, 113, 24, -10, 127, -39, 15, 32, -118, 97, 25, 31, 114, -120, -31, 123, 79, -65, 1, 80, 75, 7, 8, 122, -108, -54, 113, 59, 1, 0, 0, 28, 4, 0, 0, 80, 75, 3, 4, 20, 0, 8, 8, 8, 0, -36, 14, 20, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 95, 114, 101, 108, 115, 47, 46, 114, 101, 108, 115, -83, -110, -63, 106, -61, 48, 12, -122, 95, -59, -24, -34, 56, -19, 96, -116, 81, -73, -105, 50, -24, 109, -116, -18, 1, 52, 91, 73, 76, 98, -53, -40, -38, -106, -67, -3, -52, 46, 91, 75, 10, 27, -20, 40, 36, 125, -1, 7, -46, 118, 63, -121, 73, -67, 81, 46, -98, -93, -127, 117, -45, -126, -94, 104, -39, -7, -40, 27, 120, 62, 61, -84, -18, 64, 21, -63, -24, 112, -30, 72, 6, 34, -61, 126, -73, 125, -94, 9, -91, 110, -108, -63, -89, -94, 42, 34, 22, 3, -125, 72, -70, -41, -70, -40, -127, 2, -106, -122, 19, -59, -38, -23, 56, 7, -108, 90, -26, 94, 39, -76, 35, -10, -92, 55, 109, 123, -85, -13, 79, 6, -100, 51, -43, -47, 25, -56, 71, -73, 6, 117, -62, -36, -109, 24, -104, 39, -3, -50, 121, 124, 97, 30, -101, -118, -83, -115, -113, 68, -65, 9, -27, -82, -13, -106, 14, 108, 95, 3, 69, 89, -56, -66, -104, 0, -67, -20, -78, -7, 118, 113, 108, 31, 51, -41, 77, 76, -23, -65, 101, 104, 22, -118, -114, -36, 42, -43, 4, -54, -30, -87, 92, 51, -70, 89, 48, -78, -100, -23, 111, 74, -41, -113, -94, 3, 9, 58, 20, -4, -94, 94, 8, -23, -77, 31, -40, 125, 2, 80, 75, 7, 8, -89, -116, 122, -67, -29, 0, 0, 0, 73, 2, 0, 0, 80, 75, 3, 4, 20, 0, 8, 8, 8, 0, -36, 14, 20, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 100, 111, 99, 80, 114, 111, 112, 115, 47, 97, 112, 112, 46, 120, 109, 108, 77, -114, -63, 10, -62, 48, 16, 68, -17, 126, 69, -56, -67, -35, -22, 65, 68, -46, -108, -126, 8, -98, -20, 65, 63, 32, -92, -37, 54, -48, 108, 66, -78, 74, 63, -33, -100, -44, -29, -52, 48, -113, -89, -70, -51, -81, -30, -115, 41, -69, 64, -83, -36, -41, -115, 20, 72, 54, -116, -114, -26, 86, 62, 31, -41, -22, 36, 59, -67, 83, 67, 10, 17, 19, 59, -52, -94, 28, 40, -73, 114, 97, -114, 103, -128, 108, 23, -12, 38, -41, 101, -90, -78, 76, 33, 121, -61, 37, -90, 25, -62, 52, 57, -117, -105, 96, 95, 30, -119, -31, -48, 52, 71, -64, -115, -111, 70, 28, -85, -8, 5, 74, -83, -6, 24, 87, 103, 13, 23, 7, -35, 71, 83, -112, 98, -72, -33, 20, -4, -9, 10, 126, 14, -6, 3, 80, 75, 7, 8, -31, 124, 119, -40, -111, 0, 0, 0, -73, 0, 0, 0, 80, 75, 3, 4, 20, 0, 8, 8, 8, 0, -36, 14, 20, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 100, 111, 99, 80, 114, 111, 112, 115, 47, 99, 111, 114, 101, 46, 120, 109, 108, 109, -112, -47, 74, -60, 48, 16, 69, 127, 37, -28, -67, -99, -76, -69, -22, 26, -38, 46, -94, 44, 8, -118, 11, 86, 20, -33, 66, 50, -74, -59, 54, 9, 73, -76, -21, -33, -101, -42, -75, -126, -6, -106, -28, -98, 57, 76, 110, -79, 61, 12, 61, 121, 71, -25, 59, -93, 75, -102, -91, -116, 18, -44, -46, -88, 78, 55, 37, 125, -88, 119, -55, -122, 18, 31, -124, 86, -94, 55, 26, 75, -86, 13, -35, 86, -123, -76, 92, 26, -121, 123, 103, 44, -70, -48, -95, 39, 81, -93, 61, -105, -74, -92, 109, 8, -106, 3, 120, -39, -30, 32, 124, 26, 9, 29, -61, 23, -29, 6, 17, -30, -43, 53, 96, -123, 124, 21, 13, 66, -50, -40, 41, 12, 24, -124, 18, 65, -64, 36, 76, -20, 98, -92, 71, -91, -110, -117, -46, -66, -71, 126, 22, 40, 9, -40, -29, -128, 58, 120, -56, -46, 12, 126, -40, -128, 110, -16, -1, 14, -52, -55, 66, 30, 124, -73, 80, -29, 56, -90, -29, 106, -26, -30, 70, 25, 60, -35, -34, -36, -49, -53, 39, -99, -98, -66, 46, -111, 86, -59, 81, -51, -91, 67, 17, 80, -111, 40, -32, -31, -61, -58, 70, -66, -109, -57, -43, -27, 85, -67, -93, 85, -50, -14, 117, -62, 54, 73, 118, 94, -25, -116, -25, 107, 126, 114, -10, 92, -64, -81, -7, 73, -8, 117, 54, -82, -70, -120, -123, -76, 72, -10, 119, -41, 19, -73, 60, 23, -16, -89, -26, -22, 19, 80, 75, 7, 8, 82, 105, 9, -63, 6, 1, 0, 0, -80, 1, 0, 0, 80, 75, 3, 4, 20, 0, 8, 8, 8, 0, -36, 14, 20, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 120, 108, 47, 115, 104, 97, 114, 101, 100, 83, 116, 114, 105, 110, 103, 115, 46, 120, 109, 108, 101, -114, 65, 10, -62, 48, 16, 69, -9, -98, 34, 100, 111, 83, 21, 68, 36, 77, 23, -126, 39, -48, -75, -124, 116, 108, 3, -51, 36, 102, 38, -94, -73, 55, 110, 20, 113, -7, -34, -125, -49, -41, -3, 35, -52, -30, 14, -103, 124, -60, 78, -82, -102, 86, 10, 64, 23, 7, -113, 99, 39, -49, -89, -29, 114, 39, 123, -77, -48, 68, 44, 92, 44, -56, -99, -36, 72, 81, -48, -33, 10, 28, 62, 92, 55, -112, 58, 57, 49, -89, -67, 82, -28, 38, 8, -106, -102, -104, 0, 107, -71, -58, 28, 44, 87, -52, -93, -94, -108, -63, 14, 52, 1, 112, -104, -43, -70, 109, -73, 42, 88, -113, -46, 104, -14, 70, -77, 73, 57, 14, -59, -15, -91, 30, 0, -83, -40, 104, -11, -10, -65, 13, 109, -8, 107, -50, 50, -116, 49, 63, -65, 94, -43, -57, -26, 5, 80, 75, 7, 8, -94, 115, 3, -29, -100, 0, 0, 0, -34, 0, 0, 0, 80, 75, 3, 4, 20, 0, 8, 8, 8, 0, -36, 14, 20, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 120, 108, 47, 115, 116, 121, 108, 101, 115, 46, 120, 109, 108, -91, -110, -79, 110, -61, 32, 16, -122, -9, 62, 5, 98, 111, 112, 50, 84, 81, -123, -55, 80, 41, 85, -25, -92, 82, 87, 98, -50, 54, 42, 28, 22, -112, -56, -18, -45, 23, -116, -45, -92, 83, -121, 78, 119, -9, 115, -1, -57, -31, 51, -33, -115, -42, -112, 11, -8, -96, 29, -42, 116, -67, -86, 40, 1, 108, -100, -46, -40, -43, -12, -3, -72, 127, -36, -46, -99, 120, -32, 33, 78, 6, 14, 61, 64, 36, -55, -128, -95, -90, 125, -116, -61, 51, 99, -95, -23, -63, -54, -80, 114, 3, 96, 58, 105, -99, -73, 50, -90, -46, 119, 44, 12, 30, -92, 10, -39, 100, 13, -37, 84, -43, 19, -77, 82, 35, 21, 28, -49, 118, 111, 99, 32, -115, 59, 99, -84, 105, 69, -103, -32, -83, -61, -101, -78, -90, 69, 16, 60, 124, -111, -117, 52, 73, -55, -93, -91, -74, -58, 25, -25, -119, 70, 5, 35, -88, -102, 110, -77, -122, -46, 66, -23, 122, -111, 70, -97, -68, -98, 121, -46, 106, 51, 21, 121, -109, -123, 121, -46, -91, -49, 106, 116, 62, -117, -84, -36, 50, -121, -112, 76, -38, -104, -97, 33, 54, -76, 8, -126, 15, 50, 70, -16, -72, 79, 5, 89, -14, -29, 52, 64, 77, -47, 33, 20, -52, -36, -9, 71, -73, -110, -2, -13, -43, -53, -23, -50, 49, -121, 116, -15, -55, 121, -107, -106, 112, -1, -2, 34, 9, 110, -96, -115, -55, -32, 117, -41, -25, 24, -35, -64, -14, 97, -116, -50, -90, 68, 105, -39, 57, -108, 38, 35, -81, -114, 37, 73, -40, 6, -116, 57, -28, -43, 125, -76, -65, -40, 99, 75, -54, 14, -34, 84, -2, -4, 36, 63, -1, -102, -90, -127, -106, -76, 96, 74, -111, -7, -9, -76, -62, -2, 55, -106, -116, -19, 111, -2, -116, 102, -73, -33, 77, 124, 3, 80, 75, 7, 8, -87, 49, 88, 64, 67, 1, 0, 0, -94, 2, 0, 0, 80, 75, 3, 4, 20, 0, 8, 8, 8, 0, -36, 14, 20, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 120, 108, 47, 119, 111, 114, 107, 98, 111, 111, 107, 46, 120, 109, 108, -115, -114, -51, 78, -61, 48, 16, -124, -17, 60, -123, -75, 119, 106, 7, 16, -126, 40, 78, 47, 85, -91, -34, 56, 4, -18, 91, 103, -45, 88, -115, 127, -28, 53, 45, -113, -113, -109, 42, -64, -111, -45, 106, 52, -33, -50, 76, -77, -3, 114, -109, -72, 80, 98, 27, -68, -122, 106, -93, 64, -112, 55, -95, -73, -2, -92, -31, -67, -37, -33, -65, -64, -74, -67, 107, -82, 33, -99, -113, 33, -100, 69, -63, 61, 107, 24, 115, -114, -75, -108, 108, 70, 114, -56, -101, 16, -55, 23, 103, 8, -55, 97, 46, 50, -99, 36, -57, 68, -40, -13, 72, -108, -35, 36, 31, -108, 122, -106, 14, -83, -121, 91, 66, -99, -2, -109, 17, -122, -63, 26, -38, 5, -13, -23, -56, -25, 91, 72, -94, 9, 115, 25, -53, -93, -115, 12, -19, -49, -78, -73, 36, 122, -52, 84, -67, -86, 39, 13, 3, 78, 76, 32, -37, 102, 118, 62, 44, 93, -7, 23, -100, -91, 64, -109, -19, -123, 58, 60, 106, 80, 51, 39, -1, -128, -53, -26, -11, 10, -113, -114, 52, 116, -28, 98, -23, 37, 16, -87, -74, -67, -122, 116, -24, 31, 65, 44, -60, -95, -56, 106, -55, 88, 31, -27, 90, -43, 126, 3, 80, 75, 7, 8, -7, -31, 106, 77, -38, 0, 0, 0, 95, 1, 0, 0, 80, 75, 3, 4, 20, 0, 8, 8, 8, 0, -36, 14, 20, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, 120, 108, 47, 95, 114, 101, 108, 115, 47, 119, 111, 114, 107, 98, 111, 111, 107, 46, 120, 109, 108, 46, 114, 101, 108, 115, -83, -111, 77, 107, -61, 48, 12, 64, -1, -118, -47, 125, 113, -46, -63, 24, -93, 110, 47, 99, -48, -21, -42, -3, 0, 99, 43, 113, 104, 34, 25, 75, -5, -24, -65, -97, -69, -61, -42, 64, 7, 59, -12, 36, -116, -16, 123, 15, -76, -34, 126, -50, -109, 121, -57, 34, 35, -109, -125, -82, 105, -63, 32, 5, -114, 35, 13, 14, 94, -9, 79, 55, -9, 96, 68, 61, 69, 63, 49, -95, 3, 98, -40, 110, -42, -49, 56, 121, -83, 63, 36, -115, 89, 76, 69, -112, 56, 72, -86, -7, -63, 90, 9, 9, 103, 47, 13, 103, -92, -70, -23, -71, -52, 94, -21, -77, 12, 54, -5, 112, -16, 3, -38, 85, -37, -34, -39, 114, -50, -128, 37, -45, -20, -94, -125, -78, -117, 29, -104, -67, 47, 3, -86, 3, 73, -66, 96, 124, -47, 82, -53, -92, -87, -32, -70, 58, 102, -4, -113, -106, -5, 126, 12, -8, -56, -31, 109, 70, -46, 11, 118, -69, -128, -125, -67, 28, -77, 58, -117, -47, -29, -124, -41, -81, -8, -90, -2, -91, -65, -3, -43, 127, 112, 57, 72, 66, -44, 83, 121, 29, -35, -75, 75, 126, 4, -89, 24, -69, -72, -10, -26, 11, 80, 75, 7, 8, -122, 3, 59, -111, -44, 0, 0, 0, 51, 2, 0, 0, 80, 75, 3, 4, 20, 0, 8, 8, 8, 0, -36, 14, 20, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 120, 108, 47, 119, 111, 114, 107, 115, 104, 101, 101, 116, 115, 47, 115, 104, 101, 101, 116, 49, 46, 120, 109, 108, 101, -111, 75, 79, -61, 48, 16, -124, -17, -4, 10, 107, -17, -44, 73, 81, 1, 85, -114, -85, 82, 84, -63, 1, 9, -15, -70, -69, -55, 38, -79, 26, -37, -111, -67, 109, -8, -7, -40, -23, 67, 84, -67, -19, -56, -33, 104, 102, -41, 98, -15, 107, 58, -74, 71, 31, -76, -77, 5, -28, -109, 12, 24, -38, -46, 85, -38, 54, 5, 124, 127, -83, 111, 31, 97, 33, 111, -60, -32, -4, 54, -76, -120, -60, 34, 111, 67, 1, 45, 81, 63, -25, 60, -108, 45, 26, 21, 38, -82, 71, 27, 95, 106, -25, -115, -94, 40, 125, -61, 67, -17, 81, 85, -93, -55, 116, 124, -102, 101, -9, -36, 40, 109, 65, -118, 74, 27, -76, 41, -112, 121, -84, 11, 88, -26, -13, 85, 14, 92, -118, -111, -3, -47, 56, -124, 127, 51, 75, -47, 27, -25, -74, 73, -68, 86, 5, -60, -122, -92, 54, -97, -40, 97, 73, 24, 53, -7, 29, 38, 55, -65, -78, -81, -57, 54, -17, -98, 85, 88, -85, 93, 71, 31, 110, 120, 65, -35, -76, 20, 23, -99, -59, 77, 79, -111, -49, -118, -108, 20, -34, 13, -52, -57, -105, 88, -80, 76, -61, 50, -113, 65, 5, 4, 96, 33, -123, 74, -79, -105, -103, -32, -5, 24, 84, 30, -119, -89, 107, 34, -65, 36, 86, -41, -60, -12, 76, -16, -104, 120, -86, 125, -88, -48, -85, 6, -33, -108, 111, -76, 13, 108, -29, -120, -100, -119, -82, -55, -61, 12, 88, -19, 28, -95, 79, -22, 14, 88, 27, -17, 122, 22, 29, -42, 52, 82, -64, -4, 97, -73, 113, 38, -41, 31, -67, -23, 52, -25, -17, -109, 127, 80, 75, 7, 8, -123, 66, -82, 120, 34, 1, 0, 0, -15, 1, 0, 0, 80, 75, 1, 2, 20, 0, 20, 0, 8, 8, 8, 0, -36, 14, 20, 89, 122, -108, -54, 113, 59, 1, 0, 0, 28, 4, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 91, 67, 111, 110, 116, 101, 110, 116, 95, 84, 121, 112, 101, 115, 93, 46, 120, 109, 108, 80, 75, 1, 2, 20, 0, 20, 0, 8, 8, 8, 0, -36, 14, 20, 89, -89, -116, 122, -67, -29, 0, 0, 0, 73, 2, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 1, 0, 0, 95, 114, 101, 108, 115, 47, 46, 114, 101, 108, 115, 80, 75, 1, 2, 20, 0, 20, 0, 8, 8, 8, 0, -36, 14, 20, 89, -31, 124, 119, -40, -111, 0, 0, 0, -73, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -104, 2, 0, 0, 100, 111, 99, 80, 114, 111, 112, 115, 47, 97, 112, 112, 46, 120, 109, 108, 80, 75, 1, 2, 20, 0, 20, 0, 8, 8, 8, 0, -36, 14, 20, 89, 82, 105, 9, -63, 6, 1, 0, 0, -80, 1, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 3, 0, 0, 100, 111, 99, 80, 114, 111, 112, 115, 47, 99, 111, 114, 101, 46, 120, 109, 108, 80, 75, 1, 2, 20, 0, 20, 0, 8, 8, 8, 0, -36, 14, 20, 89, -94, 115, 3, -29, -100, 0, 0, 0, -34, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -84, 4, 0, 0, 120, 108, 47, 115, 104, 97, 114, 101, 100, 83, 116, 114, 105, 110, 103, 115, 46, 120, 109, 108, 80, 75, 1, 2, 20, 0, 20, 0, 8, 8, 8, 0, -36, 14, 20, 89, -87, 49, 88, 64, 67, 1, 0, 0, -94, 2, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -118, 5, 0, 0, 120, 108, 47, 115, 116, 121, 108, 101, 115, 46, 120, 109, 108, 80, 75, 1, 2, 20, 0, 20, 0, 8, 8, 8, 0, -36, 14, 20, 89, -7, -31, 106, 77, -38, 0, 0, 0, 95, 1, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 7, 0, 0, 120, 108, 47, 119, 111, 114, 107, 98, 111, 111, 107, 46, 120, 109, 108, 80, 75, 1, 2, 20, 0, 20, 0, 8, 8, 8, 0, -36, 14, 20, 89, -122, 3, 59, -111, -44, 0, 0, 0, 51, 2, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 8, 0, 0, 120, 108, 47, 95, 114, 101, 108, 115, 47, 119, 111, 114, 107, 98, 111, 111, 107, 46, 120, 109, 108, 46, 114, 101, 108, 115, 80, 75, 1, 2, 20, 0, 20, 0, 8, 8, 8, 0, -36, 14, 20, 89, -123, 66, -82, 120, 34, 1, 0, 0, -15, 1, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 9, 0, 0, 120, 108, 47, 119, 111, 114, 107, 115, 104, 101, 101, 116, 115, 47, 115, 104, 101, 101, 116, 49, 46, 120, 109, 108, 80, 75, 5, 6, 0, 0, 0, 0, 9, 0, 9, 0, 63, 2, 0, 0, -93, 10, 0, 0, 0, 0}]
2024-08-20 01:54:57 TRACE DispatcherServlet:1174 - No view rendering, null ModelAndView returned.
2024-08-20 01:54:57 DEBUG DispatcherServlet:1138 - Completed 200 OK, headers={masked}
2024-08-20 02:02:29 WARN  HikariPool:804 - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4m44s994ms).
2024-08-20 02:33:32 INFO  LocalContainerEntityManagerFactoryBean:650 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 02:33:32 INFO  HikariDataSource:350 - HikariPool-1 - Shutdown initiated...
2024-08-20 02:33:32 INFO  HikariDataSource:352 - HikariPool-1 - Shutdown completed.
2024-08-20 02:33:37 INFO  Version:21 - HV000001: Hibernate Validator 8.0.1.Final
2024-08-20 02:33:37 INFO  CouponApplication:50 - Starting CouponApplication using Java 21.0.2 with PID 64507 (/Users/satyakibhattacharje/Desktop/coupon 2/target/classes started by satyakibhattacharje in /Users/satyakibhattacharje/Desktop/coupon 2)
2024-08-20 02:33:37 DEBUG CouponApplication:51 - Running with Spring Boot v3.2.5, Spring v6.1.6
2024-08-20 02:33:37 INFO  CouponApplication:660 - The following 1 profile is active: "dev"
2024-08-20 02:33:37 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 02:33:37 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-20 02:33:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BaseCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ConstructsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ItemsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.MilestoneDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentMilestoneMappingRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UsersRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 52 ms. Found 18 JPA repository interfaces.
2024-08-20 02:33:38 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 02:33:38 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.AuthRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.TokenRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponFeedbackRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponIssueRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.IssueQuestionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.JpaItemsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.ProductMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.StoreMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.TransactionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.TermsAndConditionsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepo; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.PageRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.RoleRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 02:33:38 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 15 ms. Found 12 MongoDB repository interfaces.
2024-08-20 02:33:38 INFO  TomcatWebServer:109 - Tomcat initialized with port 8080 (http)
2024-08-20 02:33:38 INFO  Http11NioProtocol:173 - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-20 02:33:38 INFO  StandardService:173 - Starting service [Tomcat]
2024-08-20 02:33:38 INFO  StandardEngine:173 - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-08-20 02:33:38 INFO  [/]:173 - Initializing Spring embedded WebApplicationContext
2024-08-20 02:33:38 INFO  ServletWebServerApplicationContext:296 - Root WebApplicationContext: initialization completed in 814 ms
2024-08-20 02:33:38 INFO  LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-20 02:33:38 INFO  Version:44 - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-08-20 02:33:38 INFO  RegionFactoryInitiator:50 - HHH000026: Second-level cache disabled
2024-08-20 02:33:38 INFO  SpringPersistenceUnitInfo:87 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-20 02:33:38 INFO  HikariDataSource:110 - HikariPool-1 - Starting...
2024-08-20 02:33:38 INFO  HikariPool:565 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@319b1c77
2024-08-20 02:33:38 INFO  HikariDataSource:123 - HikariPool-1 - Start completed.
2024-08-20 02:33:39 INFO  JtaPlatformInitiator:58 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-20 02:33:39 INFO  LocalContainerEntityManagerFactoryBean:437 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 02:33:40 DEBUG JwtAuthenticationFilter:240 - Filter 'jwtAuthenticationFilter' configured for use
2024-08-20 02:33:40 INFO  client:71 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.2+13-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@19305a7c, com.mongodb.Jep395RecordCodecProvider@7e0fc5d0, com.mongodb.KotlinCodecProvider@10cb1b89]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-20 02:33:40 INFO  cluster:71 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=57011625, setName='rs0', canonicalAddress=127.0.0.1:27017, hosts=[127.0.0.1:27017], passives=[], arbiters=[], primary='127.0.0.1:27017', tagSet=TagSet{[]}, electionId=7fffffff0000000000000001, setVersion=1, topologyVersion=TopologyVersion{processId=66b601f70679bd8076e41ce4, counter=6}, lastWriteDate=Tue Aug 20 02:33:34 IST 2024, lastUpdateTimeNanos=1309716185782625}
2024-08-20 02:33:40 INFO  QueryEnhancerFactory:49 - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-20 02:33:40 WARN  JpaBaseConfiguration$JpaWebConfiguration:232 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-20 02:33:40 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.a.c.AuthController:
	{POST [/auth/register]}: register(SignUpRequestDto)
	{POST [/auth/token]}: token(LoginRequestDto)
2024-08-20 02:33:40 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.CouponController:
	{POST [/coupon/createUserSpecificConstraints]}: createUserSpecificConstraints(UserSpecificConstraintsRequest)
	{POST [/coupon/createCouponApplicability]}: createCouponApplicability(CouponApplicabilityRequest)
	{POST [/coupon/uploadsegment/batchcoupons/{couponcode}], consumes [multipart/form-data]}: uploadSegmentForBatchCoupons(String,MultipartFile,String,String)
	{PUT [/coupon/update-date-range/base]}: updateBaseCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/batch]}: updateBatchCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/unique]}: updateUniqueCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/updateUserSpecificConstraints]}: updateUserSpecificConstraints(UserSpecificConstraintsRequest)
	{PUT [/coupon/updateCouponApplicability]}: updateCouponApplicability(CouponApplicabilityRequest)
	{PUT [/coupon/usage/selection]}: updateCouponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
	{POST [/coupon/createcoupun]}: createCoupon(CouponRequest)
	{GET [/coupon/getbasecoupon/{basecouponname}]}: getBaseCoupon(String)
	{POST [/coupon/upload/{type}]}: uploadFile(MultipartFile,String)
	{POST [/coupon/uploadsegment/applicablefor/{couponcode}]}: uploadSegment(String,MultipartFile)
	{POST [/coupon/upload_items/{uniquecouponname}]}: uploadItems(String,String,MultipartFile)
	{POST [/coupon/createmongocoupon]}: createMongoCoupon(CouponRequest)
	{POST [/coupon/updatebasecoupon/{basecouponname}]}: createBaseCoupon(String,BaseCouponRequest)
	{POST [/coupon/createbasecoupon]}: createBaseCoupon(BaseCouponRequest)
	{POST [/coupon/createuniquecoupon]}: createUniqueCoupon(UniqueCouponRequest)
	{POST [/coupon/updateuniquecoupon]}: updateUniqueCoupon(UniqueCouponRequest)
	{GET [/coupon/getuniquecoupon/{uniquecouponname}]}: getUniqueCoupon(String)
	{GET [/coupon/getallbasecoupon]}: getAllBaseCoupon()
	{PUT [/coupon/delete/base]}: deleteBaseCoupons(List)
	{PUT [/coupon/delete/batch]}: deleteBatchCoupons(List)
	{PUT [/coupon/delete/unique]}: deleteUniqueCoupons(List)
	{POST [/coupon/createCouponConstruct]}: createCouponConstruct(CouponConstructRequest)
	{POST [/coupon/upload/image/{code}]}: uploadCouponImage(MultipartFile,String)
	{PUT [/coupon/createCouponConstruct]}: updateCouponConstruct(CouponConstructRequest)
	{POST [/coupon/type-selection]}: selectCouponType(CouponTypeSelectionRequest)
	{PUT [/coupon/type-selection]}: updateSelectCouponType(CouponTypeSelectionRequest)
	{POST [/coupon/usage/selection]}: couponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
	{GET [/coupon/download_temp_file/{fileName}]}: downloadTempFile(String)
	{GET [/coupon/download_general/{type}]}: downloadTemplate(String)
2024-08-20 02:33:40 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.GetCouponController:
	{GET [/getCoupons/getuserspecificconstraints/{code}]}: getUniqueCouponUserSpecificConstraints(String)
	{GET [/getCoupons/number/{mobileNumber}]}: getCouponUsingMobileNumber(String)
	{GET [/getCoupons/couponCode/{couponCode}]}: getCouponUsingCouponCode(String)
	{GET [/getCoupons/getcouponapplicability/{code}]}: getUniqueCouponApplicability(String)
	{GET [/getCoupons/getcouponconstructs/{code}]}: getUniqueCouponConstruts(String)
	{GET [/getCoupons/getcouponusage/{code}]}: getgetUniqueCouponUsage(String)
	{GET [/getCoupons/search/{couponCategory}]}: searchCoupons(String,String,int,int)
	{GET [/getCoupons/getbasecoupons]}: getBaseCoupons(int,int)
	{POST [/getCoupons/updateStatus/{couponCategory}]}: updateStatus(String,UpdateStatusRequest)
	{GET [/getCoupons/getstoremaster]}: getStoreMaster()
	{GET [/getCoupons/filter/{couponCategory}]}: getFilteredCoupons(String,String,String,String,String,String,String,String,int,int,String)
	{GET [/getCoupons/getuniquecoupons]}: getUniqueCoupons(int,int)
	{GET [/getCoupons/getbatchcoupons]}: getBatchCoupons(int,int)
	{GET [/getCoupons/getmilestonedetails]}: getMilestoneDetails(int,int)
	{GET [/getCoupons/getmilestonecoupons/{mobileNumber}]}: getMilestonesCoupons(String)
	{GET [/getCoupons/getproductmaster]}: getProductMaster()
2024-08-20 02:33:40 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.RedeemCouponController:
	{POST [/coupons/redeemcoupon]}: redeemCouponForSapphire(PosInputRequest)
	{POST [/coupons/enquirycoupon]}: enquireCouponForSapphire(PosInputEnquiry)
	{POST [/coupons/cancellationcoupon]}: settleCouponForSapphire(PosInputCancel)
	{POST [/coupons/settlementcoupon]}: cancelCouponForSapphire(PosInputSettle)
	{POST [/coupons/redeem-coupon/{couponCode}]}: redeemCoupon(PosInputRequest,String)
	{POST [/coupons/enquiry-coupon/{couponCode}]}: enquireCoupon(PosInputEnquiry,String)
	{POST [/coupons/settlement-coupon/{couponCode}]}: cancelCoupon(PosInputSettle,String)
	{POST [/coupons/cancellation-coupon/{couponCode}]}: settleCoupon(PosInputCancel,String)
	{POST [/coupons/feedback/{couponCode}]}: couponFeedback(CouponFeedbackRequest,String)
	{POST [/coupons/issue/{couponCode}]}: couponIssue(CouponIssueRequest,String)
	{POST [/coupons/issue-question]}: saveIssueQuestion(IssueQuestionRequest)
	{GET [/coupons/issue-question]}: getIssueQuestion()
2024-08-20 02:33:40 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.u.c.UserController:
	{POST [/user/login]}: login(LoginRequest)
	{GET [/user/getallroles]}: getAllRoles()
	{POST [/user/createrole]}: createRole(CreateRoleRequest)
	{POST [/user/updaterole]}: updateRole(CreateRoleRequest)
	{POST [/user/createuser]}: createUser(CreateUserRequest)
	{POST [/user/updateuser]}: updateUser(CreateUserRequest)
	{GET [/user/getuser/{email}]}: getUser(String)
	{POST [/user/resetpassword]}: resetPassword(ResetPasswordRequest)
2024-08-20 02:33:40 TRACE RequestMappingHandlerMapping:291 - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2024-08-20 02:33:40 DEBUG RequestMappingHandlerMapping:366 - 72 mappings in 'requestMappingHandlerMapping'
2024-08-20 02:33:40 DEBUG BeanNameUrlHandlerMapping:89 - Detected 0 mappings in 'beanNameHandlerMapping'
2024-08-20 02:33:40 TRACE RouterFunctionMapping:177 - 0 RouterFunction(s) in 'routerFunctionMapping'
2024-08-20 02:33:40 TRACE SimpleUrlHandlerMapping:452 - Mapped [/webjars/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2024-08-20 02:33:40 TRACE SimpleUrlHandlerMapping:452 - Mapped [/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2024-08-20 02:33:40 DEBUG SimpleUrlHandlerMapping:187 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-08-20 02:33:40 INFO  DefaultSecurityFilterChain:54 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7a82be85, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@42c10f3d, org.springframework.security.web.context.SecurityContextHolderFilter@6045d2c, org.springframework.security.web.header.HeaderWriterFilter@56510bb2, org.springframework.web.filter.CorsFilter@791a53c7, org.springframework.security.web.authentication.logout.LogoutFilter@58a5b377, com.project.coupon.security.config.JwtAuthenticationFilter@52dfd7f5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@21ff56e7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@12c9803d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@41c6dbac, org.springframework.security.web.session.SessionManagementFilter@58d103a4, org.springframework.security.web.access.ExceptionTranslationFilter@2631075f, org.springframework.security.web.access.intercept.AuthorizationFilter@29923d3d]
2024-08-20 02:33:40 DEBUG RequestMappingHandlerAdapter:634 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-08-20 02:33:40 DEBUG ExceptionHandlerExceptionResolver:305 - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-08-20 02:33:40 INFO  Http11NioProtocol:173 - Starting ProtocolHandler ["http-nio-8080"]
2024-08-20 02:33:41 INFO  TomcatWebServer:241 - Tomcat started on port 8080 (http) with context path ''
2024-08-20 02:33:41 INFO  CouponApplication:56 - Started CouponApplication in 3.62 seconds (process running for 4.28)
2024-08-20 02:33:47 INFO  [/]:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-20 02:33:47 INFO  DispatcherServlet:532 - Initializing Servlet 'dispatcherServlet'
2024-08-20 02:33:47 TRACE DispatcherServlet:530 - Detected org.springframework.web.multipart.support.StandardServletMultipartResolver@33a1bff8
2024-08-20 02:33:47 TRACE DispatcherServlet:554 - Detected org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@5c4b230c
2024-08-20 02:33:47 TRACE DispatcherServlet:580 - Detected org.springframework.web.servlet.theme.FixedThemeResolver@280cc940
2024-08-20 02:33:47 TRACE DispatcherServlet:730 - Detected DefaultRequestToViewNameTranslator
2024-08-20 02:33:47 TRACE DispatcherServlet:794 - Detected SessionFlashMapManager
2024-08-20 02:33:47 DEBUG DispatcherServlet:549 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-08-20 02:33:47 INFO  DispatcherServlet:554 - Completed initialization in 4 ms
2024-08-20 02:33:47 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 02:33:47 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 02:33:47 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 02:33:47 INFO  JwtImplementation:139 - Is Token Expired: false
2024-08-20 02:33:47 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 02:33:47 INFO  JwtImplementation:131 - Is Token Valid: true
2024-08-20 02:33:47 TRACE DispatcherServlet:117 - GET "/coupon/download_general/PRODUCT", parameters={}, headers={masked} in DispatcherServlet 'dispatcherServlet'
2024-08-20 02:33:47 TRACE RequestMappingHandlerMapping:528 - Mapped to com.project.coupon.controller.CouponController#downloadTemplate(String)
2024-08-20 02:33:47 TRACE HandlerMethod:180 - Arguments: [PRODUCT]
2024-08-20 02:33:47 DEBUG HttpEntityMethodProcessor:216 - Found 'Content-Type:application/octet-stream' in response
2024-08-20 02:33:47 TRACE HttpEntityMethodProcessor:117 - Writing [Byte array resource [resource loaded from byte array]]
2024-08-20 02:33:47 TRACE DispatcherServlet:1174 - No view rendering, null ModelAndView returned.
2024-08-20 02:33:47 DEBUG DispatcherServlet:1138 - Completed 200 OK, headers={masked}
2024-08-20 03:53:12 INFO  LocalContainerEntityManagerFactoryBean:650 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 03:53:12 INFO  HikariDataSource:350 - HikariPool-1 - Shutdown initiated...
2024-08-20 03:53:12 INFO  HikariDataSource:352 - HikariPool-1 - Shutdown completed.
2024-08-20 03:53:19 INFO  Version:21 - HV000001: Hibernate Validator 8.0.1.Final
2024-08-20 03:53:19 INFO  CouponApplication:50 - Starting CouponApplication using Java 21.0.2 with PID 82111 (/Users/satyakibhattacharje/Desktop/coupon 2/target/classes started by satyakibhattacharje in /Users/satyakibhattacharje/Desktop/coupon 2)
2024-08-20 03:53:19 DEBUG CouponApplication:51 - Running with Spring Boot v3.2.5, Spring v6.1.6
2024-08-20 03:53:19 INFO  CouponApplication:660 - The following 1 profile is active: "dev"
2024-08-20 03:53:19 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 03:53:19 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BaseCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CategoryRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ConstructsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ItemsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.MilestoneDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentMilestoneMappingRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UsersRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 49 ms. Found 21 JPA repository interfaces.
2024-08-20 03:53:19 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 03:53:19 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.AuthRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.TokenRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponFeedbackRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponIssueRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.IssueQuestionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.JpaItemsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.ProductMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.StoreMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.TransactionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CategoryEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ItemsEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.TermsAndConditionsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepo; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.PageRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.RoleRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 03:53:19 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 16 ms. Found 14 MongoDB repository interfaces.
2024-08-20 03:53:20 INFO  TomcatWebServer:109 - Tomcat initialized with port 8080 (http)
2024-08-20 03:53:20 INFO  Http11NioProtocol:173 - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-20 03:53:20 INFO  StandardService:173 - Starting service [Tomcat]
2024-08-20 03:53:20 INFO  StandardEngine:173 - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-08-20 03:53:20 INFO  [/]:173 - Initializing Spring embedded WebApplicationContext
2024-08-20 03:53:20 INFO  ServletWebServerApplicationContext:296 - Root WebApplicationContext: initialization completed in 909 ms
2024-08-20 03:53:20 INFO  LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-20 03:53:20 INFO  Version:44 - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-08-20 03:53:20 INFO  RegionFactoryInitiator:50 - HHH000026: Second-level cache disabled
2024-08-20 03:53:20 INFO  SpringPersistenceUnitInfo:87 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-20 03:53:20 INFO  HikariDataSource:110 - HikariPool-1 - Starting...
2024-08-20 03:53:20 INFO  HikariPool:565 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@27a90ce5
2024-08-20 03:53:20 INFO  HikariDataSource:123 - HikariPool-1 - Start completed.
2024-08-20 03:53:21 INFO  JtaPlatformInitiator:58 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-20 03:53:22 INFO  LocalContainerEntityManagerFactoryBean:437 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 03:53:22 DEBUG JwtAuthenticationFilter:240 - Filter 'jwtAuthenticationFilter' configured for use
2024-08-20 03:53:22 INFO  client:71 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.2+13-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@12c55199, com.mongodb.Jep395RecordCodecProvider@63f6811e, com.mongodb.KotlinCodecProvider@5565d718]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-20 03:53:22 INFO  cluster:71 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20512583, setName='rs0', canonicalAddress=127.0.0.1:27017, hosts=[127.0.0.1:27017], passives=[], arbiters=[], primary='127.0.0.1:27017', tagSet=TagSet{[]}, electionId=7fffffff0000000000000001, setVersion=1, topologyVersion=TopologyVersion{processId=66b601f70679bd8076e41ce4, counter=6}, lastWriteDate=Tue Aug 20 03:53:17 IST 2024, lastUpdateTimeNanos=1314498563138250}
2024-08-20 03:53:22 INFO  QueryEnhancerFactory:49 - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-20 03:53:23 WARN  JpaBaseConfiguration$JpaWebConfiguration:232 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-20 03:53:23 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.a.c.AuthController:
	{POST [/auth/register]}: register(SignUpRequestDto)
	{POST [/auth/token]}: token(LoginRequestDto)
2024-08-20 03:53:23 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.CouponController:
	{POST [/coupon/createmongocoupon]}: createMongoCoupon(CouponRequest)
	{POST [/coupon/createuniquecoupon]}: createUniqueCoupon(UniqueCouponRequest)
	{POST [/coupon/updateuniquecoupon]}: updateUniqueCoupon(UniqueCouponRequest)
	{GET [/coupon/getuniquecoupon/{uniquecouponname}]}: getUniqueCoupon(String)
	{GET [/coupon/getallbasecoupon]}: getAllBaseCoupon()
	{PUT [/coupon/delete/base]}: deleteBaseCoupons(List)
	{PUT [/coupon/delete/batch]}: deleteBatchCoupons(List)
	{PUT [/coupon/delete/unique]}: deleteUniqueCoupons(List)
	{POST [/coupon/createCouponConstruct]}: createCouponConstruct(CouponConstructRequest)
	{POST [/coupon/upload/image/{code}]}: uploadCouponImage(MultipartFile,String)
	{PUT [/coupon/createCouponConstruct]}: updateCouponConstruct(CouponConstructRequest)
	{POST [/coupon/type-selection]}: selectCouponType(CouponTypeSelectionRequest)
	{PUT [/coupon/type-selection]}: updateSelectCouponType(CouponTypeSelectionRequest)
	{POST [/coupon/usage/selection]}: couponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
	{GET [/coupon/download_general/{type}]}: downloadTemplate(String)
	{POST [/coupon/updatebasecoupon/{basecouponname}]}: createBaseCoupon(String,BaseCouponRequest)
	{POST [/coupon/createbasecoupon]}: createBaseCoupon(BaseCouponRequest)
	{POST [/coupon/createcoupun]}: createCoupon(CouponRequest)
	{GET [/coupon/getbasecoupon/{basecouponname}]}: getBaseCoupon(String)
	{POST [/coupon/upload/{type}]}: uploadFile(MultipartFile,String)
	{POST [/coupon/uploadsegment/applicablefor/{couponcode}]}: uploadSegment(String,MultipartFile)
	{POST [/coupon/upload_items/{uniquecouponname}]}: uploadItems(String,String,MultipartFile)
	{POST [/coupon/createUserSpecificConstraints]}: createUserSpecificConstraints(UserSpecificConstraintsRequest)
	{POST [/coupon/createCouponApplicability]}: createCouponApplicability(CouponApplicabilityRequest)
	{POST [/coupon/uploadsegment/batchcoupons/{couponcode}], consumes [multipart/form-data]}: uploadSegmentForBatchCoupons(String,MultipartFile,String,String)
	{PUT [/coupon/update-date-range/base]}: updateBaseCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/batch]}: updateBatchCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/unique]}: updateUniqueCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/updateUserSpecificConstraints]}: updateUserSpecificConstraints(UserSpecificConstraintsRequest)
	{PUT [/coupon/updateCouponApplicability]}: updateCouponApplicability(CouponApplicabilityRequest)
	{PUT [/coupon/usage/selection]}: updateCouponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
2024-08-20 03:53:23 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.GetCouponController:
	{GET [/getCoupons/filter/{couponCategory}]}: getFilteredCoupons(String,String,String,String,String,String,String,String,int,int,String)
	{GET [/getCoupons/getuniquecoupons]}: getUniqueCoupons(int,int)
	{GET [/getCoupons/getbatchcoupons]}: getBatchCoupons(int,int)
	{GET [/getCoupons/getmilestonedetails]}: getMilestoneDetails(int,int)
	{GET [/getCoupons/getmilestonecoupons/{mobileNumber}]}: getMilestonesCoupons(String)
	{GET [/getCoupons/getproductmaster]}: getProductMaster()
	{GET [/getCoupons/search/{couponCategory}]}: searchCoupons(String,String,int,int)
	{GET [/getCoupons/getbasecoupons]}: getBaseCoupons(int,int)
	{POST [/getCoupons/updateStatus/{couponCategory}]}: updateStatus(String,UpdateStatusRequest)
	{GET [/getCoupons/getstoremaster]}: getStoreMaster()
	{GET [/getCoupons/getuserspecificconstraints/{code}]}: getUniqueCouponUserSpecificConstraints(String)
	{GET [/getCoupons/number/{mobileNumber}]}: getCouponUsingMobileNumber(String)
	{GET [/getCoupons/couponCode/{couponCode}]}: getCouponUsingCouponCode(String)
	{GET [/getCoupons/getcouponapplicability/{code}]}: getUniqueCouponApplicability(String)
	{GET [/getCoupons/getcouponconstructs/{code}]}: getUniqueCouponConstruts(String)
	{GET [/getCoupons/getcouponusage/{code}]}: getgetUniqueCouponUsage(String)
2024-08-20 03:53:23 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.RedeemCouponController:
	{POST [/coupons/issue-question]}: saveIssueQuestion(IssueQuestionRequest)
	{GET [/coupons/issue-question]}: getIssueQuestion()
	{POST [/coupons/redeem-coupon/{couponCode}]}: redeemCoupon(PosInputRequest,String)
	{POST [/coupons/enquiry-coupon/{couponCode}]}: enquireCoupon(PosInputEnquiry,String)
	{POST [/coupons/settlement-coupon/{couponCode}]}: cancelCoupon(PosInputSettle,String)
	{POST [/coupons/cancellation-coupon/{couponCode}]}: settleCoupon(PosInputCancel,String)
	{POST [/coupons/feedback/{couponCode}]}: couponFeedback(CouponFeedbackRequest,String)
	{POST [/coupons/issue/{couponCode}]}: couponIssue(CouponIssueRequest,String)
	{POST [/coupons/redeemcoupon]}: redeemCouponForSapphire(PosInputRequest)
	{POST [/coupons/enquirycoupon]}: enquireCouponForSapphire(PosInputEnquiry)
	{POST [/coupons/cancellationcoupon]}: settleCouponForSapphire(PosInputCancel)
	{POST [/coupons/settlementcoupon]}: cancelCouponForSapphire(PosInputSettle)
2024-08-20 03:53:23 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.u.c.UserController:
	{POST [/user/login]}: login(LoginRequest)
	{POST [/user/createrole]}: createRole(CreateRoleRequest)
	{POST [/user/updaterole]}: updateRole(CreateRoleRequest)
	{POST [/user/createuser]}: createUser(CreateUserRequest)
	{POST [/user/updateuser]}: updateUser(CreateUserRequest)
	{GET [/user/getuser/{email}]}: getUser(String)
	{POST [/user/resetpassword]}: resetPassword(ResetPasswordRequest)
	{GET [/user/getallroles]}: getAllRoles()
2024-08-20 03:53:23 TRACE RequestMappingHandlerMapping:291 - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2024-08-20 03:53:23 DEBUG RequestMappingHandlerMapping:366 - 71 mappings in 'requestMappingHandlerMapping'
2024-08-20 03:53:23 DEBUG BeanNameUrlHandlerMapping:89 - Detected 0 mappings in 'beanNameHandlerMapping'
2024-08-20 03:53:23 TRACE RouterFunctionMapping:177 - 0 RouterFunction(s) in 'routerFunctionMapping'
2024-08-20 03:53:23 TRACE SimpleUrlHandlerMapping:452 - Mapped [/webjars/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2024-08-20 03:53:23 TRACE SimpleUrlHandlerMapping:452 - Mapped [/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2024-08-20 03:53:23 DEBUG SimpleUrlHandlerMapping:187 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-08-20 03:53:23 INFO  DefaultSecurityFilterChain:54 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1eb16e4b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1d0544b3, org.springframework.security.web.context.SecurityContextHolderFilter@46460f58, org.springframework.security.web.header.HeaderWriterFilter@1c510181, org.springframework.web.filter.CorsFilter@22d7e121, org.springframework.security.web.authentication.logout.LogoutFilter@4c9a3ae, com.project.coupon.security.config.JwtAuthenticationFilter@7a80b2e6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2c283221, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@17dee9f9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@742af13a, org.springframework.security.web.session.SessionManagementFilter@4219e848, org.springframework.security.web.access.ExceptionTranslationFilter@7eecb648, org.springframework.security.web.access.intercept.AuthorizationFilter@13421eb0]
2024-08-20 03:53:23 DEBUG RequestMappingHandlerAdapter:634 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-08-20 03:53:23 DEBUG ExceptionHandlerExceptionResolver:305 - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-08-20 03:53:23 INFO  Http11NioProtocol:173 - Starting ProtocolHandler ["http-nio-8080"]
2024-08-20 03:53:23 INFO  TomcatWebServer:241 - Tomcat started on port 8080 (http) with context path ''
2024-08-20 03:53:23 INFO  CouponApplication:56 - Started CouponApplication in 4.387 seconds (process running for 5.028)
2024-08-20 04:22:59 INFO  LocalContainerEntityManagerFactoryBean:650 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 04:22:59 INFO  HikariDataSource:350 - HikariPool-1 - Shutdown initiated...
2024-08-20 04:22:59 INFO  HikariDataSource:352 - HikariPool-1 - Shutdown completed.
2024-08-20 12:18:48 INFO  Version:21 - HV000001: Hibernate Validator 8.0.1.Final
2024-08-20 12:18:48 INFO  CouponApplication:50 - Starting CouponApplication using Java 21.0.2 with PID 15487 (/Users/satyakibhattacharje/Desktop/coupon 2/target/classes started by satyakibhattacharje in /Users/satyakibhattacharje/Desktop/coupon 2)
2024-08-20 12:18:48 DEBUG CouponApplication:51 - Running with Spring Boot v3.2.5, Spring v6.1.6
2024-08-20 12:18:48 INFO  CouponApplication:660 - The following 1 profile is active: "dev"
2024-08-20 12:18:48 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 12:18:48 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-20 12:18:48 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BaseCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:18:48 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:18:48 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CategoryRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:18:48 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ConstructsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:18:48 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:18:48 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ItemsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:18:48 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.MilestoneDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:18:48 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:18:48 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentMilestoneMappingRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UsersRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 54 ms. Found 22 JPA repository interfaces.
2024-08-20 12:18:49 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 12:18:49 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-20 12:18:49 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.AuthRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.TokenRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponFeedbackRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponIssueRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.DataLakeDataRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.IssueQuestionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.JpaItemsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.ProductMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.StoreMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.TransactionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CategoryEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ItemsEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.TermsAndConditionsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepo; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.PageRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.RoleRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:18:49 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 16 ms. Found 14 MongoDB repository interfaces.
2024-08-20 12:18:49 INFO  TomcatWebServer:109 - Tomcat initialized with port 8080 (http)
2024-08-20 12:18:49 INFO  Http11NioProtocol:173 - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-20 12:18:49 INFO  StandardService:173 - Starting service [Tomcat]
2024-08-20 12:18:49 INFO  StandardEngine:173 - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-08-20 12:18:49 INFO  [/]:173 - Initializing Spring embedded WebApplicationContext
2024-08-20 12:18:49 INFO  ServletWebServerApplicationContext:296 - Root WebApplicationContext: initialization completed in 1025 ms
2024-08-20 12:18:49 INFO  LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-20 12:18:49 INFO  Version:44 - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-08-20 12:18:49 INFO  RegionFactoryInitiator:50 - HHH000026: Second-level cache disabled
2024-08-20 12:18:49 INFO  SpringPersistenceUnitInfo:87 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-20 12:18:50 INFO  HikariDataSource:110 - HikariPool-1 - Starting...
2024-08-20 12:18:50 INFO  HikariPool:565 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1f75fd1d
2024-08-20 12:18:50 INFO  HikariDataSource:123 - HikariPool-1 - Start completed.
2024-08-20 12:18:51 INFO  JtaPlatformInitiator:58 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-20 12:18:51 INFO  LocalContainerEntityManagerFactoryBean:437 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 12:18:51 DEBUG JwtAuthenticationFilter:240 - Filter 'jwtAuthenticationFilter' configured for use
2024-08-20 12:18:51 INFO  client:71 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.2+13-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@8374911, com.mongodb.Jep395RecordCodecProvider@106dee26, com.mongodb.KotlinCodecProvider@6b0aa757]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-20 12:18:51 INFO  cluster:71 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=43607459, setName='rs0', canonicalAddress=127.0.0.1:27017, hosts=[127.0.0.1:27017], passives=[], arbiters=[], primary='127.0.0.1:27017', tagSet=TagSet{[]}, electionId=7fffffff0000000000000001, setVersion=1, topologyVersion=TopologyVersion{processId=66b601f70679bd8076e41ce4, counter=6}, lastWriteDate=Tue Aug 20 12:18:48 IST 2024, lastUpdateTimeNanos=1323152045834458}
2024-08-20 12:18:52 INFO  QueryEnhancerFactory:49 - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-20 12:18:52 WARN  JpaBaseConfiguration$JpaWebConfiguration:232 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-20 12:18:52 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.a.c.AuthController:
	{POST [/auth/register]}: register(SignUpRequestDto)
	{POST [/auth/token]}: token(LoginRequestDto)
2024-08-20 12:18:52 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.CouponController:
	{POST [/coupon/createcoupun]}: createCoupon(CouponRequest)
	{GET [/coupon/getbasecoupon/{basecouponname}]}: getBaseCoupon(String)
	{POST [/coupon/upload/{type}]}: uploadFile(MultipartFile,String)
	{POST [/coupon/uploadsegment/applicablefor/{couponcode}]}: uploadSegment(String,MultipartFile)
	{POST [/coupon/upload_items/{uniquecouponname}]}: uploadItems(String,String,MultipartFile)
	{POST [/coupon/createmongocoupon]}: createMongoCoupon(CouponRequest)
	{POST [/coupon/updatebasecoupon/{basecouponname}]}: createBaseCoupon(String,BaseCouponRequest)
	{POST [/coupon/createbasecoupon]}: createBaseCoupon(BaseCouponRequest)
	{POST [/coupon/createuniquecoupon]}: createUniqueCoupon(UniqueCouponRequest)
	{POST [/coupon/updateuniquecoupon]}: updateUniqueCoupon(UniqueCouponRequest)
	{GET [/coupon/getuniquecoupon/{uniquecouponname}]}: getUniqueCoupon(String)
	{GET [/coupon/getallbasecoupon]}: getAllBaseCoupon()
	{PUT [/coupon/delete/base]}: deleteBaseCoupons(List)
	{PUT [/coupon/delete/batch]}: deleteBatchCoupons(List)
	{PUT [/coupon/delete/unique]}: deleteUniqueCoupons(List)
	{POST [/coupon/createCouponConstruct]}: createCouponConstruct(CouponConstructRequest)
	{POST [/coupon/upload/image/{code}]}: uploadCouponImage(MultipartFile,String)
	{PUT [/coupon/createCouponConstruct]}: updateCouponConstruct(CouponConstructRequest)
	{POST [/coupon/type-selection]}: selectCouponType(CouponTypeSelectionRequest)
	{PUT [/coupon/type-selection]}: updateSelectCouponType(CouponTypeSelectionRequest)
	{POST [/coupon/usage/selection]}: couponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
	{POST [/coupon/createmilestonecoupons]}: createMilestoneCoupons(MilestoneRequest)
	{GET [/coupon/download_general/{type}]}: downloadTemplate(String)
	{POST [/coupon/createUserSpecificConstraints]}: createUserSpecificConstraints(UserSpecificConstraintsRequest)
	{POST [/coupon/createCouponApplicability]}: createCouponApplicability(CouponApplicabilityRequest)
	{POST [/coupon/uploadsegment/batchcoupons/{couponcode}], consumes [multipart/form-data]}: uploadSegmentForBatchCoupons(String,MultipartFile,String,String)
	{PUT [/coupon/update-date-range/base]}: updateBaseCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/batch]}: updateBatchCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/unique]}: updateUniqueCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/updateUserSpecificConstraints]}: updateUserSpecificConstraints(UserSpecificConstraintsRequest)
	{PUT [/coupon/updateCouponApplicability]}: updateCouponApplicability(CouponApplicabilityRequest)
	{PUT [/coupon/usage/selection]}: updateCouponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
	{POST [/coupon/uploadsegmentformilestone/{journeyName}]}: uploadSegmentForMilestoneCoupon(MultipartFile,String)
2024-08-20 12:18:52 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.GetCouponController:
	{GET [/getCoupons/search/{couponCategory}]}: searchCoupons(String,String,int,int)
	{GET [/getCoupons/getbasecoupons]}: getBaseCoupons(int,int)
	{POST [/getCoupons/updateStatus/{couponCategory}]}: updateStatus(String,UpdateStatusRequest)
	{GET [/getCoupons/getstoremaster]}: getStoreMaster()
	{GET [/getCoupons/filter/{couponCategory}]}: getFilteredCoupons(String,String,String,String,String,String,String,String,int,int,String)
	{GET [/getCoupons/getuniquecoupons]}: getUniqueCoupons(int,int)
	{GET [/getCoupons/getbatchcoupons]}: getBatchCoupons(int,int)
	{GET [/getCoupons/getmilestonedetails]}: getMilestoneDetails(int,int)
	{GET [/getCoupons/getmilestonecoupons/{mobileNumber}]}: getMilestonesCoupons(String)
	{GET [/getCoupons/getproductmaster]}: getProductMaster()
	{GET [/getCoupons/number/{mobileNumber}]}: getCouponUsingMobileNumber(String)
	{GET [/getCoupons/couponCode/{couponCode}]}: getCouponUsingCouponCode(String)
	{GET [/getCoupons/getcouponapplicability/{code}]}: getUniqueCouponApplicability(String)
	{GET [/getCoupons/getcouponconstructs/{code}]}: getUniqueCouponConstruts(String)
	{GET [/getCoupons/getcouponusage/{code}]}: getgetUniqueCouponUsage(String)
	{GET [/getCoupons/getuserspecificconstraints/{code}]}: getUniqueCouponUserSpecificConstraints(String)
2024-08-20 12:18:52 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.RedeemCouponController:
	{POST [/coupons/redeem-coupon/{couponCode}]}: redeemCoupon(PosInputRequest,String)
	{POST [/coupons/enquiry-coupon/{couponCode}]}: enquireCoupon(PosInputEnquiry,String)
	{POST [/coupons/settlement-coupon/{couponCode}]}: cancelCoupon(PosInputSettle,String)
	{POST [/coupons/cancellation-coupon/{couponCode}]}: settleCoupon(PosInputCancel,String)
	{POST [/coupons/feedback/{couponCode}]}: couponFeedback(CouponFeedbackRequest,String)
	{POST [/coupons/issue/{couponCode}]}: couponIssue(CouponIssueRequest,String)
	{POST [/coupons/issue-question]}: saveIssueQuestion(IssueQuestionRequest)
	{GET [/coupons/issue-question]}: getIssueQuestion()
	{POST [/coupons/redeemcoupon]}: redeemCouponForSapphire(PosInputRequest)
	{POST [/coupons/enquirycoupon]}: enquireCouponForSapphire(PosInputEnquiry)
	{POST [/coupons/cancellationcoupon]}: settleCouponForSapphire(PosInputCancel)
	{POST [/coupons/settlementcoupon]}: cancelCouponForSapphire(PosInputSettle)
2024-08-20 12:18:52 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.u.c.UserController:
	{POST [/user/createrole]}: createRole(CreateRoleRequest)
	{POST [/user/updaterole]}: updateRole(CreateRoleRequest)
	{POST [/user/createuser]}: createUser(CreateUserRequest)
	{POST [/user/updateuser]}: updateUser(CreateUserRequest)
	{GET [/user/getuser/{email}]}: getUser(String)
	{POST [/user/resetpassword]}: resetPassword(ResetPasswordRequest)
	{GET [/user/getallroles]}: getAllRoles()
	{POST [/user/login]}: login(LoginRequest)
2024-08-20 12:18:52 TRACE RequestMappingHandlerMapping:291 - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2024-08-20 12:18:52 DEBUG RequestMappingHandlerMapping:366 - 73 mappings in 'requestMappingHandlerMapping'
2024-08-20 12:18:52 DEBUG BeanNameUrlHandlerMapping:89 - Detected 0 mappings in 'beanNameHandlerMapping'
2024-08-20 12:18:52 TRACE RouterFunctionMapping:177 - 0 RouterFunction(s) in 'routerFunctionMapping'
2024-08-20 12:18:52 TRACE SimpleUrlHandlerMapping:452 - Mapped [/webjars/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2024-08-20 12:18:52 TRACE SimpleUrlHandlerMapping:452 - Mapped [/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2024-08-20 12:18:52 DEBUG SimpleUrlHandlerMapping:187 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-08-20 12:18:52 INFO  DefaultSecurityFilterChain:54 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@13a80b56, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1714fe69, org.springframework.security.web.context.SecurityContextHolderFilter@47a1b2f7, org.springframework.security.web.header.HeaderWriterFilter@6e133ed, org.springframework.web.filter.CorsFilter@3672ba7d, org.springframework.security.web.authentication.logout.LogoutFilter@6801b4a4, com.project.coupon.security.config.JwtAuthenticationFilter@67e7fe73, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@379445f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1f7e6c3a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@24e14ca6, org.springframework.security.web.session.SessionManagementFilter@4e9c23b7, org.springframework.security.web.access.ExceptionTranslationFilter@bfe51c3, org.springframework.security.web.access.intercept.AuthorizationFilter@300f715]
2024-08-20 12:18:52 DEBUG RequestMappingHandlerAdapter:634 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-08-20 12:18:52 DEBUG ExceptionHandlerExceptionResolver:305 - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-08-20 12:18:52 INFO  Http11NioProtocol:173 - Starting ProtocolHandler ["http-nio-8080"]
2024-08-20 12:18:52 INFO  TomcatWebServer:241 - Tomcat started on port 8080 (http) with context path ''
2024-08-20 12:18:52 INFO  CouponApplication:56 - Started CouponApplication in 4.42 seconds (process running for 5.035)
2024-08-20 12:19:21 INFO  [/]:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-20 12:19:21 INFO  DispatcherServlet:532 - Initializing Servlet 'dispatcherServlet'
2024-08-20 12:19:21 TRACE DispatcherServlet:530 - Detected org.springframework.web.multipart.support.StandardServletMultipartResolver@5e4632cb
2024-08-20 12:19:21 TRACE DispatcherServlet:554 - Detected org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@2c1e4d9e
2024-08-20 12:19:21 TRACE DispatcherServlet:580 - Detected org.springframework.web.servlet.theme.FixedThemeResolver@11b59291
2024-08-20 12:19:21 TRACE DispatcherServlet:730 - Detected DefaultRequestToViewNameTranslator
2024-08-20 12:19:21 TRACE DispatcherServlet:794 - Detected SessionFlashMapManager
2024-08-20 12:19:21 DEBUG DispatcherServlet:549 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-08-20 12:19:21 INFO  DispatcherServlet:554 - Completed initialization in 8 ms
2024-08-20 12:19:21 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 12:19:21 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 12:19:21 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 12:19:21 INFO  JwtImplementation:139 - Is Token Expired: false
2024-08-20 12:19:21 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 12:19:21 INFO  JwtImplementation:131 - Is Token Valid: true
2024-08-20 12:19:22 TRACE DispatcherServlet:117 - GET "/coupon/download_general/PRODUCT", parameters={}, headers={masked} in DispatcherServlet 'dispatcherServlet'
2024-08-20 12:19:22 TRACE RequestMappingHandlerMapping:528 - Mapped to com.project.coupon.controller.CouponController#downloadTemplate(String)
2024-08-20 12:19:22 TRACE HandlerMethod:180 - Arguments: [PRODUCT]
2024-08-20 12:19:22 DEBUG ExceptionHandlerExceptionResolver:420 - Using @ExceptionHandler com.project.coupon.exceptions.GlobalExceptionHandler#handleGenericException(Exception)
2024-08-20 12:19:22 TRACE HandlerMethod:180 - Arguments: [java.lang.IllegalArgumentException: Invalid template type]
2024-08-20 12:19:22 ERROR GlobalExceptionHandler:121 - Invalid template type [com.project.coupon.controller.CouponController.downloadTemplate(CouponController.java:430), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255), org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188), org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831), org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014), org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903), jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885), jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150), org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108), org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365), org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374), com.project.coupon.security.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:86), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374), org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374), org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82), org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374), org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191), org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113), org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195), org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113), org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74), org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150), org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150), org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150), org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52), org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191), org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63), java.base/java.lang.Thread.run(Thread.java:1583)]
2024-08-20 12:19:22 DEBUG HttpEntityMethodProcessor:275 - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-08-20 12:19:22 TRACE HttpEntityMethodProcessor:117 - Writing [{message=An unexpected error occurred. Please try again later., status=failure}]
2024-08-20 12:19:22 DEBUG ExceptionHandlerExceptionResolver:179 - Resolved [java.lang.IllegalArgumentException: Invalid template type]
2024-08-20 12:19:22 TRACE DispatcherServlet:1174 - No view rendering, null ModelAndView returned.
2024-08-20 12:19:22 DEBUG DispatcherServlet:1138 - Completed 500 INTERNAL_SERVER_ERROR, headers={masked}
2024-08-20 12:20:03 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 12:20:03 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 12:20:03 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 12:20:03 INFO  JwtImplementation:139 - Is Token Expired: false
2024-08-20 12:20:03 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 12:20:03 INFO  JwtImplementation:131 - Is Token Valid: true
2024-08-20 12:20:03 TRACE DispatcherServlet:117 - GET "/coupon/download_general/PRODUCT_INCLUSION", parameters={}, headers={masked} in DispatcherServlet 'dispatcherServlet'
2024-08-20 12:20:03 TRACE RequestMappingHandlerMapping:528 - Mapped to com.project.coupon.controller.CouponController#downloadTemplate(String)
2024-08-20 12:20:03 TRACE HandlerMethod:180 - Arguments: [PRODUCT_INCLUSION]
2024-08-20 12:20:03 DEBUG HttpEntityMethodProcessor:216 - Found 'Content-Type:application/octet-stream' in response
2024-08-20 12:20:03 TRACE HttpEntityMethodProcessor:117 - Writing [Byte array resource [resource loaded from byte array]]
2024-08-20 12:20:03 TRACE DispatcherServlet:1174 - No view rendering, null ModelAndView returned.
2024-08-20 12:20:03 DEBUG DispatcherServlet:1138 - Completed 200 OK, headers={masked}
2024-08-20 12:22:12 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 12:22:12 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 12:22:12 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 12:22:12 INFO  JwtImplementation:139 - Is Token Expired: false
2024-08-20 12:22:12 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 12:22:12 INFO  JwtImplementation:131 - Is Token Valid: true
2024-08-20 12:22:12 TRACE DispatcherServlet:117 - POST "/coupon/upload_items/SUMMER2031", parameters={multipart}, headers={masked} in DispatcherServlet 'dispatcherServlet'
2024-08-20 12:22:12 TRACE RequestMappingHandlerMapping:528 - Mapped to com.project.coupon.controller.CouponController#uploadItems(String, String, MultipartFile)
2024-08-20 12:22:12 TRACE HandlerMethod:180 - Arguments: [SUMMER2031, PRODUCT_INCLUSION, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1dc06c0c]
2024-08-20 12:22:12 DEBUG HttpEntityMethodProcessor:275 - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2024-08-20 12:22:12 TRACE HttpEntityMethodProcessor:117 - Writing ["Error processing the file: Cannot get a STRING value from a NUMERIC cell"]
2024-08-20 12:22:12 TRACE DispatcherServlet:1174 - No view rendering, null ModelAndView returned.
2024-08-20 12:22:12 DEBUG DispatcherServlet:1138 - Completed 500 INTERNAL_SERVER_ERROR, headers={masked}
2024-08-20 12:26:25 INFO  LocalContainerEntityManagerFactoryBean:650 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 12:26:25 INFO  HikariDataSource:350 - HikariPool-1 - Shutdown initiated...
2024-08-20 12:26:25 INFO  HikariDataSource:352 - HikariPool-1 - Shutdown completed.
2024-08-20 12:26:35 INFO  Version:21 - HV000001: Hibernate Validator 8.0.1.Final
2024-08-20 12:26:35 INFO  CouponApplication:50 - Starting CouponApplication using Java 21.0.2 with PID 17208 (/Users/satyakibhattacharje/Desktop/coupon 2/target/classes started by satyakibhattacharje in /Users/satyakibhattacharje/Desktop/coupon 2)
2024-08-20 12:26:35 DEBUG CouponApplication:51 - Running with Spring Boot v3.2.5, Spring v6.1.6
2024-08-20 12:26:35 INFO  CouponApplication:660 - The following 1 profile is active: "dev"
2024-08-20 12:26:36 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 12:26:36 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BaseCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CategoryRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ConstructsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ItemsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.MilestoneDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentMilestoneMappingRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UsersRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 59 ms. Found 22 JPA repository interfaces.
2024-08-20 12:26:36 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 12:26:36 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.AuthRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.TokenRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponFeedbackRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponIssueRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.DataLakeDataRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.IssueQuestionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.JpaItemsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.ProductMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.StoreMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.TransactionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CategoryEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ItemsEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.TermsAndConditionsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepo; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.PageRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.RoleRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:26:36 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 15 ms. Found 14 MongoDB repository interfaces.
2024-08-20 12:26:36 INFO  TomcatWebServer:109 - Tomcat initialized with port 8080 (http)
2024-08-20 12:26:36 INFO  Http11NioProtocol:173 - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-20 12:26:36 INFO  StandardService:173 - Starting service [Tomcat]
2024-08-20 12:26:36 INFO  StandardEngine:173 - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-08-20 12:26:36 INFO  [/]:173 - Initializing Spring embedded WebApplicationContext
2024-08-20 12:26:36 INFO  ServletWebServerApplicationContext:296 - Root WebApplicationContext: initialization completed in 913 ms
2024-08-20 12:26:36 INFO  LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-20 12:26:36 INFO  Version:44 - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-08-20 12:26:36 INFO  RegionFactoryInitiator:50 - HHH000026: Second-level cache disabled
2024-08-20 12:26:36 INFO  SpringPersistenceUnitInfo:87 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-20 12:26:36 INFO  HikariDataSource:110 - HikariPool-1 - Starting...
2024-08-20 12:26:37 INFO  HikariPool:565 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@795faad
2024-08-20 12:26:37 INFO  HikariDataSource:123 - HikariPool-1 - Start completed.
2024-08-20 12:26:37 INFO  JtaPlatformInitiator:58 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-20 12:26:38 INFO  LocalContainerEntityManagerFactoryBean:437 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 12:26:38 DEBUG JwtAuthenticationFilter:240 - Filter 'jwtAuthenticationFilter' configured for use
2024-08-20 12:26:38 INFO  client:71 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.2+13-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@3cc9bde9, com.mongodb.Jep395RecordCodecProvider@75bbeb89, com.mongodb.KotlinCodecProvider@197bf5ef]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-20 12:26:38 INFO  cluster:71 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=45899709, setName='rs0', canonicalAddress=127.0.0.1:27017, hosts=[127.0.0.1:27017], passives=[], arbiters=[], primary='127.0.0.1:27017', tagSet=TagSet{[]}, electionId=7fffffff0000000000000001, setVersion=1, topologyVersion=TopologyVersion{processId=66b601f70679bd8076e41ce4, counter=6}, lastWriteDate=Tue Aug 20 12:26:32 IST 2024, lastUpdateTimeNanos=1323618552862875}
2024-08-20 12:26:38 INFO  QueryEnhancerFactory:49 - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-20 12:26:38 WARN  JpaBaseConfiguration$JpaWebConfiguration:232 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-20 12:26:39 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.a.c.AuthController:
	{POST [/auth/register]}: register(SignUpRequestDto)
	{POST [/auth/token]}: token(LoginRequestDto)
2024-08-20 12:26:39 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.CouponController:
	{POST [/coupon/createcoupun]}: createCoupon(CouponRequest)
	{GET [/coupon/getbasecoupon/{basecouponname}]}: getBaseCoupon(String)
	{POST [/coupon/upload/{type}]}: uploadFile(MultipartFile,String)
	{POST [/coupon/uploadsegment/applicablefor/{couponcode}]}: uploadSegment(String,MultipartFile)
	{POST [/coupon/upload_items/{uniquecouponname}]}: uploadItems(String,String,MultipartFile)
	{POST [/coupon/createmongocoupon]}: createMongoCoupon(CouponRequest)
	{POST [/coupon/updatebasecoupon/{basecouponname}]}: createBaseCoupon(String,BaseCouponRequest)
	{POST [/coupon/createbasecoupon]}: createBaseCoupon(BaseCouponRequest)
	{POST [/coupon/createuniquecoupon]}: createUniqueCoupon(UniqueCouponRequest)
	{POST [/coupon/updateuniquecoupon]}: updateUniqueCoupon(UniqueCouponRequest)
	{GET [/coupon/getuniquecoupon/{uniquecouponname}]}: getUniqueCoupon(String)
	{GET [/coupon/getallbasecoupon]}: getAllBaseCoupon()
	{PUT [/coupon/delete/base]}: deleteBaseCoupons(List)
	{PUT [/coupon/delete/batch]}: deleteBatchCoupons(List)
	{PUT [/coupon/delete/unique]}: deleteUniqueCoupons(List)
	{POST [/coupon/createCouponConstruct]}: createCouponConstruct(CouponConstructRequest)
	{POST [/coupon/upload/image/{code}]}: uploadCouponImage(MultipartFile,String)
	{PUT [/coupon/createCouponConstruct]}: updateCouponConstruct(CouponConstructRequest)
	{POST [/coupon/type-selection]}: selectCouponType(CouponTypeSelectionRequest)
	{PUT [/coupon/type-selection]}: updateSelectCouponType(CouponTypeSelectionRequest)
	{POST [/coupon/usage/selection]}: couponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
	{POST [/coupon/createmilestonecoupons]}: createMilestoneCoupons(MilestoneRequest)
	{GET [/coupon/download_general/{type}]}: downloadTemplate(String)
	{POST [/coupon/createUserSpecificConstraints]}: createUserSpecificConstraints(UserSpecificConstraintsRequest)
	{POST [/coupon/createCouponApplicability]}: createCouponApplicability(CouponApplicabilityRequest)
	{POST [/coupon/uploadsegment/batchcoupons/{couponcode}], consumes [multipart/form-data]}: uploadSegmentForBatchCoupons(String,MultipartFile,String,String)
	{PUT [/coupon/update-date-range/base]}: updateBaseCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/batch]}: updateBatchCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/unique]}: updateUniqueCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/updateUserSpecificConstraints]}: updateUserSpecificConstraints(UserSpecificConstraintsRequest)
	{PUT [/coupon/updateCouponApplicability]}: updateCouponApplicability(CouponApplicabilityRequest)
	{PUT [/coupon/usage/selection]}: updateCouponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
	{POST [/coupon/uploadsegmentformilestone/{journeyName}]}: uploadSegmentForMilestoneCoupon(MultipartFile,String)
2024-08-20 12:26:39 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.GetCouponController:
	{GET [/getCoupons/search/{couponCategory}]}: searchCoupons(String,String,int,int)
	{GET [/getCoupons/getbasecoupons]}: getBaseCoupons(int,int)
	{POST [/getCoupons/updateStatus/{couponCategory}]}: updateStatus(String,UpdateStatusRequest)
	{GET [/getCoupons/getstoremaster]}: getStoreMaster()
	{GET [/getCoupons/filter/{couponCategory}]}: getFilteredCoupons(String,String,String,String,String,String,String,String,int,int,String)
	{GET [/getCoupons/getuniquecoupons]}: getUniqueCoupons(int,int)
	{GET [/getCoupons/getbatchcoupons]}: getBatchCoupons(int,int)
	{GET [/getCoupons/getmilestonedetails]}: getMilestoneDetails(int,int)
	{GET [/getCoupons/getmilestonecoupons/{mobileNumber}]}: getMilestonesCoupons(String)
	{GET [/getCoupons/getproductmaster]}: getProductMaster()
	{GET [/getCoupons/number/{mobileNumber}]}: getCouponUsingMobileNumber(String)
	{GET [/getCoupons/couponCode/{couponCode}]}: getCouponUsingCouponCode(String)
	{GET [/getCoupons/getcouponapplicability/{code}]}: getUniqueCouponApplicability(String)
	{GET [/getCoupons/getcouponconstructs/{code}]}: getUniqueCouponConstruts(String)
	{GET [/getCoupons/getcouponusage/{code}]}: getgetUniqueCouponUsage(String)
	{GET [/getCoupons/getuserspecificconstraints/{code}]}: getUniqueCouponUserSpecificConstraints(String)
2024-08-20 12:26:39 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.RedeemCouponController:
	{POST [/coupons/redeem-coupon/{couponCode}]}: redeemCoupon(PosInputRequest,String)
	{POST [/coupons/enquiry-coupon/{couponCode}]}: enquireCoupon(PosInputEnquiry,String)
	{POST [/coupons/settlement-coupon/{couponCode}]}: cancelCoupon(PosInputSettle,String)
	{POST [/coupons/cancellation-coupon/{couponCode}]}: settleCoupon(PosInputCancel,String)
	{POST [/coupons/feedback/{couponCode}]}: couponFeedback(CouponFeedbackRequest,String)
	{POST [/coupons/issue/{couponCode}]}: couponIssue(CouponIssueRequest,String)
	{POST [/coupons/issue-question]}: saveIssueQuestion(IssueQuestionRequest)
	{GET [/coupons/issue-question]}: getIssueQuestion()
	{POST [/coupons/redeemcoupon]}: redeemCouponForSapphire(PosInputRequest)
	{POST [/coupons/enquirycoupon]}: enquireCouponForSapphire(PosInputEnquiry)
	{POST [/coupons/cancellationcoupon]}: settleCouponForSapphire(PosInputCancel)
	{POST [/coupons/settlementcoupon]}: cancelCouponForSapphire(PosInputSettle)
2024-08-20 12:26:39 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.u.c.UserController:
	{POST [/user/login]}: login(LoginRequest)
	{POST [/user/createrole]}: createRole(CreateRoleRequest)
	{POST [/user/updaterole]}: updateRole(CreateRoleRequest)
	{POST [/user/createuser]}: createUser(CreateUserRequest)
	{POST [/user/updateuser]}: updateUser(CreateUserRequest)
	{GET [/user/getuser/{email}]}: getUser(String)
	{POST [/user/resetpassword]}: resetPassword(ResetPasswordRequest)
	{GET [/user/getallroles]}: getAllRoles()
2024-08-20 12:26:39 TRACE RequestMappingHandlerMapping:291 - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2024-08-20 12:26:39 DEBUG RequestMappingHandlerMapping:366 - 73 mappings in 'requestMappingHandlerMapping'
2024-08-20 12:26:39 DEBUG BeanNameUrlHandlerMapping:89 - Detected 0 mappings in 'beanNameHandlerMapping'
2024-08-20 12:26:39 TRACE RouterFunctionMapping:177 - 0 RouterFunction(s) in 'routerFunctionMapping'
2024-08-20 12:26:39 TRACE SimpleUrlHandlerMapping:452 - Mapped [/webjars/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2024-08-20 12:26:39 TRACE SimpleUrlHandlerMapping:452 - Mapped [/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2024-08-20 12:26:39 DEBUG SimpleUrlHandlerMapping:187 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-08-20 12:26:39 INFO  DefaultSecurityFilterChain:54 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@15dee504, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7de752dd, org.springframework.security.web.context.SecurityContextHolderFilter@5fcf9bff, org.springframework.security.web.header.HeaderWriterFilter@6903e134, org.springframework.web.filter.CorsFilter@729668d7, org.springframework.security.web.authentication.logout.LogoutFilter@5fca8642, com.project.coupon.security.config.JwtAuthenticationFilter@1147a8de, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@70143ee4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@74f1c9b9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@201bc8f0, org.springframework.security.web.session.SessionManagementFilter@6b3decaa, org.springframework.security.web.access.ExceptionTranslationFilter@4b28d787, org.springframework.security.web.access.intercept.AuthorizationFilter@42754496]
2024-08-20 12:26:39 DEBUG RequestMappingHandlerAdapter:634 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-08-20 12:26:39 DEBUG ExceptionHandlerExceptionResolver:305 - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-08-20 12:26:39 INFO  Http11NioProtocol:173 - Starting ProtocolHandler ["http-nio-8080"]
2024-08-20 12:26:39 INFO  TomcatWebServer:241 - Tomcat started on port 8080 (http) with context path ''
2024-08-20 12:26:39 INFO  CouponApplication:56 - Started CouponApplication in 3.831 seconds (process running for 4.612)
2024-08-20 12:26:45 INFO  [/]:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-20 12:26:45 INFO  DispatcherServlet:532 - Initializing Servlet 'dispatcherServlet'
2024-08-20 12:26:45 TRACE DispatcherServlet:530 - Detected org.springframework.web.multipart.support.StandardServletMultipartResolver@3f47094a
2024-08-20 12:26:45 TRACE DispatcherServlet:554 - Detected org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@6cf4ac81
2024-08-20 12:26:45 TRACE DispatcherServlet:580 - Detected org.springframework.web.servlet.theme.FixedThemeResolver@404ea1e4
2024-08-20 12:26:45 TRACE DispatcherServlet:730 - Detected DefaultRequestToViewNameTranslator
2024-08-20 12:26:45 TRACE DispatcherServlet:794 - Detected SessionFlashMapManager
2024-08-20 12:26:45 DEBUG DispatcherServlet:549 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-08-20 12:26:45 INFO  DispatcherServlet:554 - Completed initialization in 3 ms
2024-08-20 12:26:45 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 12:26:45 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 12:26:45 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 12:26:45 INFO  JwtImplementation:139 - Is Token Expired: false
2024-08-20 12:26:45 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 12:26:45 INFO  JwtImplementation:131 - Is Token Valid: true
2024-08-20 12:26:45 TRACE DispatcherServlet:117 - POST "/coupon/upload_items/SUMMER2031", parameters={multipart}, headers={masked} in DispatcherServlet 'dispatcherServlet'
2024-08-20 12:26:45 TRACE RequestMappingHandlerMapping:528 - Mapped to com.project.coupon.controller.CouponController#uploadItems(String, String, MultipartFile)
2024-08-20 12:26:45 TRACE HandlerMethod:180 - Arguments: [SUMMER2031, PRODUCT_INCLUSION, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@678ec720]
2024-08-20 12:26:45 DEBUG HttpEntityMethodProcessor:275 - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2024-08-20 12:26:45 TRACE HttpEntityMethodProcessor:117 - Writing ["File uploaded and processed successfully."]
2024-08-20 12:26:45 TRACE DispatcherServlet:1174 - No view rendering, null ModelAndView returned.
2024-08-20 12:26:45 DEBUG DispatcherServlet:1138 - Completed 200 OK, headers={masked}
2024-08-20 12:29:10 INFO  LocalContainerEntityManagerFactoryBean:650 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 12:29:10 INFO  HikariDataSource:350 - HikariPool-1 - Shutdown initiated...
2024-08-20 12:29:10 INFO  HikariDataSource:352 - HikariPool-1 - Shutdown completed.
2024-08-20 12:29:16 INFO  Version:21 - HV000001: Hibernate Validator 8.0.1.Final
2024-08-20 12:29:16 INFO  CouponApplication:50 - Starting CouponApplication using Java 21.0.2 with PID 17802 (/Users/satyakibhattacharje/Desktop/coupon 2/target/classes started by satyakibhattacharje in /Users/satyakibhattacharje/Desktop/coupon 2)
2024-08-20 12:29:16 DEBUG CouponApplication:51 - Running with Spring Boot v3.2.5, Spring v6.1.6
2024-08-20 12:29:16 INFO  CouponApplication:660 - The following 1 profile is active: "dev"
2024-08-20 12:29:17 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 12:29:17 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BaseCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CategoryRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ConstructsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ItemsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.MilestoneDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentMilestoneMappingRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UsersRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 61 ms. Found 22 JPA repository interfaces.
2024-08-20 12:29:17 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 12:29:17 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.AuthRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.TokenRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponFeedbackRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponIssueRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.DataLakeDataRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.IssueQuestionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.JpaItemsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.ProductMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.StoreMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.TransactionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CategoryEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ItemsEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.TermsAndConditionsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepo; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.PageRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.RoleRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:29:17 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 16 ms. Found 14 MongoDB repository interfaces.
2024-08-20 12:29:17 INFO  TomcatWebServer:109 - Tomcat initialized with port 8080 (http)
2024-08-20 12:29:17 INFO  Http11NioProtocol:173 - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-20 12:29:17 INFO  StandardService:173 - Starting service [Tomcat]
2024-08-20 12:29:17 INFO  StandardEngine:173 - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-08-20 12:29:17 INFO  [/]:173 - Initializing Spring embedded WebApplicationContext
2024-08-20 12:29:17 INFO  ServletWebServerApplicationContext:296 - Root WebApplicationContext: initialization completed in 838 ms
2024-08-20 12:29:17 INFO  LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-20 12:29:17 INFO  Version:44 - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-08-20 12:29:17 INFO  RegionFactoryInitiator:50 - HHH000026: Second-level cache disabled
2024-08-20 12:29:17 INFO  SpringPersistenceUnitInfo:87 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-20 12:29:17 INFO  HikariDataSource:110 - HikariPool-1 - Starting...
2024-08-20 12:29:18 INFO  HikariPool:565 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3ff26c9
2024-08-20 12:29:18 INFO  HikariDataSource:123 - HikariPool-1 - Start completed.
2024-08-20 12:29:18 INFO  JtaPlatformInitiator:58 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-20 12:29:19 INFO  LocalContainerEntityManagerFactoryBean:437 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 12:29:19 DEBUG JwtAuthenticationFilter:240 - Filter 'jwtAuthenticationFilter' configured for use
2024-08-20 12:29:19 INFO  client:71 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.2+13-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@223e51e4, com.mongodb.Jep395RecordCodecProvider@1e08f0cd, com.mongodb.KotlinCodecProvider@b768e4d]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-20 12:29:19 INFO  cluster:71 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=24066000, setName='rs0', canonicalAddress=127.0.0.1:27017, hosts=[127.0.0.1:27017], passives=[], arbiters=[], primary='127.0.0.1:27017', tagSet=TagSet{[]}, electionId=7fffffff0000000000000001, setVersion=1, topologyVersion=TopologyVersion{processId=66b601f70679bd8076e41ce4, counter=6}, lastWriteDate=Tue Aug 20 12:29:13 IST 2024, lastUpdateTimeNanos=1323779558903916}
2024-08-20 12:29:19 INFO  QueryEnhancerFactory:49 - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-20 12:29:20 WARN  JpaBaseConfiguration$JpaWebConfiguration:232 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-20 12:29:20 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.a.c.AuthController:
	{POST [/auth/register]}: register(SignUpRequestDto)
	{POST [/auth/token]}: token(LoginRequestDto)
2024-08-20 12:29:20 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.CouponController:
	{POST [/coupon/createUserSpecificConstraints]}: createUserSpecificConstraints(UserSpecificConstraintsRequest)
	{POST [/coupon/createCouponApplicability]}: createCouponApplicability(CouponApplicabilityRequest)
	{POST [/coupon/uploadsegment/batchcoupons/{couponcode}], consumes [multipart/form-data]}: uploadSegmentForBatchCoupons(String,MultipartFile,String,String)
	{PUT [/coupon/update-date-range/base]}: updateBaseCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/batch]}: updateBatchCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/unique]}: updateUniqueCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/updateUserSpecificConstraints]}: updateUserSpecificConstraints(UserSpecificConstraintsRequest)
	{PUT [/coupon/updateCouponApplicability]}: updateCouponApplicability(CouponApplicabilityRequest)
	{PUT [/coupon/usage/selection]}: updateCouponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
	{POST [/coupon/uploadsegmentformilestone/{journeyName}]}: uploadSegmentForMilestoneCoupon(MultipartFile,String)
	{PUT [/coupon/createCouponConstruct]}: updateCouponConstruct(CouponConstructRequest)
	{POST [/coupon/type-selection]}: selectCouponType(CouponTypeSelectionRequest)
	{PUT [/coupon/type-selection]}: updateSelectCouponType(CouponTypeSelectionRequest)
	{POST [/coupon/usage/selection]}: couponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
	{POST [/coupon/createmilestonecoupons]}: createMilestoneCoupons(MilestoneRequest)
	{GET [/coupon/download_general/{type}]}: downloadTemplate(String)
	{POST [/coupon/createmongocoupon]}: createMongoCoupon(CouponRequest)
	{POST [/coupon/createbasecoupon]}: createBaseCoupon(BaseCouponRequest)
	{POST [/coupon/updatebasecoupon/{basecouponname}]}: createBaseCoupon(String,BaseCouponRequest)
	{POST [/coupon/createuniquecoupon]}: createUniqueCoupon(UniqueCouponRequest)
	{POST [/coupon/updateuniquecoupon]}: updateUniqueCoupon(UniqueCouponRequest)
	{GET [/coupon/getuniquecoupon/{uniquecouponname}]}: getUniqueCoupon(String)
	{GET [/coupon/getallbasecoupon]}: getAllBaseCoupon()
	{PUT [/coupon/delete/base]}: deleteBaseCoupons(List)
	{PUT [/coupon/delete/batch]}: deleteBatchCoupons(List)
	{PUT [/coupon/delete/unique]}: deleteUniqueCoupons(List)
	{POST [/coupon/createCouponConstruct]}: createCouponConstruct(CouponConstructRequest)
	{POST [/coupon/upload/image/{code}]}: uploadCouponImage(MultipartFile,String)
	{POST [/coupon/createcoupun]}: createCoupon(CouponRequest)
	{GET [/coupon/getbasecoupon/{basecouponname}]}: getBaseCoupon(String)
	{POST [/coupon/upload/{type}]}: uploadFile(MultipartFile,String)
	{POST [/coupon/uploadsegment/applicablefor/{couponcode}]}: uploadSegment(String,MultipartFile)
	{POST [/coupon/upload_items/{uniquecouponname}]}: uploadItems(String,String,MultipartFile)
2024-08-20 12:29:20 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.GetCouponController:
	{GET [/getCoupons/number/{mobileNumber}]}: getCouponUsingMobileNumber(String)
	{GET [/getCoupons/couponCode/{couponCode}]}: getCouponUsingCouponCode(String)
	{GET [/getCoupons/getcouponapplicability/{code}]}: getUniqueCouponApplicability(String)
	{GET [/getCoupons/getcouponconstructs/{code}]}: getUniqueCouponConstruts(String)
	{GET [/getCoupons/getcouponusage/{code}]}: getgetUniqueCouponUsage(String)
	{GET [/getCoupons/getuserspecificconstraints/{code}]}: getUniqueCouponUserSpecificConstraints(String)
	{GET [/getCoupons/filter/{couponCategory}]}: getFilteredCoupons(String,String,String,String,String,String,String,String,int,int,String)
	{GET [/getCoupons/getuniquecoupons]}: getUniqueCoupons(int,int)
	{GET [/getCoupons/getbatchcoupons]}: getBatchCoupons(int,int)
	{GET [/getCoupons/getmilestonedetails]}: getMilestoneDetails(int,int)
	{GET [/getCoupons/getmilestonecoupons/{mobileNumber}]}: getMilestonesCoupons(String)
	{GET [/getCoupons/getproductmaster]}: getProductMaster()
	{GET [/getCoupons/search/{couponCategory}]}: searchCoupons(String,String,int,int)
	{GET [/getCoupons/getbasecoupons]}: getBaseCoupons(int,int)
	{POST [/getCoupons/updateStatus/{couponCategory}]}: updateStatus(String,UpdateStatusRequest)
	{GET [/getCoupons/getstoremaster]}: getStoreMaster()
2024-08-20 12:29:20 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.RedeemCouponController:
	{POST [/coupons/redeemcoupon]}: redeemCouponForSapphire(PosInputRequest)
	{POST [/coupons/enquirycoupon]}: enquireCouponForSapphire(PosInputEnquiry)
	{POST [/coupons/cancellationcoupon]}: settleCouponForSapphire(PosInputCancel)
	{POST [/coupons/settlementcoupon]}: cancelCouponForSapphire(PosInputSettle)
	{POST [/coupons/issue-question]}: saveIssueQuestion(IssueQuestionRequest)
	{GET [/coupons/issue-question]}: getIssueQuestion()
	{POST [/coupons/redeem-coupon/{couponCode}]}: redeemCoupon(PosInputRequest,String)
	{POST [/coupons/enquiry-coupon/{couponCode}]}: enquireCoupon(PosInputEnquiry,String)
	{POST [/coupons/settlement-coupon/{couponCode}]}: cancelCoupon(PosInputSettle,String)
	{POST [/coupons/cancellation-coupon/{couponCode}]}: settleCoupon(PosInputCancel,String)
	{POST [/coupons/feedback/{couponCode}]}: couponFeedback(CouponFeedbackRequest,String)
	{POST [/coupons/issue/{couponCode}]}: couponIssue(CouponIssueRequest,String)
2024-08-20 12:29:20 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.u.c.UserController:
	{POST [/user/login]}: login(LoginRequest)
	{POST [/user/createrole]}: createRole(CreateRoleRequest)
	{POST [/user/updaterole]}: updateRole(CreateRoleRequest)
	{POST [/user/createuser]}: createUser(CreateUserRequest)
	{POST [/user/updateuser]}: updateUser(CreateUserRequest)
	{GET [/user/getuser/{email}]}: getUser(String)
	{POST [/user/resetpassword]}: resetPassword(ResetPasswordRequest)
	{GET [/user/getallroles]}: getAllRoles()
2024-08-20 12:29:20 TRACE RequestMappingHandlerMapping:291 - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2024-08-20 12:29:20 DEBUG RequestMappingHandlerMapping:366 - 73 mappings in 'requestMappingHandlerMapping'
2024-08-20 12:29:20 DEBUG BeanNameUrlHandlerMapping:89 - Detected 0 mappings in 'beanNameHandlerMapping'
2024-08-20 12:29:20 TRACE RouterFunctionMapping:177 - 0 RouterFunction(s) in 'routerFunctionMapping'
2024-08-20 12:29:20 TRACE SimpleUrlHandlerMapping:452 - Mapped [/webjars/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2024-08-20 12:29:20 TRACE SimpleUrlHandlerMapping:452 - Mapped [/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2024-08-20 12:29:20 DEBUG SimpleUrlHandlerMapping:187 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-08-20 12:29:20 INFO  DefaultSecurityFilterChain:54 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@42acca1a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6ac3ceda, org.springframework.security.web.context.SecurityContextHolderFilter@7cb13e56, org.springframework.security.web.header.HeaderWriterFilter@56ddb317, org.springframework.web.filter.CorsFilter@4a26a54b, org.springframework.security.web.authentication.logout.LogoutFilter@1f7e6c3a, com.project.coupon.security.config.JwtAuthenticationFilter@26e588b7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5fca8642, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5f47c2e2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3145c33b, org.springframework.security.web.session.SessionManagementFilter@495afaf5, org.springframework.security.web.access.ExceptionTranslationFilter@14ea1252, org.springframework.security.web.access.intercept.AuthorizationFilter@411d3b5e]
2024-08-20 12:29:20 DEBUG RequestMappingHandlerAdapter:634 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-08-20 12:29:20 DEBUG ExceptionHandlerExceptionResolver:305 - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-08-20 12:29:20 INFO  Http11NioProtocol:173 - Starting ProtocolHandler ["http-nio-8080"]
2024-08-20 12:29:20 INFO  TomcatWebServer:241 - Tomcat started on port 8080 (http) with context path ''
2024-08-20 12:29:20 INFO  CouponApplication:56 - Started CouponApplication in 4.024 seconds (process running for 4.566)
2024-08-20 12:29:25 INFO  [/]:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-20 12:29:25 INFO  DispatcherServlet:532 - Initializing Servlet 'dispatcherServlet'
2024-08-20 12:29:25 TRACE DispatcherServlet:530 - Detected org.springframework.web.multipart.support.StandardServletMultipartResolver@2170c3ed
2024-08-20 12:29:25 TRACE DispatcherServlet:554 - Detected org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@3b00a7b9
2024-08-20 12:29:25 TRACE DispatcherServlet:580 - Detected org.springframework.web.servlet.theme.FixedThemeResolver@516c8f5a
2024-08-20 12:29:25 TRACE DispatcherServlet:730 - Detected DefaultRequestToViewNameTranslator
2024-08-20 12:29:25 TRACE DispatcherServlet:794 - Detected SessionFlashMapManager
2024-08-20 12:29:25 DEBUG DispatcherServlet:549 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-08-20 12:29:25 INFO  DispatcherServlet:554 - Completed initialization in 6 ms
2024-08-20 12:29:25 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 12:29:25 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 12:29:25 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 12:29:25 INFO  JwtImplementation:139 - Is Token Expired: false
2024-08-20 12:29:25 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 12:29:25 INFO  JwtImplementation:131 - Is Token Valid: true
2024-08-20 12:29:25 TRACE DispatcherServlet:117 - POST "/coupon/upload_items/SUMMER2031", parameters={multipart}, headers={masked} in DispatcherServlet 'dispatcherServlet'
2024-08-20 12:29:25 TRACE RequestMappingHandlerMapping:528 - Mapped to com.project.coupon.controller.CouponController#uploadItems(String, String, MultipartFile)
2024-08-20 12:29:25 TRACE HandlerMethod:180 - Arguments: [SUMMER2031, PRODUCT_INCLUSION, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2c605cc4]
2024-08-20 12:29:27 DEBUG HttpEntityMethodProcessor:275 - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2024-08-20 12:29:27 TRACE HttpEntityMethodProcessor:117 - Writing ["File uploaded and processed successfully."]
2024-08-20 12:29:27 TRACE DispatcherServlet:1174 - No view rendering, null ModelAndView returned.
2024-08-20 12:29:27 DEBUG DispatcherServlet:1138 - Completed 200 OK, headers={masked}
2024-08-20 12:36:37 INFO  LocalContainerEntityManagerFactoryBean:650 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 12:36:37 INFO  HikariDataSource:350 - HikariPool-1 - Shutdown initiated...
2024-08-20 12:36:37 INFO  HikariDataSource:352 - HikariPool-1 - Shutdown completed.
2024-08-20 12:36:41 INFO  Version:21 - HV000001: Hibernate Validator 8.0.1.Final
2024-08-20 12:36:41 INFO  CouponApplication:50 - Starting CouponApplication using Java 21.0.2 with PID 19431 (/Users/satyakibhattacharje/Desktop/coupon 2/target/classes started by satyakibhattacharje in /Users/satyakibhattacharje/Desktop/coupon 2)
2024-08-20 12:36:41 DEBUG CouponApplication:51 - Running with Spring Boot v3.2.5, Spring v6.1.6
2024-08-20 12:36:41 INFO  CouponApplication:660 - The following 1 profile is active: "dev"
2024-08-20 12:36:42 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 12:36:42 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BaseCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CategoryRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ConstructsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ItemsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.MilestoneDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentMilestoneMappingRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UsersRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 48 ms. Found 22 JPA repository interfaces.
2024-08-20 12:36:42 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 12:36:42 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.AuthRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.TokenRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponFeedbackRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponIssueRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.DataLakeDataRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.IssueQuestionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.JpaItemsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.ProductMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.StoreMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.TransactionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CategoryEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ItemsEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.TermsAndConditionsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepo; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.PageRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.RoleRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 12:36:42 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 16 ms. Found 14 MongoDB repository interfaces.
2024-08-20 12:36:42 INFO  TomcatWebServer:109 - Tomcat initialized with port 8080 (http)
2024-08-20 12:36:42 INFO  Http11NioProtocol:173 - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-20 12:36:42 INFO  StandardService:173 - Starting service [Tomcat]
2024-08-20 12:36:42 INFO  StandardEngine:173 - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-08-20 12:36:42 INFO  [/]:173 - Initializing Spring embedded WebApplicationContext
2024-08-20 12:36:42 INFO  ServletWebServerApplicationContext:296 - Root WebApplicationContext: initialization completed in 804 ms
2024-08-20 12:36:42 INFO  LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-20 12:36:42 INFO  Version:44 - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-08-20 12:36:42 INFO  RegionFactoryInitiator:50 - HHH000026: Second-level cache disabled
2024-08-20 12:36:42 INFO  SpringPersistenceUnitInfo:87 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-20 12:36:42 INFO  HikariDataSource:110 - HikariPool-1 - Starting...
2024-08-20 12:36:43 INFO  HikariPool:565 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@46591e98
2024-08-20 12:36:43 INFO  HikariDataSource:123 - HikariPool-1 - Start completed.
2024-08-20 12:36:43 INFO  JtaPlatformInitiator:58 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-20 12:36:44 INFO  LocalContainerEntityManagerFactoryBean:437 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 12:36:44 DEBUG JwtAuthenticationFilter:240 - Filter 'jwtAuthenticationFilter' configured for use
2024-08-20 12:36:44 INFO  client:71 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.2+13-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@58397dee, com.mongodb.Jep395RecordCodecProvider@4164ab12, com.mongodb.KotlinCodecProvider@37bafef8]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-20 12:36:44 INFO  cluster:71 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=26350958, setName='rs0', canonicalAddress=127.0.0.1:27017, hosts=[127.0.0.1:27017], passives=[], arbiters=[], primary='127.0.0.1:27017', tagSet=TagSet{[]}, electionId=7fffffff0000000000000001, setVersion=1, topologyVersion=TopologyVersion{processId=66b601f70679bd8076e41ce4, counter=6}, lastWriteDate=Tue Aug 20 12:36:36 IST 2024, lastUpdateTimeNanos=1324224997498500}
2024-08-20 12:36:45 INFO  QueryEnhancerFactory:49 - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-20 12:36:45 WARN  JpaBaseConfiguration$JpaWebConfiguration:232 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-20 12:36:45 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.a.c.AuthController:
	{POST [/auth/register]}: register(SignUpRequestDto)
	{POST [/auth/token]}: token(LoginRequestDto)
2024-08-20 12:36:45 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.CouponController:
	{POST [/coupon/uploadsegmentformilestone/{journeyName}]}: uploadSegmentForMilestoneCoupon(MultipartFile,String)
	{POST [/coupon/createUserSpecificConstraints]}: createUserSpecificConstraints(UserSpecificConstraintsRequest)
	{POST [/coupon/createCouponApplicability]}: createCouponApplicability(CouponApplicabilityRequest)
	{POST [/coupon/uploadsegment/batchcoupons/{couponcode}], consumes [multipart/form-data]}: uploadSegmentForBatchCoupons(String,MultipartFile,String,String)
	{PUT [/coupon/update-date-range/base]}: updateBaseCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/batch]}: updateBatchCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/unique]}: updateUniqueCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/updateUserSpecificConstraints]}: updateUserSpecificConstraints(UserSpecificConstraintsRequest)
	{PUT [/coupon/updateCouponApplicability]}: updateCouponApplicability(CouponApplicabilityRequest)
	{PUT [/coupon/usage/selection]}: updateCouponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
	{POST [/coupon/createcoupun]}: createCoupon(CouponRequest)
	{GET [/coupon/getbasecoupon/{basecouponname}]}: getBaseCoupon(String)
	{POST [/coupon/upload/{type}]}: uploadFile(MultipartFile,String)
	{POST [/coupon/uploadsegment/applicablefor/{couponcode}]}: uploadSegment(String,MultipartFile)
	{POST [/coupon/upload_items/{uniquecouponname}]}: uploadItems(String,String,MultipartFile)
	{POST [/coupon/createmongocoupon]}: createMongoCoupon(CouponRequest)
	{POST [/coupon/createbasecoupon]}: createBaseCoupon(BaseCouponRequest)
	{POST [/coupon/updatebasecoupon/{basecouponname}]}: createBaseCoupon(String,BaseCouponRequest)
	{POST [/coupon/createuniquecoupon]}: createUniqueCoupon(UniqueCouponRequest)
	{POST [/coupon/updateuniquecoupon]}: updateUniqueCoupon(UniqueCouponRequest)
	{GET [/coupon/getuniquecoupon/{uniquecouponname}]}: getUniqueCoupon(String)
	{GET [/coupon/getallbasecoupon]}: getAllBaseCoupon()
	{PUT [/coupon/delete/base]}: deleteBaseCoupons(List)
	{PUT [/coupon/delete/batch]}: deleteBatchCoupons(List)
	{PUT [/coupon/delete/unique]}: deleteUniqueCoupons(List)
	{POST [/coupon/createCouponConstruct]}: createCouponConstruct(CouponConstructRequest)
	{POST [/coupon/upload/image/{code}]}: uploadCouponImage(MultipartFile,String)
	{PUT [/coupon/createCouponConstruct]}: updateCouponConstruct(CouponConstructRequest)
	{POST [/coupon/type-selection]}: selectCouponType(CouponTypeSelectionRequest)
	{PUT [/coupon/type-selection]}: updateSelectCouponType(CouponTypeSelectionRequest)
	{POST [/coupon/usage/selection]}: couponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
	{POST [/coupon/createmilestonecoupons]}: createMilestoneCoupons(MilestoneRequest)
	{GET [/coupon/download_general/{type}]}: downloadTemplate(String)
2024-08-20 12:36:45 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.GetCouponController:
	{GET [/getCoupons/getuserspecificconstraints/{code}]}: getUniqueCouponUserSpecificConstraints(String)
	{GET [/getCoupons/number/{mobileNumber}]}: getCouponUsingMobileNumber(String)
	{GET [/getCoupons/couponCode/{couponCode}]}: getCouponUsingCouponCode(String)
	{GET [/getCoupons/getcouponapplicability/{code}]}: getUniqueCouponApplicability(String)
	{GET [/getCoupons/getcouponconstructs/{code}]}: getUniqueCouponConstruts(String)
	{GET [/getCoupons/getcouponusage/{code}]}: getgetUniqueCouponUsage(String)
	{GET [/getCoupons/search/{couponCategory}]}: searchCoupons(String,String,int,int)
	{GET [/getCoupons/getbasecoupons]}: getBaseCoupons(int,int)
	{POST [/getCoupons/updateStatus/{couponCategory}]}: updateStatus(String,UpdateStatusRequest)
	{GET [/getCoupons/getstoremaster]}: getStoreMaster()
	{GET [/getCoupons/filter/{couponCategory}]}: getFilteredCoupons(String,String,String,String,String,String,String,String,int,int,String)
	{GET [/getCoupons/getuniquecoupons]}: getUniqueCoupons(int,int)
	{GET [/getCoupons/getbatchcoupons]}: getBatchCoupons(int,int)
	{GET [/getCoupons/getmilestonedetails]}: getMilestoneDetails(int,int)
	{GET [/getCoupons/getmilestonecoupons/{mobileNumber}]}: getMilestonesCoupons(String)
	{GET [/getCoupons/getproductmaster]}: getProductMaster()
2024-08-20 12:36:45 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.RedeemCouponController:
	{POST [/coupons/redeemcoupon]}: redeemCouponForSapphire(PosInputRequest)
	{POST [/coupons/enquirycoupon]}: enquireCouponForSapphire(PosInputEnquiry)
	{POST [/coupons/cancellationcoupon]}: settleCouponForSapphire(PosInputCancel)
	{POST [/coupons/settlementcoupon]}: cancelCouponForSapphire(PosInputSettle)
	{POST [/coupons/redeem-coupon/{couponCode}]}: redeemCoupon(PosInputRequest,String)
	{POST [/coupons/enquiry-coupon/{couponCode}]}: enquireCoupon(PosInputEnquiry,String)
	{POST [/coupons/settlement-coupon/{couponCode}]}: cancelCoupon(PosInputSettle,String)
	{POST [/coupons/cancellation-coupon/{couponCode}]}: settleCoupon(PosInputCancel,String)
	{POST [/coupons/feedback/{couponCode}]}: couponFeedback(CouponFeedbackRequest,String)
	{POST [/coupons/issue/{couponCode}]}: couponIssue(CouponIssueRequest,String)
	{POST [/coupons/issue-question]}: saveIssueQuestion(IssueQuestionRequest)
	{GET [/coupons/issue-question]}: getIssueQuestion()
2024-08-20 12:36:45 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.u.c.UserController:
	{GET [/user/getallroles]}: getAllRoles()
	{POST [/user/createrole]}: createRole(CreateRoleRequest)
	{POST [/user/updaterole]}: updateRole(CreateRoleRequest)
	{POST [/user/createuser]}: createUser(CreateUserRequest)
	{POST [/user/updateuser]}: updateUser(CreateUserRequest)
	{GET [/user/getuser/{email}]}: getUser(String)
	{POST [/user/resetpassword]}: resetPassword(ResetPasswordRequest)
	{POST [/user/login]}: login(LoginRequest)
2024-08-20 12:36:45 TRACE RequestMappingHandlerMapping:291 - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2024-08-20 12:36:45 DEBUG RequestMappingHandlerMapping:366 - 73 mappings in 'requestMappingHandlerMapping'
2024-08-20 12:36:45 DEBUG BeanNameUrlHandlerMapping:89 - Detected 0 mappings in 'beanNameHandlerMapping'
2024-08-20 12:36:45 TRACE RouterFunctionMapping:177 - 0 RouterFunction(s) in 'routerFunctionMapping'
2024-08-20 12:36:45 TRACE SimpleUrlHandlerMapping:452 - Mapped [/webjars/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2024-08-20 12:36:45 TRACE SimpleUrlHandlerMapping:452 - Mapped [/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2024-08-20 12:36:45 DEBUG SimpleUrlHandlerMapping:187 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-08-20 12:36:45 INFO  DefaultSecurityFilterChain:54 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@bfe51c3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@42754496, org.springframework.security.web.context.SecurityContextHolderFilter@25fc72c6, org.springframework.security.web.header.HeaderWriterFilter@617c1ac2, org.springframework.web.filter.CorsFilter@6e133ed, org.springframework.security.web.authentication.logout.LogoutFilter@645b31d0, com.project.coupon.security.config.JwtAuthenticationFilter@7671c02d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1607b56b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1963b057, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6cd7c114, org.springframework.security.web.session.SessionManagementFilter@6325a546, org.springframework.security.web.access.ExceptionTranslationFilter@22d7e121, org.springframework.security.web.access.intercept.AuthorizationFilter@64f5a6ec]
2024-08-20 12:36:45 DEBUG RequestMappingHandlerAdapter:634 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-08-20 12:36:45 DEBUG ExceptionHandlerExceptionResolver:305 - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-08-20 12:36:45 INFO  Http11NioProtocol:173 - Starting ProtocolHandler ["http-nio-8080"]
2024-08-20 12:36:45 INFO  TomcatWebServer:241 - Tomcat started on port 8080 (http) with context path ''
2024-08-20 12:36:45 INFO  CouponApplication:56 - Started CouponApplication in 4.137 seconds (process running for 4.947)
2024-08-20 12:36:50 INFO  [/]:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-20 12:36:50 INFO  DispatcherServlet:532 - Initializing Servlet 'dispatcherServlet'
2024-08-20 12:36:50 TRACE DispatcherServlet:530 - Detected org.springframework.web.multipart.support.StandardServletMultipartResolver@1af1aae9
2024-08-20 12:36:50 TRACE DispatcherServlet:554 - Detected org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@2c6d5b2e
2024-08-20 12:36:50 TRACE DispatcherServlet:580 - Detected org.springframework.web.servlet.theme.FixedThemeResolver@768511c3
2024-08-20 12:36:50 TRACE DispatcherServlet:730 - Detected DefaultRequestToViewNameTranslator
2024-08-20 12:36:50 TRACE DispatcherServlet:794 - Detected SessionFlashMapManager
2024-08-20 12:36:50 DEBUG DispatcherServlet:549 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-08-20 12:36:50 INFO  DispatcherServlet:554 - Completed initialization in 3 ms
2024-08-20 12:36:50 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 12:36:51 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 12:36:51 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 12:36:51 INFO  JwtImplementation:139 - Is Token Expired: false
2024-08-20 12:36:51 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 12:36:51 INFO  JwtImplementation:131 - Is Token Valid: true
2024-08-20 12:36:51 TRACE DispatcherServlet:117 - POST "/coupon/upload_items/SUMMER2031", parameters={multipart}, headers={masked} in DispatcherServlet 'dispatcherServlet'
2024-08-20 12:36:51 TRACE RequestMappingHandlerMapping:528 - Mapped to com.project.coupon.controller.CouponController#uploadItems(String, String, MultipartFile)
2024-08-20 12:36:51 TRACE HandlerMethod:180 - Arguments: [SUMMER2031, PRODUCT_INCLUSION, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@4e34d8f8]
2024-08-20 12:36:51 DEBUG HttpEntityMethodProcessor:275 - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2024-08-20 12:36:51 TRACE HttpEntityMethodProcessor:117 - Writing ["File uploaded and processed successfully."]
2024-08-20 12:36:51 TRACE DispatcherServlet:1174 - No view rendering, null ModelAndView returned.
2024-08-20 12:36:51 DEBUG DispatcherServlet:1138 - Completed 200 OK, headers={masked}
2024-08-20 13:45:16 INFO  Version:21 - HV000001: Hibernate Validator 8.0.1.Final
2024-08-20 13:45:16 INFO  CouponApplication:50 - Starting CouponApplication using Java 21.0.2 with PID 35507 (/Users/satyakibhattacharje/Desktop/coupon 2/target/classes started by satyakibhattacharje in /Users/satyakibhattacharje/Desktop/coupon 2)
2024-08-20 13:45:16 DEBUG CouponApplication:51 - Running with Spring Boot v3.2.5, Spring v6.1.6
2024-08-20 13:45:16 INFO  CouponApplication:660 - The following 1 profile is active: "dev"
2024-08-20 13:45:16 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 13:45:16 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BaseCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ConstructsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ItemsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.MilestoneDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductExclusionRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentMilestoneMappingRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UsersRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 49 ms. Found 22 JPA repository interfaces.
2024-08-20 13:45:16 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 13:45:16 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.AuthRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.TokenRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponFeedbackRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponIssueRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.DataLakeDataRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.IssueQuestionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.JpaItemsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.ProductMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.StoreMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.TransactionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ItemsEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductEntityExclusionRepsoitory; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.TermsAndConditionsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepo; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.PageRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.RoleRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:45:16 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 17 ms. Found 14 MongoDB repository interfaces.
2024-08-20 13:45:17 INFO  TomcatWebServer:109 - Tomcat initialized with port 8080 (http)
2024-08-20 13:45:17 INFO  Http11NioProtocol:173 - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-20 13:45:17 INFO  StandardService:173 - Starting service [Tomcat]
2024-08-20 13:45:17 INFO  StandardEngine:173 - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-08-20 13:45:17 INFO  [/]:173 - Initializing Spring embedded WebApplicationContext
2024-08-20 13:45:17 INFO  ServletWebServerApplicationContext:296 - Root WebApplicationContext: initialization completed in 758 ms
2024-08-20 13:45:17 INFO  LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-20 13:45:17 INFO  Version:44 - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-08-20 13:45:17 INFO  RegionFactoryInitiator:50 - HHH000026: Second-level cache disabled
2024-08-20 13:45:17 INFO  SpringPersistenceUnitInfo:87 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-20 13:45:17 INFO  HikariDataSource:110 - HikariPool-1 - Starting...
2024-08-20 13:45:17 INFO  HikariPool:565 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@61d011e
2024-08-20 13:45:17 INFO  HikariDataSource:123 - HikariPool-1 - Start completed.
2024-08-20 13:45:18 INFO  JtaPlatformInitiator:58 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-20 13:45:18 INFO  LocalContainerEntityManagerFactoryBean:437 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 13:45:18 DEBUG JwtAuthenticationFilter:240 - Filter 'jwtAuthenticationFilter' configured for use
2024-08-20 13:45:19 INFO  client:71 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.2+13-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@621c7b91, com.mongodb.Jep395RecordCodecProvider@223e51e4, com.mongodb.KotlinCodecProvider@1e08f0cd]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-20 13:45:19 INFO  cluster:71 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=44763458, setName='rs0', canonicalAddress=127.0.0.1:27017, hosts=[127.0.0.1:27017], passives=[], arbiters=[], primary='127.0.0.1:27017', tagSet=TagSet{[]}, electionId=7fffffff0000000000000001, setVersion=1, topologyVersion=TopologyVersion{processId=66b601f70679bd8076e41ce4, counter=6}, lastWriteDate=Tue Aug 20 13:45:18 IST 2024, lastUpdateTimeNanos=1328339184912916}
2024-08-20 13:45:19 INFO  QueryEnhancerFactory:49 - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-20 13:45:19 WARN  JpaBaseConfiguration$JpaWebConfiguration:232 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-20 13:45:19 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.a.c.AuthController:
	{POST [/auth/register]}: register(SignUpRequestDto)
	{POST [/auth/token]}: token(LoginRequestDto)
2024-08-20 13:45:19 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.CouponController:
	{POST [/coupon/createmongocoupon]}: createMongoCoupon(CouponRequest)
	{POST [/coupon/updatebasecoupon/{basecouponname}]}: createBaseCoupon(String,BaseCouponRequest)
	{POST [/coupon/createbasecoupon]}: createBaseCoupon(BaseCouponRequest)
	{POST [/coupon/createuniquecoupon]}: createUniqueCoupon(UniqueCouponRequest)
	{POST [/coupon/updateuniquecoupon]}: updateUniqueCoupon(UniqueCouponRequest)
	{GET [/coupon/getuniquecoupon/{uniquecouponname}]}: getUniqueCoupon(String)
	{GET [/coupon/getallbasecoupon]}: getAllBaseCoupon()
	{PUT [/coupon/delete/base]}: deleteBaseCoupons(List)
	{PUT [/coupon/delete/batch]}: deleteBatchCoupons(List)
	{PUT [/coupon/delete/unique]}: deleteUniqueCoupons(List)
	{POST [/coupon/createCouponConstruct]}: createCouponConstruct(CouponConstructRequest)
	{POST [/coupon/upload/image/{code}]}: uploadCouponImage(MultipartFile,String)
	{PUT [/coupon/createCouponConstruct]}: updateCouponConstruct(CouponConstructRequest)
	{POST [/coupon/type-selection]}: selectCouponType(CouponTypeSelectionRequest)
	{PUT [/coupon/type-selection]}: updateSelectCouponType(CouponTypeSelectionRequest)
	{POST [/coupon/usage/selection]}: couponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
	{POST [/coupon/createmilestonecoupons]}: createMilestoneCoupons(MilestoneRequest)
	{GET [/coupon/download_general/{type}]}: downloadTemplate(String)
	{POST [/coupon/createcoupun]}: createCoupon(CouponRequest)
	{GET [/coupon/getbasecoupon/{basecouponname}]}: getBaseCoupon(String)
	{POST [/coupon/upload/{type}]}: uploadFile(MultipartFile,String)
	{POST [/coupon/uploadsegment/applicablefor/{couponcode}]}: uploadSegment(String,MultipartFile)
	{POST [/coupon/upload_items/{uniquecouponname}]}: uploadItems(String,String,MultipartFile)
	{POST [/coupon/uploadsegmentformilestone/{journeyName}]}: uploadSegmentForMilestoneCoupon(MultipartFile,String)
	{POST [/coupon/createUserSpecificConstraints]}: createUserSpecificConstraints(UserSpecificConstraintsRequest)
	{POST [/coupon/createCouponApplicability]}: createCouponApplicability(CouponApplicabilityRequest)
	{POST [/coupon/uploadsegment/batchcoupons/{couponcode}], consumes [multipart/form-data]}: uploadSegmentForBatchCoupons(String,MultipartFile,String,String)
	{PUT [/coupon/update-date-range/base]}: updateBaseCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/batch]}: updateBatchCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/unique]}: updateUniqueCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/updateUserSpecificConstraints]}: updateUserSpecificConstraints(UserSpecificConstraintsRequest)
	{PUT [/coupon/updateCouponApplicability]}: updateCouponApplicability(CouponApplicabilityRequest)
	{PUT [/coupon/usage/selection]}: updateCouponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
2024-08-20 13:45:19 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.GetCouponController:
	{GET [/getCoupons/filter/{couponCategory}]}: getFilteredCoupons(String,String,String,String,String,String,String,String,int,int,String)
	{GET [/getCoupons/getuniquecoupons]}: getUniqueCoupons(int,int)
	{GET [/getCoupons/getbatchcoupons]}: getBatchCoupons(int,int)
	{GET [/getCoupons/getmilestonedetails]}: getMilestoneDetails(int,int)
	{GET [/getCoupons/getmilestonecoupons/{mobileNumber}]}: getMilestonesCoupons(String)
	{GET [/getCoupons/getproductmaster]}: getProductMaster()
	{GET [/getCoupons/search/{couponCategory}]}: searchCoupons(String,String,int,int)
	{GET [/getCoupons/getbasecoupons]}: getBaseCoupons(int,int)
	{POST [/getCoupons/updateStatus/{couponCategory}]}: updateStatus(String,UpdateStatusRequest)
	{GET [/getCoupons/getstoremaster]}: getStoreMaster()
	{GET [/getCoupons/getuserspecificconstraints/{code}]}: getUniqueCouponUserSpecificConstraints(String)
	{GET [/getCoupons/number/{mobileNumber}]}: getCouponUsingMobileNumber(String)
	{GET [/getCoupons/couponCode/{couponCode}]}: getCouponUsingCouponCode(String)
	{GET [/getCoupons/getcouponapplicability/{code}]}: getUniqueCouponApplicability(String)
	{GET [/getCoupons/getcouponconstructs/{code}]}: getUniqueCouponConstruts(String)
	{GET [/getCoupons/getcouponusage/{code}]}: getgetUniqueCouponUsage(String)
2024-08-20 13:45:19 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.RedeemCouponController:
	{POST [/coupons/issue-question]}: saveIssueQuestion(IssueQuestionRequest)
	{GET [/coupons/issue-question]}: getIssueQuestion()
	{POST [/coupons/redeem-coupon/{couponCode}]}: redeemCoupon(PosInputRequest,String)
	{POST [/coupons/enquiry-coupon/{couponCode}]}: enquireCoupon(PosInputEnquiry,String)
	{POST [/coupons/settlement-coupon/{couponCode}]}: cancelCoupon(PosInputSettle,String)
	{POST [/coupons/cancellation-coupon/{couponCode}]}: settleCoupon(PosInputCancel,String)
	{POST [/coupons/feedback/{couponCode}]}: couponFeedback(CouponFeedbackRequest,String)
	{POST [/coupons/issue/{couponCode}]}: couponIssue(CouponIssueRequest,String)
	{POST [/coupons/redeemcoupon]}: redeemCouponForSapphire(PosInputRequest)
	{POST [/coupons/enquirycoupon]}: enquireCouponForSapphire(PosInputEnquiry)
	{POST [/coupons/cancellationcoupon]}: settleCouponForSapphire(PosInputCancel)
	{POST [/coupons/settlementcoupon]}: cancelCouponForSapphire(PosInputSettle)
2024-08-20 13:45:19 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.u.c.UserController:
	{GET [/user/getallroles]}: getAllRoles()
	{POST [/user/createrole]}: createRole(CreateRoleRequest)
	{POST [/user/updaterole]}: updateRole(CreateRoleRequest)
	{POST [/user/createuser]}: createUser(CreateUserRequest)
	{POST [/user/updateuser]}: updateUser(CreateUserRequest)
	{GET [/user/getuser/{email}]}: getUser(String)
	{POST [/user/resetpassword]}: resetPassword(ResetPasswordRequest)
	{POST [/user/login]}: login(LoginRequest)
2024-08-20 13:45:19 TRACE RequestMappingHandlerMapping:291 - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2024-08-20 13:45:19 DEBUG RequestMappingHandlerMapping:366 - 73 mappings in 'requestMappingHandlerMapping'
2024-08-20 13:45:19 DEBUG BeanNameUrlHandlerMapping:89 - Detected 0 mappings in 'beanNameHandlerMapping'
2024-08-20 13:45:19 TRACE RouterFunctionMapping:177 - 0 RouterFunction(s) in 'routerFunctionMapping'
2024-08-20 13:45:19 TRACE SimpleUrlHandlerMapping:452 - Mapped [/webjars/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2024-08-20 13:45:19 TRACE SimpleUrlHandlerMapping:452 - Mapped [/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2024-08-20 13:45:19 DEBUG SimpleUrlHandlerMapping:187 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-08-20 13:45:19 INFO  DefaultSecurityFilterChain:54 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@40190f7f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@98be09f, org.springframework.security.web.context.SecurityContextHolderFilter@2fe19bda, org.springframework.security.web.header.HeaderWriterFilter@74f1c9b9, org.springframework.web.filter.CorsFilter@65f85228, org.springframework.security.web.authentication.logout.LogoutFilter@428fef32, com.project.coupon.security.config.JwtAuthenticationFilter@2c841ac4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1df2b230, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@37d85eec, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@222456bc, org.springframework.security.web.session.SessionManagementFilter@56ddb317, org.springframework.security.web.access.ExceptionTranslationFilter@5b936410, org.springframework.security.web.access.intercept.AuthorizationFilter@379445f]
2024-08-20 13:45:19 DEBUG RequestMappingHandlerAdapter:634 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-08-20 13:45:19 DEBUG ExceptionHandlerExceptionResolver:305 - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-08-20 13:45:19 INFO  Http11NioProtocol:173 - Starting ProtocolHandler ["http-nio-8080"]
2024-08-20 13:45:19 INFO  TomcatWebServer:241 - Tomcat started on port 8080 (http) with context path ''
2024-08-20 13:45:20 INFO  CouponApplication:56 - Started CouponApplication in 3.834 seconds (process running for 4.429)
2024-08-20 13:52:10 INFO  Version:21 - HV000001: Hibernate Validator 8.0.1.Final
2024-08-20 13:52:10 INFO  CouponApplication:50 - Starting CouponApplication using Java 21.0.2 with PID 37650 (/Users/satyakibhattacharje/Desktop/coupon 2/target/classes started by satyakibhattacharje in /Users/satyakibhattacharje/Desktop/coupon 2)
2024-08-20 13:52:10 DEBUG CouponApplication:51 - Running with Spring Boot v3.2.5, Spring v6.1.6
2024-08-20 13:52:10 INFO  CouponApplication:660 - The following 1 profile is active: "dev"
2024-08-20 13:52:11 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 13:52:11 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BaseCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ConstructsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ItemsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.MilestoneDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductExclusionRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentMilestoneMappingRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UsersRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 54 ms. Found 22 JPA repository interfaces.
2024-08-20 13:52:11 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 13:52:11 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.AuthRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.TokenRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponFeedbackRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponIssueRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.DataLakeDataRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.IssueQuestionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.JpaItemsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.ProductMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.StoreMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.TransactionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ItemsEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductEntityExclusionRepsoitory; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.TermsAndConditionsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepo; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.PageRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.RoleRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 13:52:11 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 20 ms. Found 14 MongoDB repository interfaces.
2024-08-20 13:52:11 INFO  TomcatWebServer:109 - Tomcat initialized with port 8080 (http)
2024-08-20 13:52:11 INFO  Http11NioProtocol:173 - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-20 13:52:11 INFO  StandardService:173 - Starting service [Tomcat]
2024-08-20 13:52:11 INFO  StandardEngine:173 - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-08-20 13:52:11 INFO  [/]:173 - Initializing Spring embedded WebApplicationContext
2024-08-20 13:52:11 INFO  ServletWebServerApplicationContext:296 - Root WebApplicationContext: initialization completed in 809 ms
2024-08-20 13:52:11 INFO  LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-20 13:52:11 INFO  Version:44 - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-08-20 13:52:11 INFO  RegionFactoryInitiator:50 - HHH000026: Second-level cache disabled
2024-08-20 13:52:11 INFO  SpringPersistenceUnitInfo:87 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-20 13:52:11 INFO  HikariDataSource:110 - HikariPool-1 - Starting...
2024-08-20 13:52:12 INFO  HikariPool:565 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@43b4ec0c
2024-08-20 13:52:12 INFO  HikariDataSource:123 - HikariPool-1 - Start completed.
2024-08-20 13:52:12 INFO  JtaPlatformInitiator:58 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-20 13:52:13 INFO  LocalContainerEntityManagerFactoryBean:437 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 13:52:13 DEBUG JwtAuthenticationFilter:240 - Filter 'jwtAuthenticationFilter' configured for use
2024-08-20 13:52:13 INFO  client:71 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.2+13-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@11636d43, com.mongodb.Jep395RecordCodecProvider@753b6846, com.mongodb.KotlinCodecProvider@15961527]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-20 13:52:13 INFO  cluster:71 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=36636041, setName='rs0', canonicalAddress=127.0.0.1:27017, hosts=[127.0.0.1:27017], passives=[], arbiters=[], primary='127.0.0.1:27017', tagSet=TagSet{[]}, electionId=7fffffff0000000000000001, setVersion=1, topologyVersion=TopologyVersion{processId=66b601f70679bd8076e41ce4, counter=6}, lastWriteDate=Tue Aug 20 13:52:11 IST 2024, lastUpdateTimeNanos=1328753522860416}
2024-08-20 13:52:13 INFO  QueryEnhancerFactory:49 - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-20 13:52:13 WARN  JpaBaseConfiguration$JpaWebConfiguration:232 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-20 13:52:13 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.a.c.AuthController:
	{POST [/auth/register]}: register(SignUpRequestDto)
	{POST [/auth/token]}: token(LoginRequestDto)
2024-08-20 13:52:13 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.CouponController:
	{PUT [/coupon/updateUserSpecificConstraints]}: updateUserSpecificConstraints(UserSpecificConstraintsRequest)
	{PUT [/coupon/updateCouponApplicability]}: updateCouponApplicability(CouponApplicabilityRequest)
	{PUT [/coupon/usage/selection]}: updateCouponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
	{POST [/coupon/createUserSpecificConstraints]}: createUserSpecificConstraints(UserSpecificConstraintsRequest)
	{POST [/coupon/createCouponApplicability]}: createCouponApplicability(CouponApplicabilityRequest)
	{POST [/coupon/uploadsegment/batchcoupons/{couponcode}], consumes [multipart/form-data]}: uploadSegmentForBatchCoupons(String,MultipartFile,String,String)
	{PUT [/coupon/update-date-range/base]}: updateBaseCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/batch]}: updateBatchCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/unique]}: updateUniqueCouponDateRange(List,LocalDate,LocalDate)
	{POST [/coupon/uploadsegmentformilestone/{journeyName}]}: uploadSegmentForMilestoneCoupon(MultipartFile,String)
	{POST [/coupon/createcoupun]}: createCoupon(CouponRequest)
	{GET [/coupon/getbasecoupon/{basecouponname}]}: getBaseCoupon(String)
	{POST [/coupon/upload/{type}]}: uploadFile(MultipartFile,String)
	{POST [/coupon/uploadsegment/applicablefor/{couponcode}]}: uploadSegment(String,MultipartFile)
	{POST [/coupon/upload_items/{uniquecouponname}]}: uploadItems(String,String,MultipartFile)
	{POST [/coupon/createmongocoupon]}: createMongoCoupon(CouponRequest)
	{POST [/coupon/createbasecoupon]}: createBaseCoupon(BaseCouponRequest)
	{POST [/coupon/updatebasecoupon/{basecouponname}]}: createBaseCoupon(String,BaseCouponRequest)
	{POST [/coupon/createuniquecoupon]}: createUniqueCoupon(UniqueCouponRequest)
	{POST [/coupon/updateuniquecoupon]}: updateUniqueCoupon(UniqueCouponRequest)
	{GET [/coupon/getuniquecoupon/{uniquecouponname}]}: getUniqueCoupon(String)
	{GET [/coupon/getallbasecoupon]}: getAllBaseCoupon()
	{PUT [/coupon/delete/base]}: deleteBaseCoupons(List)
	{PUT [/coupon/delete/batch]}: deleteBatchCoupons(List)
	{PUT [/coupon/delete/unique]}: deleteUniqueCoupons(List)
	{POST [/coupon/createCouponConstruct]}: createCouponConstruct(CouponConstructRequest)
	{POST [/coupon/upload/image/{code}]}: uploadCouponImage(MultipartFile,String)
	{PUT [/coupon/createCouponConstruct]}: updateCouponConstruct(CouponConstructRequest)
	{POST [/coupon/type-selection]}: selectCouponType(CouponTypeSelectionRequest)
	{PUT [/coupon/type-selection]}: updateSelectCouponType(CouponTypeSelectionRequest)
	{POST [/coupon/usage/selection]}: couponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
	{POST [/coupon/createmilestonecoupons]}: createMilestoneCoupons(MilestoneRequest)
	{GET [/coupon/download_general/{type}]}: downloadTemplate(String)
2024-08-20 13:52:14 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.GetCouponController:
	{GET [/getCoupons/number/{mobileNumber}]}: getCouponUsingMobileNumber(String)
	{GET [/getCoupons/couponCode/{couponCode}]}: getCouponUsingCouponCode(String)
	{GET [/getCoupons/getcouponapplicability/{code}]}: getUniqueCouponApplicability(String)
	{GET [/getCoupons/getcouponconstructs/{code}]}: getUniqueCouponConstruts(String)
	{GET [/getCoupons/getcouponusage/{code}]}: getgetUniqueCouponUsage(String)
	{GET [/getCoupons/getuserspecificconstraints/{code}]}: getUniqueCouponUserSpecificConstraints(String)
	{GET [/getCoupons/search/{couponCategory}]}: searchCoupons(String,String,int,int)
	{GET [/getCoupons/getbasecoupons]}: getBaseCoupons(int,int)
	{POST [/getCoupons/updateStatus/{couponCategory}]}: updateStatus(String,UpdateStatusRequest)
	{GET [/getCoupons/getstoremaster]}: getStoreMaster()
	{GET [/getCoupons/filter/{couponCategory}]}: getFilteredCoupons(String,String,String,String,String,String,String,String,int,int,String)
	{GET [/getCoupons/getuniquecoupons]}: getUniqueCoupons(int,int)
	{GET [/getCoupons/getbatchcoupons]}: getBatchCoupons(int,int)
	{GET [/getCoupons/getmilestonedetails]}: getMilestoneDetails(int,int)
	{GET [/getCoupons/getmilestonecoupons/{mobileNumber}]}: getMilestonesCoupons(String)
	{GET [/getCoupons/getproductmaster]}: getProductMaster()
2024-08-20 13:52:14 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.RedeemCouponController:
	{POST [/coupons/redeemcoupon]}: redeemCouponForSapphire(PosInputRequest)
	{POST [/coupons/enquirycoupon]}: enquireCouponForSapphire(PosInputEnquiry)
	{POST [/coupons/cancellationcoupon]}: settleCouponForSapphire(PosInputCancel)
	{POST [/coupons/settlementcoupon]}: cancelCouponForSapphire(PosInputSettle)
	{POST [/coupons/redeem-coupon/{couponCode}]}: redeemCoupon(PosInputRequest,String)
	{POST [/coupons/enquiry-coupon/{couponCode}]}: enquireCoupon(PosInputEnquiry,String)
	{POST [/coupons/settlement-coupon/{couponCode}]}: cancelCoupon(PosInputSettle,String)
	{POST [/coupons/cancellation-coupon/{couponCode}]}: settleCoupon(PosInputCancel,String)
	{POST [/coupons/feedback/{couponCode}]}: couponFeedback(CouponFeedbackRequest,String)
	{POST [/coupons/issue/{couponCode}]}: couponIssue(CouponIssueRequest,String)
	{POST [/coupons/issue-question]}: saveIssueQuestion(IssueQuestionRequest)
	{GET [/coupons/issue-question]}: getIssueQuestion()
2024-08-20 13:52:14 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.u.c.UserController:
	{POST [/user/login]}: login(LoginRequest)
	{POST [/user/createrole]}: createRole(CreateRoleRequest)
	{POST [/user/updaterole]}: updateRole(CreateRoleRequest)
	{POST [/user/createuser]}: createUser(CreateUserRequest)
	{POST [/user/updateuser]}: updateUser(CreateUserRequest)
	{GET [/user/getuser/{email}]}: getUser(String)
	{POST [/user/resetpassword]}: resetPassword(ResetPasswordRequest)
	{GET [/user/getallroles]}: getAllRoles()
2024-08-20 13:52:14 TRACE RequestMappingHandlerMapping:291 - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2024-08-20 13:52:14 DEBUG RequestMappingHandlerMapping:366 - 73 mappings in 'requestMappingHandlerMapping'
2024-08-20 13:52:14 DEBUG BeanNameUrlHandlerMapping:89 - Detected 0 mappings in 'beanNameHandlerMapping'
2024-08-20 13:52:14 TRACE RouterFunctionMapping:177 - 0 RouterFunction(s) in 'routerFunctionMapping'
2024-08-20 13:52:14 TRACE SimpleUrlHandlerMapping:452 - Mapped [/webjars/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2024-08-20 13:52:14 TRACE SimpleUrlHandlerMapping:452 - Mapped [/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2024-08-20 13:52:14 DEBUG SimpleUrlHandlerMapping:187 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-08-20 13:52:14 INFO  DefaultSecurityFilterChain:54 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6cd7c114, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@15dee504, org.springframework.security.web.context.SecurityContextHolderFilter@1963b057, org.springframework.security.web.header.HeaderWriterFilter@68284cf9, org.springframework.web.filter.CorsFilter@7de752dd, org.springframework.security.web.authentication.logout.LogoutFilter@6222ee67, com.project.coupon.security.config.JwtAuthenticationFilter@59881424, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5b936410, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@70143ee4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@729668d7, org.springframework.security.web.session.SessionManagementFilter@25fc72c6, org.springframework.security.web.access.ExceptionTranslationFilter@566bea82, org.springframework.security.web.access.intercept.AuthorizationFilter@bfe51c3]
2024-08-20 13:52:14 DEBUG RequestMappingHandlerAdapter:634 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-08-20 13:52:14 DEBUG ExceptionHandlerExceptionResolver:305 - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-08-20 13:52:14 INFO  Http11NioProtocol:173 - Starting ProtocolHandler ["http-nio-8080"]
2024-08-20 13:52:14 INFO  TomcatWebServer:241 - Tomcat started on port 8080 (http) with context path ''
2024-08-20 13:52:14 INFO  CouponApplication:56 - Started CouponApplication in 3.575 seconds (process running for 4.152)
2024-08-20 13:52:22 INFO  [/]:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-20 13:52:22 INFO  DispatcherServlet:532 - Initializing Servlet 'dispatcherServlet'
2024-08-20 13:52:22 TRACE DispatcherServlet:530 - Detected org.springframework.web.multipart.support.StandardServletMultipartResolver@1af1aae9
2024-08-20 13:52:22 TRACE DispatcherServlet:554 - Detected org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@2c6d5b2e
2024-08-20 13:52:22 TRACE DispatcherServlet:580 - Detected org.springframework.web.servlet.theme.FixedThemeResolver@768511c3
2024-08-20 13:52:22 TRACE DispatcherServlet:730 - Detected DefaultRequestToViewNameTranslator
2024-08-20 13:52:22 TRACE DispatcherServlet:794 - Detected SessionFlashMapManager
2024-08-20 13:52:22 DEBUG DispatcherServlet:549 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-08-20 13:52:22 INFO  DispatcherServlet:554 - Completed initialization in 3 ms
2024-08-20 13:52:22 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 13:52:22 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 13:52:22 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 13:52:22 INFO  JwtImplementation:139 - Is Token Expired: false
2024-08-20 13:52:22 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 13:52:22 INFO  JwtImplementation:131 - Is Token Valid: true
2024-08-20 13:52:22 TRACE DispatcherServlet:117 - POST "/coupon/upload_items/SUMMER2031", parameters={multipart}, headers={masked} in DispatcherServlet 'dispatcherServlet'
2024-08-20 13:52:22 TRACE RequestMappingHandlerMapping:528 - Mapped to com.project.coupon.controller.CouponController#uploadItems(String, String, MultipartFile)
2024-08-20 13:52:22 TRACE HandlerMethod:180 - Arguments: [SUMMER2031, PRODUCT_INCLUSION, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@5887404d]
2024-08-20 13:52:23 DEBUG HttpEntityMethodProcessor:275 - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2024-08-20 13:52:23 TRACE HttpEntityMethodProcessor:117 - Writing ["File uploaded and processed successfully."]
2024-08-20 13:52:23 TRACE DispatcherServlet:1174 - No view rendering, null ModelAndView returned.
2024-08-20 13:52:23 DEBUG DispatcherServlet:1138 - Completed 200 OK, headers={masked}
2024-08-20 14:11:31 INFO  LocalContainerEntityManagerFactoryBean:650 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 14:11:31 INFO  HikariDataSource:350 - HikariPool-1 - Shutdown initiated...
2024-08-20 14:11:32 INFO  HikariDataSource:352 - HikariPool-1 - Shutdown completed.
2024-08-20 14:11:36 INFO  Version:21 - HV000001: Hibernate Validator 8.0.1.Final
2024-08-20 14:11:36 INFO  CouponApplication:50 - Starting CouponApplication using Java 21.0.2 with PID 41943 (/Users/satyakibhattacharje/Desktop/coupon 2/target/classes started by satyakibhattacharje in /Users/satyakibhattacharje/Desktop/coupon 2)
2024-08-20 14:11:36 DEBUG CouponApplication:51 - Running with Spring Boot v3.2.5, Spring v6.1.6
2024-08-20 14:11:36 INFO  CouponApplication:660 - The following 1 profile is active: "dev"
2024-08-20 14:11:37 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 14:11:37 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BaseCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ConstructsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ItemsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.MilestoneDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductExclusionRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentMilestoneMappingRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UsersRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 55 ms. Found 22 JPA repository interfaces.
2024-08-20 14:11:37 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 14:11:37 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.AuthRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.TokenRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponFeedbackRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponIssueRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.DataLakeDataRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.IssueQuestionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.JpaItemsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.ProductMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.StoreMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.TransactionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ItemsEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductEntityExclusionRepsoitory; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.TermsAndConditionsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepo; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.PageRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.RoleRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:11:37 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 19 ms. Found 14 MongoDB repository interfaces.
2024-08-20 14:11:38 INFO  TomcatWebServer:109 - Tomcat initialized with port 8080 (http)
2024-08-20 14:11:38 INFO  Http11NioProtocol:173 - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-20 14:11:38 INFO  StandardService:173 - Starting service [Tomcat]
2024-08-20 14:11:38 INFO  StandardEngine:173 - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-08-20 14:11:38 INFO  [/]:173 - Initializing Spring embedded WebApplicationContext
2024-08-20 14:11:38 INFO  ServletWebServerApplicationContext:296 - Root WebApplicationContext: initialization completed in 2198 ms
2024-08-20 14:11:38 INFO  LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-20 14:11:38 INFO  Version:44 - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-08-20 14:11:38 INFO  RegionFactoryInitiator:50 - HHH000026: Second-level cache disabled
2024-08-20 14:11:39 INFO  SpringPersistenceUnitInfo:87 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-20 14:11:39 INFO  HikariDataSource:110 - HikariPool-1 - Starting...
2024-08-20 14:11:40 INFO  HikariPool:565 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2c15034f
2024-08-20 14:11:40 INFO  HikariDataSource:123 - HikariPool-1 - Start completed.
2024-08-20 14:11:42 INFO  JtaPlatformInitiator:58 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-20 14:11:42 INFO  LocalContainerEntityManagerFactoryBean:437 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 14:11:42 DEBUG JwtAuthenticationFilter:240 - Filter 'jwtAuthenticationFilter' configured for use
2024-08-20 14:11:43 INFO  client:71 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.2+13-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@37bafef8, com.mongodb.Jep395RecordCodecProvider@2a6b6f4, com.mongodb.KotlinCodecProvider@11636d43]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-20 14:11:43 INFO  cluster:71 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=135642625, setName='rs0', canonicalAddress=127.0.0.1:27017, hosts=[127.0.0.1:27017], passives=[], arbiters=[], primary='127.0.0.1:27017', tagSet=TagSet{[]}, electionId=7fffffff0000000000000001, setVersion=1, topologyVersion=TopologyVersion{processId=66b601f70679bd8076e41ce4, counter=6}, lastWriteDate=Tue Aug 20 14:11:40 IST 2024, lastUpdateTimeNanos=1329923337081458}
2024-08-20 14:11:43 INFO  QueryEnhancerFactory:49 - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-20 14:11:43 WARN  JpaBaseConfiguration$JpaWebConfiguration:232 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-20 14:11:43 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.a.c.AuthController:
	{POST [/auth/register]}: register(SignUpRequestDto)
	{POST [/auth/token]}: token(LoginRequestDto)
2024-08-20 14:11:43 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.CouponController:
	{POST [/coupon/createmongocoupon]}: createMongoCoupon(CouponRequest)
	{POST [/coupon/updatebasecoupon/{basecouponname}]}: createBaseCoupon(String,BaseCouponRequest)
	{POST [/coupon/createbasecoupon]}: createBaseCoupon(BaseCouponRequest)
	{POST [/coupon/createuniquecoupon]}: createUniqueCoupon(UniqueCouponRequest)
	{POST [/coupon/updateuniquecoupon]}: updateUniqueCoupon(UniqueCouponRequest)
	{GET [/coupon/getuniquecoupon/{uniquecouponname}]}: getUniqueCoupon(String)
	{GET [/coupon/getallbasecoupon]}: getAllBaseCoupon()
	{PUT [/coupon/delete/base]}: deleteBaseCoupons(List)
	{PUT [/coupon/delete/batch]}: deleteBatchCoupons(List)
	{PUT [/coupon/delete/unique]}: deleteUniqueCoupons(List)
	{POST [/coupon/createCouponConstruct]}: createCouponConstruct(CouponConstructRequest)
	{POST [/coupon/upload/image/{code}]}: uploadCouponImage(MultipartFile,String)
	{PUT [/coupon/createCouponConstruct]}: updateCouponConstruct(CouponConstructRequest)
	{POST [/coupon/type-selection]}: selectCouponType(CouponTypeSelectionRequest)
	{PUT [/coupon/type-selection]}: updateSelectCouponType(CouponTypeSelectionRequest)
	{POST [/coupon/usage/selection]}: couponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
	{POST [/coupon/createmilestonecoupons]}: createMilestoneCoupons(MilestoneRequest)
	{GET [/coupon/download_general/{type}]}: downloadTemplate(String)
	{POST [/coupon/createcoupun]}: createCoupon(CouponRequest)
	{GET [/coupon/getbasecoupon/{basecouponname}]}: getBaseCoupon(String)
	{POST [/coupon/upload/{type}]}: uploadFile(MultipartFile,String)
	{POST [/coupon/uploadsegment/applicablefor/{couponcode}]}: uploadSegment(String,MultipartFile)
	{POST [/coupon/upload_items/{uniquecouponname}]}: uploadItems(String,String,MultipartFile)
	{POST [/coupon/createUserSpecificConstraints]}: createUserSpecificConstraints(UserSpecificConstraintsRequest)
	{POST [/coupon/createCouponApplicability]}: createCouponApplicability(CouponApplicabilityRequest)
	{POST [/coupon/uploadsegment/batchcoupons/{couponcode}], consumes [multipart/form-data]}: uploadSegmentForBatchCoupons(String,MultipartFile,String,String)
	{PUT [/coupon/update-date-range/base]}: updateBaseCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/batch]}: updateBatchCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/unique]}: updateUniqueCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/updateUserSpecificConstraints]}: updateUserSpecificConstraints(UserSpecificConstraintsRequest)
	{PUT [/coupon/updateCouponApplicability]}: updateCouponApplicability(CouponApplicabilityRequest)
	{PUT [/coupon/usage/selection]}: updateCouponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
	{POST [/coupon/uploadsegmentformilestone/{journeyName}]}: uploadSegmentForMilestoneCoupon(MultipartFile,String)
2024-08-20 14:11:43 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.GetCouponController:
	{GET [/getCoupons/filter/{couponCategory}]}: getFilteredCoupons(String,String,String,String,String,String,String,String,int,int,String)
	{GET [/getCoupons/getuniquecoupons]}: getUniqueCoupons(int,int)
	{GET [/getCoupons/getbatchcoupons]}: getBatchCoupons(int,int)
	{GET [/getCoupons/getmilestonedetails]}: getMilestoneDetails(int,int)
	{GET [/getCoupons/getmilestonecoupons/{mobileNumber}]}: getMilestonesCoupons(String)
	{GET [/getCoupons/getproductmaster]}: getProductMaster()
	{GET [/getCoupons/search/{couponCategory}]}: searchCoupons(String,String,int,int)
	{GET [/getCoupons/getbasecoupons]}: getBaseCoupons(int,int)
	{POST [/getCoupons/updateStatus/{couponCategory}]}: updateStatus(String,UpdateStatusRequest)
	{GET [/getCoupons/getstoremaster]}: getStoreMaster()
	{GET [/getCoupons/getcouponusage/{code}]}: getgetUniqueCouponUsage(String)
	{GET [/getCoupons/number/{mobileNumber}]}: getCouponUsingMobileNumber(String)
	{GET [/getCoupons/couponCode/{couponCode}]}: getCouponUsingCouponCode(String)
	{GET [/getCoupons/getcouponapplicability/{code}]}: getUniqueCouponApplicability(String)
	{GET [/getCoupons/getcouponconstructs/{code}]}: getUniqueCouponConstruts(String)
	{GET [/getCoupons/getuserspecificconstraints/{code}]}: getUniqueCouponUserSpecificConstraints(String)
2024-08-20 14:11:43 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.RedeemCouponController:
	{POST [/coupons/issue-question]}: saveIssueQuestion(IssueQuestionRequest)
	{GET [/coupons/issue-question]}: getIssueQuestion()
	{POST [/coupons/redeem-coupon/{couponCode}]}: redeemCoupon(PosInputRequest,String)
	{POST [/coupons/enquiry-coupon/{couponCode}]}: enquireCoupon(PosInputEnquiry,String)
	{POST [/coupons/settlement-coupon/{couponCode}]}: cancelCoupon(PosInputSettle,String)
	{POST [/coupons/cancellation-coupon/{couponCode}]}: settleCoupon(PosInputCancel,String)
	{POST [/coupons/feedback/{couponCode}]}: couponFeedback(CouponFeedbackRequest,String)
	{POST [/coupons/issue/{couponCode}]}: couponIssue(CouponIssueRequest,String)
	{POST [/coupons/redeemcoupon]}: redeemCouponForSapphire(PosInputRequest)
	{POST [/coupons/enquirycoupon]}: enquireCouponForSapphire(PosInputEnquiry)
	{POST [/coupons/cancellationcoupon]}: settleCouponForSapphire(PosInputCancel)
	{POST [/coupons/settlementcoupon]}: cancelCouponForSapphire(PosInputSettle)
2024-08-20 14:11:43 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.u.c.UserController:
	{GET [/user/getallroles]}: getAllRoles()
	{POST [/user/createrole]}: createRole(CreateRoleRequest)
	{POST [/user/updaterole]}: updateRole(CreateRoleRequest)
	{POST [/user/createuser]}: createUser(CreateUserRequest)
	{POST [/user/updateuser]}: updateUser(CreateUserRequest)
	{GET [/user/getuser/{email}]}: getUser(String)
	{POST [/user/resetpassword]}: resetPassword(ResetPasswordRequest)
	{POST [/user/login]}: login(LoginRequest)
2024-08-20 14:11:43 TRACE RequestMappingHandlerMapping:291 - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2024-08-20 14:11:43 DEBUG RequestMappingHandlerMapping:366 - 73 mappings in 'requestMappingHandlerMapping'
2024-08-20 14:11:43 DEBUG BeanNameUrlHandlerMapping:89 - Detected 0 mappings in 'beanNameHandlerMapping'
2024-08-20 14:11:43 TRACE RouterFunctionMapping:177 - 0 RouterFunction(s) in 'routerFunctionMapping'
2024-08-20 14:11:43 TRACE SimpleUrlHandlerMapping:452 - Mapped [/webjars/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2024-08-20 14:11:43 TRACE SimpleUrlHandlerMapping:452 - Mapped [/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2024-08-20 14:11:43 DEBUG SimpleUrlHandlerMapping:187 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-08-20 14:11:43 INFO  DefaultSecurityFilterChain:54 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5fd5963d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5426f313, org.springframework.security.web.context.SecurityContextHolderFilter@31b5db46, org.springframework.security.web.header.HeaderWriterFilter@13421eb0, org.springframework.web.filter.CorsFilter@35977ba7, org.springframework.security.web.authentication.logout.LogoutFilter@37d85eec, com.project.coupon.security.config.JwtAuthenticationFilter@4aa4bfa1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@77d1e709, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7c553e61, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1762be43, org.springframework.security.web.session.SessionManagementFilter@6035396c, org.springframework.security.web.access.ExceptionTranslationFilter@243fe859, org.springframework.security.web.access.intercept.AuthorizationFilter@5fca8642]
2024-08-20 14:11:43 DEBUG RequestMappingHandlerAdapter:634 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-08-20 14:11:43 DEBUG ExceptionHandlerExceptionResolver:305 - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-08-20 14:11:44 INFO  Http11NioProtocol:173 - Starting ProtocolHandler ["http-nio-8080"]
2024-08-20 14:11:44 INFO  TomcatWebServer:241 - Tomcat started on port 8080 (http) with context path ''
2024-08-20 14:11:44 INFO  CouponApplication:56 - Started CouponApplication in 8.147 seconds (process running for 9.372)
2024-08-20 14:12:09 INFO  [/]:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-20 14:12:09 INFO  DispatcherServlet:532 - Initializing Servlet 'dispatcherServlet'
2024-08-20 14:12:09 TRACE DispatcherServlet:530 - Detected org.springframework.web.multipart.support.StandardServletMultipartResolver@37aae870
2024-08-20 14:12:09 TRACE DispatcherServlet:554 - Detected org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@7ca3fa41
2024-08-20 14:12:09 TRACE DispatcherServlet:580 - Detected org.springframework.web.servlet.theme.FixedThemeResolver@2a063e1a
2024-08-20 14:12:09 TRACE DispatcherServlet:730 - Detected DefaultRequestToViewNameTranslator
2024-08-20 14:12:09 TRACE DispatcherServlet:794 - Detected SessionFlashMapManager
2024-08-20 14:12:09 DEBUG DispatcherServlet:549 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-08-20 14:12:09 INFO  DispatcherServlet:554 - Completed initialization in 73 ms
2024-08-20 14:12:09 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 14:12:09 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 14:12:09 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 14:12:09 INFO  JwtImplementation:139 - Is Token Expired: false
2024-08-20 14:12:09 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 14:12:09 INFO  JwtImplementation:131 - Is Token Valid: true
2024-08-20 14:12:09 TRACE DispatcherServlet:117 - GET "/coupon/download_general/PRODUCT_EXCLUSION", parameters={}, headers={masked} in DispatcherServlet 'dispatcherServlet'
2024-08-20 14:12:09 TRACE RequestMappingHandlerMapping:528 - Mapped to com.project.coupon.controller.CouponController#downloadTemplate(String)
2024-08-20 14:12:09 TRACE HandlerMethod:180 - Arguments: [PRODUCT_EXCLUSION]
2024-08-20 14:12:09 DEBUG ExceptionHandlerExceptionResolver:420 - Using @ExceptionHandler com.project.coupon.exceptions.GlobalExceptionHandler#handleGenericException(Exception)
2024-08-20 14:12:09 TRACE HandlerMethod:180 - Arguments: [java.lang.IllegalArgumentException: Invalid template type]
2024-08-20 14:12:09 ERROR GlobalExceptionHandler:126 - Invalid template type [com.project.coupon.controller.CouponController.downloadTemplate(CouponController.java:430), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255), org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188), org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831), org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014), org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903), jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885), jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150), org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108), org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365), org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374), com.project.coupon.security.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:86), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374), org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374), org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82), org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374), org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191), org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113), org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195), org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113), org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74), org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150), org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150), org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150), org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52), org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191), org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63), java.base/java.lang.Thread.run(Thread.java:1583)]
2024-08-20 14:12:09 DEBUG HttpEntityMethodProcessor:275 - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-08-20 14:12:09 TRACE HttpEntityMethodProcessor:117 - Writing [{message=An unexpected error occurred. Please try again later., status=failure}]
2024-08-20 14:12:09 DEBUG ExceptionHandlerExceptionResolver:179 - Resolved [java.lang.IllegalArgumentException: Invalid template type]
2024-08-20 14:12:09 TRACE DispatcherServlet:1174 - No view rendering, null ModelAndView returned.
2024-08-20 14:12:09 DEBUG DispatcherServlet:1138 - Completed 500 INTERNAL_SERVER_ERROR, headers={masked}
2024-08-20 14:12:38 INFO  LocalContainerEntityManagerFactoryBean:650 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 14:12:38 INFO  HikariDataSource:350 - HikariPool-1 - Shutdown initiated...
2024-08-20 14:12:38 INFO  HikariDataSource:352 - HikariPool-1 - Shutdown completed.
2024-08-20 14:12:41 INFO  Version:21 - HV000001: Hibernate Validator 8.0.1.Final
2024-08-20 14:12:41 INFO  CouponApplication:50 - Starting CouponApplication using Java 21.0.2 with PID 42207 (/Users/satyakibhattacharje/Desktop/coupon 2/target/classes started by satyakibhattacharje in /Users/satyakibhattacharje/Desktop/coupon 2)
2024-08-20 14:12:41 DEBUG CouponApplication:51 - Running with Spring Boot v3.2.5, Spring v6.1.6
2024-08-20 14:12:41 INFO  CouponApplication:660 - The following 1 profile is active: "dev"
2024-08-20 14:12:42 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 14:12:42 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BaseCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ConstructsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ItemsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.MilestoneDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductExclusionRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentMilestoneMappingRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UsersRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 94 ms. Found 22 JPA repository interfaces.
2024-08-20 14:12:42 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 14:12:42 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.AuthRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.TokenRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponFeedbackRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponIssueRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.DataLakeDataRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.IssueQuestionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.JpaItemsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.ProductMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.StoreMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.TransactionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ItemsEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductEntityExclusionRepsoitory; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.TermsAndConditionsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepo; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.PageRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.RoleRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:12:42 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 17 ms. Found 14 MongoDB repository interfaces.
2024-08-20 14:12:42 INFO  TomcatWebServer:109 - Tomcat initialized with port 8080 (http)
2024-08-20 14:12:42 INFO  Http11NioProtocol:173 - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-20 14:12:42 INFO  StandardService:173 - Starting service [Tomcat]
2024-08-20 14:12:42 INFO  StandardEngine:173 - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-08-20 14:12:42 INFO  [/]:173 - Initializing Spring embedded WebApplicationContext
2024-08-20 14:12:42 INFO  ServletWebServerApplicationContext:296 - Root WebApplicationContext: initialization completed in 1074 ms
2024-08-20 14:12:42 INFO  LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-20 14:12:43 INFO  Version:44 - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-08-20 14:12:43 INFO  RegionFactoryInitiator:50 - HHH000026: Second-level cache disabled
2024-08-20 14:12:43 INFO  SpringPersistenceUnitInfo:87 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-20 14:12:43 INFO  HikariDataSource:110 - HikariPool-1 - Starting...
2024-08-20 14:12:43 INFO  HikariPool:565 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@46591e98
2024-08-20 14:12:43 INFO  HikariDataSource:123 - HikariPool-1 - Start completed.
2024-08-20 14:12:44 INFO  JtaPlatformInitiator:58 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-20 14:12:44 INFO  LocalContainerEntityManagerFactoryBean:437 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 14:12:44 DEBUG JwtAuthenticationFilter:240 - Filter 'jwtAuthenticationFilter' configured for use
2024-08-20 14:12:44 INFO  client:71 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.2+13-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@3cc9bde9, com.mongodb.Jep395RecordCodecProvider@75bbeb89, com.mongodb.KotlinCodecProvider@197bf5ef]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-20 14:12:44 INFO  cluster:71 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=35917166, setName='rs0', canonicalAddress=127.0.0.1:27017, hosts=[127.0.0.1:27017], passives=[], arbiters=[], primary='127.0.0.1:27017', tagSet=TagSet{[]}, electionId=7fffffff0000000000000001, setVersion=1, topologyVersion=TopologyVersion{processId=66b601f70679bd8076e41ce4, counter=6}, lastWriteDate=Tue Aug 20 14:12:41 IST 2024, lastUpdateTimeNanos=1329985033764166}
2024-08-20 14:12:45 INFO  QueryEnhancerFactory:49 - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-20 14:12:45 WARN  JpaBaseConfiguration$JpaWebConfiguration:232 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-20 14:12:45 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.a.c.AuthController:
	{POST [/auth/register]}: register(SignUpRequestDto)
	{POST [/auth/token]}: token(LoginRequestDto)
2024-08-20 14:12:45 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.CouponController:
	{POST [/coupon/createUserSpecificConstraints]}: createUserSpecificConstraints(UserSpecificConstraintsRequest)
	{POST [/coupon/createCouponApplicability]}: createCouponApplicability(CouponApplicabilityRequest)
	{POST [/coupon/uploadsegment/batchcoupons/{couponcode}], consumes [multipart/form-data]}: uploadSegmentForBatchCoupons(String,MultipartFile,String,String)
	{PUT [/coupon/update-date-range/base]}: updateBaseCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/batch]}: updateBatchCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/unique]}: updateUniqueCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/updateUserSpecificConstraints]}: updateUserSpecificConstraints(UserSpecificConstraintsRequest)
	{PUT [/coupon/updateCouponApplicability]}: updateCouponApplicability(CouponApplicabilityRequest)
	{PUT [/coupon/usage/selection]}: updateCouponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
	{POST [/coupon/uploadsegmentformilestone/{journeyName}]}: uploadSegmentForMilestoneCoupon(MultipartFile,String)
	{POST [/coupon/createmongocoupon]}: createMongoCoupon(CouponRequest)
	{POST [/coupon/createbasecoupon]}: createBaseCoupon(BaseCouponRequest)
	{POST [/coupon/updatebasecoupon/{basecouponname}]}: createBaseCoupon(String,BaseCouponRequest)
	{POST [/coupon/createuniquecoupon]}: createUniqueCoupon(UniqueCouponRequest)
	{POST [/coupon/updateuniquecoupon]}: updateUniqueCoupon(UniqueCouponRequest)
	{GET [/coupon/getuniquecoupon/{uniquecouponname}]}: getUniqueCoupon(String)
	{GET [/coupon/getallbasecoupon]}: getAllBaseCoupon()
	{PUT [/coupon/delete/base]}: deleteBaseCoupons(List)
	{PUT [/coupon/delete/batch]}: deleteBatchCoupons(List)
	{PUT [/coupon/delete/unique]}: deleteUniqueCoupons(List)
	{POST [/coupon/createCouponConstruct]}: createCouponConstruct(CouponConstructRequest)
	{POST [/coupon/upload/image/{code}]}: uploadCouponImage(MultipartFile,String)
	{PUT [/coupon/createCouponConstruct]}: updateCouponConstruct(CouponConstructRequest)
	{POST [/coupon/type-selection]}: selectCouponType(CouponTypeSelectionRequest)
	{PUT [/coupon/type-selection]}: updateSelectCouponType(CouponTypeSelectionRequest)
	{POST [/coupon/usage/selection]}: couponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
	{POST [/coupon/createmilestonecoupons]}: createMilestoneCoupons(MilestoneRequest)
	{GET [/coupon/download_general/{type}]}: downloadTemplate(String)
	{POST [/coupon/createcoupun]}: createCoupon(CouponRequest)
	{GET [/coupon/getbasecoupon/{basecouponname}]}: getBaseCoupon(String)
	{POST [/coupon/upload/{type}]}: uploadFile(MultipartFile,String)
	{POST [/coupon/uploadsegment/applicablefor/{couponcode}]}: uploadSegment(String,MultipartFile)
	{POST [/coupon/upload_items/{uniquecouponname}]}: uploadItems(String,String,MultipartFile)
2024-08-20 14:12:45 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.GetCouponController:
	{GET [/getCoupons/number/{mobileNumber}]}: getCouponUsingMobileNumber(String)
	{GET [/getCoupons/couponCode/{couponCode}]}: getCouponUsingCouponCode(String)
	{GET [/getCoupons/getcouponconstructs/{code}]}: getUniqueCouponConstruts(String)
	{GET [/getCoupons/getcouponusage/{code}]}: getgetUniqueCouponUsage(String)
	{GET [/getCoupons/getcouponapplicability/{code}]}: getUniqueCouponApplicability(String)
	{GET [/getCoupons/getuserspecificconstraints/{code}]}: getUniqueCouponUserSpecificConstraints(String)
	{GET [/getCoupons/filter/{couponCategory}]}: getFilteredCoupons(String,String,String,String,String,String,String,String,int,int,String)
	{GET [/getCoupons/getuniquecoupons]}: getUniqueCoupons(int,int)
	{GET [/getCoupons/getbatchcoupons]}: getBatchCoupons(int,int)
	{GET [/getCoupons/getmilestonedetails]}: getMilestoneDetails(int,int)
	{GET [/getCoupons/getmilestonecoupons/{mobileNumber}]}: getMilestonesCoupons(String)
	{GET [/getCoupons/getproductmaster]}: getProductMaster()
	{GET [/getCoupons/search/{couponCategory}]}: searchCoupons(String,String,int,int)
	{GET [/getCoupons/getbasecoupons]}: getBaseCoupons(int,int)
	{POST [/getCoupons/updateStatus/{couponCategory}]}: updateStatus(String,UpdateStatusRequest)
	{GET [/getCoupons/getstoremaster]}: getStoreMaster()
2024-08-20 14:12:45 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.RedeemCouponController:
	{POST [/coupons/redeemcoupon]}: redeemCouponForSapphire(PosInputRequest)
	{POST [/coupons/enquirycoupon]}: enquireCouponForSapphire(PosInputEnquiry)
	{POST [/coupons/cancellationcoupon]}: settleCouponForSapphire(PosInputCancel)
	{POST [/coupons/settlementcoupon]}: cancelCouponForSapphire(PosInputSettle)
	{POST [/coupons/issue-question]}: saveIssueQuestion(IssueQuestionRequest)
	{GET [/coupons/issue-question]}: getIssueQuestion()
	{POST [/coupons/redeem-coupon/{couponCode}]}: redeemCoupon(PosInputRequest,String)
	{POST [/coupons/enquiry-coupon/{couponCode}]}: enquireCoupon(PosInputEnquiry,String)
	{POST [/coupons/settlement-coupon/{couponCode}]}: cancelCoupon(PosInputSettle,String)
	{POST [/coupons/cancellation-coupon/{couponCode}]}: settleCoupon(PosInputCancel,String)
	{POST [/coupons/feedback/{couponCode}]}: couponFeedback(CouponFeedbackRequest,String)
	{POST [/coupons/issue/{couponCode}]}: couponIssue(CouponIssueRequest,String)
2024-08-20 14:12:45 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.u.c.UserController:
	{POST [/user/login]}: login(LoginRequest)
	{POST [/user/createrole]}: createRole(CreateRoleRequest)
	{POST [/user/updaterole]}: updateRole(CreateRoleRequest)
	{POST [/user/createuser]}: createUser(CreateUserRequest)
	{POST [/user/updateuser]}: updateUser(CreateUserRequest)
	{GET [/user/getuser/{email}]}: getUser(String)
	{POST [/user/resetpassword]}: resetPassword(ResetPasswordRequest)
	{GET [/user/getallroles]}: getAllRoles()
2024-08-20 14:12:45 TRACE RequestMappingHandlerMapping:291 - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2024-08-20 14:12:45 DEBUG RequestMappingHandlerMapping:366 - 73 mappings in 'requestMappingHandlerMapping'
2024-08-20 14:12:45 DEBUG BeanNameUrlHandlerMapping:89 - Detected 0 mappings in 'beanNameHandlerMapping'
2024-08-20 14:12:45 TRACE RouterFunctionMapping:177 - 0 RouterFunction(s) in 'routerFunctionMapping'
2024-08-20 14:12:45 TRACE SimpleUrlHandlerMapping:452 - Mapped [/webjars/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2024-08-20 14:12:45 TRACE SimpleUrlHandlerMapping:452 - Mapped [/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2024-08-20 14:12:45 DEBUG SimpleUrlHandlerMapping:187 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-08-20 14:12:45 INFO  DefaultSecurityFilterChain:54 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5b481d77, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@761a429, org.springframework.security.web.context.SecurityContextHolderFilter@38171f9, org.springframework.security.web.header.HeaderWriterFilter@386c6903, org.springframework.web.filter.CorsFilter@411d3b5e, org.springframework.security.web.authentication.logout.LogoutFilter@2579cc85, com.project.coupon.security.config.JwtAuthenticationFilter@10395bc4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@495afaf5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@645b31d0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@53de637a, org.springframework.security.web.session.SessionManagementFilter@14443c86, org.springframework.security.web.access.ExceptionTranslationFilter@7ee0af8c, org.springframework.security.web.access.intercept.AuthorizationFilter@2acec770]
2024-08-20 14:12:45 DEBUG RequestMappingHandlerAdapter:634 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-08-20 14:12:45 DEBUG ExceptionHandlerExceptionResolver:305 - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-08-20 14:12:45 INFO  Http11NioProtocol:173 - Starting ProtocolHandler ["http-nio-8080"]
2024-08-20 14:12:45 INFO  TomcatWebServer:241 - Tomcat started on port 8080 (http) with context path ''
2024-08-20 14:12:45 INFO  CouponApplication:56 - Started CouponApplication in 4.135 seconds (process running for 4.768)
2024-08-20 14:12:52 INFO  [/]:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-20 14:12:52 INFO  DispatcherServlet:532 - Initializing Servlet 'dispatcherServlet'
2024-08-20 14:12:52 TRACE DispatcherServlet:530 - Detected org.springframework.web.multipart.support.StandardServletMultipartResolver@64b0195e
2024-08-20 14:12:52 TRACE DispatcherServlet:554 - Detected org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@30bb4248
2024-08-20 14:12:52 TRACE DispatcherServlet:580 - Detected org.springframework.web.servlet.theme.FixedThemeResolver@8a1bd62
2024-08-20 14:12:52 TRACE DispatcherServlet:730 - Detected DefaultRequestToViewNameTranslator
2024-08-20 14:12:52 TRACE DispatcherServlet:794 - Detected SessionFlashMapManager
2024-08-20 14:12:52 DEBUG DispatcherServlet:549 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-08-20 14:12:52 INFO  DispatcherServlet:554 - Completed initialization in 3 ms
2024-08-20 14:12:52 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 14:12:52 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 14:12:52 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 14:12:52 INFO  JwtImplementation:139 - Is Token Expired: false
2024-08-20 14:12:52 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 14:12:52 INFO  JwtImplementation:131 - Is Token Valid: true
2024-08-20 14:12:52 TRACE DispatcherServlet:117 - GET "/coupon/download_general/PRODUCT_EXCLUSION", parameters={}, headers={masked} in DispatcherServlet 'dispatcherServlet'
2024-08-20 14:12:52 TRACE RequestMappingHandlerMapping:528 - Mapped to com.project.coupon.controller.CouponController#downloadTemplate(String)
2024-08-20 14:12:52 TRACE HandlerMethod:180 - Arguments: [PRODUCT_EXCLUSION]
2024-08-20 14:12:52 DEBUG HttpEntityMethodProcessor:216 - Found 'Content-Type:application/octet-stream' in response
2024-08-20 14:12:52 TRACE HttpEntityMethodProcessor:117 - Writing [Byte array resource [resource loaded from byte array]]
2024-08-20 14:12:52 TRACE DispatcherServlet:1174 - No view rendering, null ModelAndView returned.
2024-08-20 14:12:52 DEBUG DispatcherServlet:1138 - Completed 200 OK, headers={masked}
2024-08-20 14:44:03 INFO  LocalContainerEntityManagerFactoryBean:650 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 14:44:03 INFO  HikariDataSource:350 - HikariPool-1 - Shutdown initiated...
2024-08-20 14:44:03 INFO  HikariDataSource:352 - HikariPool-1 - Shutdown completed.
2024-08-20 14:44:07 INFO  Version:21 - HV000001: Hibernate Validator 8.0.1.Final
2024-08-20 14:44:07 INFO  CouponApplication:50 - Starting CouponApplication using Java 21.0.2 with PID 49160 (/Users/satyakibhattacharje/Desktop/coupon 2/target/classes started by satyakibhattacharje in /Users/satyakibhattacharje/Desktop/coupon 2)
2024-08-20 14:44:07 DEBUG CouponApplication:51 - Running with Spring Boot v3.2.5, Spring v6.1.6
2024-08-20 14:44:07 INFO  CouponApplication:660 - The following 1 profile is active: "dev"
2024-08-20 14:44:08 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 14:44:08 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BaseCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ConstructsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ItemsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.MilestoneDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductExclusionRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentMilestoneMappingRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UsersRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 55 ms. Found 22 JPA repository interfaces.
2024-08-20 14:44:08 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 14:44:08 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.AuthRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.TokenRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponFeedbackRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponIssueRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.DataLakeDataRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.IssueQuestionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.JpaItemsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.ProductMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.StoreMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.TransactionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ItemsEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductEntityExclusionRepsoitory; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.TermsAndConditionsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepo; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.PageRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.RoleRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 14:44:08 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 17 ms. Found 14 MongoDB repository interfaces.
2024-08-20 14:44:08 INFO  TomcatWebServer:109 - Tomcat initialized with port 8080 (http)
2024-08-20 14:44:08 INFO  Http11NioProtocol:173 - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-20 14:44:08 INFO  StandardService:173 - Starting service [Tomcat]
2024-08-20 14:44:08 INFO  StandardEngine:173 - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-08-20 14:44:08 INFO  [/]:173 - Initializing Spring embedded WebApplicationContext
2024-08-20 14:44:08 INFO  ServletWebServerApplicationContext:296 - Root WebApplicationContext: initialization completed in 910 ms
2024-08-20 14:44:08 INFO  LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-20 14:44:08 INFO  Version:44 - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-08-20 14:44:08 INFO  RegionFactoryInitiator:50 - HHH000026: Second-level cache disabled
2024-08-20 14:44:09 INFO  SpringPersistenceUnitInfo:87 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-20 14:44:09 INFO  HikariDataSource:110 - HikariPool-1 - Starting...
2024-08-20 14:44:09 INFO  HikariPool:565 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5ee581db
2024-08-20 14:44:09 INFO  HikariDataSource:123 - HikariPool-1 - Start completed.
2024-08-20 14:44:10 INFO  JtaPlatformInitiator:58 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-20 14:44:10 INFO  LocalContainerEntityManagerFactoryBean:437 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 14:44:10 DEBUG JwtAuthenticationFilter:240 - Filter 'jwtAuthenticationFilter' configured for use
2024-08-20 14:44:10 INFO  client:71 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.2+13-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@37bafef8, com.mongodb.Jep395RecordCodecProvider@2a6b6f4, com.mongodb.KotlinCodecProvider@11636d43]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-20 14:44:10 INFO  cluster:71 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=41306458, setName='rs0', canonicalAddress=127.0.0.1:27017, hosts=[127.0.0.1:27017], passives=[], arbiters=[], primary='127.0.0.1:27017', tagSet=TagSet{[]}, electionId=7fffffff0000000000000001, setVersion=1, topologyVersion=TopologyVersion{processId=66b601f70679bd8076e41ce4, counter=6}, lastWriteDate=Tue Aug 20 14:44:05 IST 2024, lastUpdateTimeNanos=1331870906934291}
2024-08-20 14:44:10 INFO  QueryEnhancerFactory:49 - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-20 14:44:11 WARN  JpaBaseConfiguration$JpaWebConfiguration:232 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-20 14:44:11 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.a.c.AuthController:
	{POST [/auth/register]}: register(SignUpRequestDto)
	{POST [/auth/token]}: token(LoginRequestDto)
2024-08-20 14:44:11 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.CouponController:
	{POST [/coupon/createmongocoupon]}: createMongoCoupon(CouponRequest)
	{POST [/coupon/updatebasecoupon/{basecouponname}]}: createBaseCoupon(String,BaseCouponRequest)
	{POST [/coupon/createbasecoupon]}: createBaseCoupon(BaseCouponRequest)
	{POST [/coupon/createuniquecoupon]}: createUniqueCoupon(UniqueCouponRequest)
	{POST [/coupon/updateuniquecoupon]}: updateUniqueCoupon(UniqueCouponRequest)
	{GET [/coupon/getuniquecoupon/{uniquecouponname}]}: getUniqueCoupon(String)
	{GET [/coupon/getallbasecoupon]}: getAllBaseCoupon()
	{PUT [/coupon/delete/base]}: deleteBaseCoupons(List)
	{PUT [/coupon/delete/batch]}: deleteBatchCoupons(List)
	{PUT [/coupon/delete/unique]}: deleteUniqueCoupons(List)
	{POST [/coupon/createCouponConstruct]}: createCouponConstruct(CouponConstructRequest)
	{POST [/coupon/upload/image/{code}]}: uploadCouponImage(MultipartFile,String)
	{PUT [/coupon/createCouponConstruct]}: updateCouponConstruct(CouponConstructRequest)
	{POST [/coupon/type-selection]}: selectCouponType(CouponTypeSelectionRequest)
	{PUT [/coupon/type-selection]}: updateSelectCouponType(CouponTypeSelectionRequest)
	{POST [/coupon/usage/selection]}: couponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
	{POST [/coupon/createmilestonecoupons]}: createMilestoneCoupons(MilestoneRequest)
	{GET [/coupon/download_general/{type}]}: downloadTemplate(String)
	{POST [/coupon/createcoupun]}: createCoupon(CouponRequest)
	{GET [/coupon/getbasecoupon/{basecouponname}]}: getBaseCoupon(String)
	{POST [/coupon/upload/{type}]}: uploadFile(MultipartFile,String)
	{POST [/coupon/uploadsegment/applicablefor/{couponcode}]}: uploadSegment(String,MultipartFile)
	{POST [/coupon/upload_items/{uniquecouponname}]}: uploadItems(String,String,MultipartFile)
	{POST [/coupon/createUserSpecificConstraints]}: createUserSpecificConstraints(UserSpecificConstraintsRequest)
	{POST [/coupon/createCouponApplicability]}: createCouponApplicability(CouponApplicabilityRequest)
	{POST [/coupon/uploadsegment/batchcoupons/{couponcode}], consumes [multipart/form-data]}: uploadSegmentForBatchCoupons(String,MultipartFile,String,String)
	{PUT [/coupon/update-date-range/base]}: updateBaseCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/batch]}: updateBatchCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/unique]}: updateUniqueCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/updateUserSpecificConstraints]}: updateUserSpecificConstraints(UserSpecificConstraintsRequest)
	{PUT [/coupon/updateCouponApplicability]}: updateCouponApplicability(CouponApplicabilityRequest)
	{PUT [/coupon/usage/selection]}: updateCouponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
	{POST [/coupon/uploadsegmentformilestone/{journeyName}]}: uploadSegmentForMilestoneCoupon(MultipartFile,String)
2024-08-20 14:44:11 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.GetCouponController:
	{GET [/getCoupons/getmilestonecoupons/{mobileNumber}]}: getMilestonesCoupons(String)
	{GET [/getCoupons/getproductmaster]}: getProductMaster()
	{GET [/getCoupons/filter/{couponCategory}]}: getFilteredCoupons(String,String,String,String,String,String,String,String,int,int,String)
	{GET [/getCoupons/getuniquecoupons]}: getUniqueCoupons(int,int)
	{GET [/getCoupons/getbatchcoupons]}: getBatchCoupons(int,int)
	{GET [/getCoupons/getmilestonedetails]}: getMilestoneDetails(int,int)
	{GET [/getCoupons/search/{couponCategory}]}: searchCoupons(String,String,int,int)
	{GET [/getCoupons/getbasecoupons]}: getBaseCoupons(int,int)
	{POST [/getCoupons/updateStatus/{couponCategory}]}: updateStatus(String,UpdateStatusRequest)
	{GET [/getCoupons/getstoremaster]}: getStoreMaster()
	{GET [/getCoupons/number/{mobileNumber}]}: getCouponUsingMobileNumber(String)
	{GET [/getCoupons/couponCode/{couponCode}]}: getCouponUsingCouponCode(String)
	{GET [/getCoupons/getcouponapplicability/{code}]}: getUniqueCouponApplicability(String)
	{GET [/getCoupons/getcouponconstructs/{code}]}: getUniqueCouponConstruts(String)
	{GET [/getCoupons/getcouponusage/{code}]}: getgetUniqueCouponUsage(String)
	{GET [/getCoupons/getuserspecificconstraints/{code}]}: getUniqueCouponUserSpecificConstraints(String)
2024-08-20 14:44:11 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.RedeemCouponController:
	{POST [/coupons/issue-question]}: saveIssueQuestion(IssueQuestionRequest)
	{GET [/coupons/issue-question]}: getIssueQuestion()
	{POST [/coupons/redeem-coupon/{couponCode}]}: redeemCoupon(PosInputRequest,String)
	{POST [/coupons/enquiry-coupon/{couponCode}]}: enquireCoupon(PosInputEnquiry,String)
	{POST [/coupons/settlement-coupon/{couponCode}]}: cancelCoupon(PosInputSettle,String)
	{POST [/coupons/cancellation-coupon/{couponCode}]}: settleCoupon(PosInputCancel,String)
	{POST [/coupons/feedback/{couponCode}]}: couponFeedback(CouponFeedbackRequest,String)
	{POST [/coupons/issue/{couponCode}]}: couponIssue(CouponIssueRequest,String)
	{POST [/coupons/redeemcoupon]}: redeemCouponForSapphire(PosInputRequest)
	{POST [/coupons/enquirycoupon]}: enquireCouponForSapphire(PosInputEnquiry)
	{POST [/coupons/settlementcoupon]}: cancelCouponForSapphire(PosInputSettle)
	{POST [/coupons/cancellationcoupon]}: settleCouponForSapphire(PosInputCancel)
2024-08-20 14:44:11 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.u.c.UserController:
	{POST [/user/login]}: login(LoginRequest)
	{POST [/user/createrole]}: createRole(CreateRoleRequest)
	{POST [/user/updaterole]}: updateRole(CreateRoleRequest)
	{POST [/user/createuser]}: createUser(CreateUserRequest)
	{POST [/user/updateuser]}: updateUser(CreateUserRequest)
	{GET [/user/getuser/{email}]}: getUser(String)
	{POST [/user/resetpassword]}: resetPassword(ResetPasswordRequest)
	{GET [/user/getallroles]}: getAllRoles()
2024-08-20 14:44:11 TRACE RequestMappingHandlerMapping:291 - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2024-08-20 14:44:11 DEBUG RequestMappingHandlerMapping:366 - 73 mappings in 'requestMappingHandlerMapping'
2024-08-20 14:44:11 DEBUG BeanNameUrlHandlerMapping:89 - Detected 0 mappings in 'beanNameHandlerMapping'
2024-08-20 14:44:11 TRACE RouterFunctionMapping:177 - 0 RouterFunction(s) in 'routerFunctionMapping'
2024-08-20 14:44:11 TRACE SimpleUrlHandlerMapping:452 - Mapped [/webjars/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2024-08-20 14:44:11 TRACE SimpleUrlHandlerMapping:452 - Mapped [/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2024-08-20 14:44:11 DEBUG SimpleUrlHandlerMapping:187 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-08-20 14:44:11 INFO  DefaultSecurityFilterChain:54 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7286f0a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@96c760b, org.springframework.security.web.context.SecurityContextHolderFilter@89eab25, org.springframework.security.web.header.HeaderWriterFilter@22d7e121, org.springframework.web.filter.CorsFilter@bfe51c3, org.springframework.security.web.authentication.logout.LogoutFilter@3614cd03, com.project.coupon.security.config.JwtAuthenticationFilter@4aa4bfa1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@25fc72c6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6b3decaa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@42754496, org.springframework.security.web.session.SessionManagementFilter@77d1e709, org.springframework.security.web.access.ExceptionTranslationFilter@1eb16e4b, org.springframework.security.web.access.intercept.AuthorizationFilter@35977ba7]
2024-08-20 14:44:11 DEBUG RequestMappingHandlerAdapter:634 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-08-20 14:44:11 DEBUG ExceptionHandlerExceptionResolver:305 - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-08-20 14:44:11 INFO  Http11NioProtocol:173 - Starting ProtocolHandler ["http-nio-8080"]
2024-08-20 14:44:11 INFO  TomcatWebServer:241 - Tomcat started on port 8080 (http) with context path ''
2024-08-20 14:44:11 INFO  CouponApplication:56 - Started CouponApplication in 3.923 seconds (process running for 4.527)
2024-08-20 14:45:30 INFO  [/]:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-20 14:45:30 INFO  DispatcherServlet:532 - Initializing Servlet 'dispatcherServlet'
2024-08-20 14:45:30 TRACE DispatcherServlet:530 - Detected org.springframework.web.multipart.support.StandardServletMultipartResolver@21ca613b
2024-08-20 14:45:30 TRACE DispatcherServlet:554 - Detected org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@6fc294ae
2024-08-20 14:45:30 TRACE DispatcherServlet:580 - Detected org.springframework.web.servlet.theme.FixedThemeResolver@721af8d0
2024-08-20 14:45:30 TRACE DispatcherServlet:730 - Detected DefaultRequestToViewNameTranslator
2024-08-20 14:45:30 TRACE DispatcherServlet:794 - Detected SessionFlashMapManager
2024-08-20 14:45:30 DEBUG DispatcherServlet:549 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-08-20 14:45:30 INFO  DispatcherServlet:554 - Completed initialization in 5 ms
2024-08-20 14:45:30 TRACE RequestMappingHandlerMapping:416 - 2 matching mappings: [{ [/error]}, { [/error], produces [text/html]}]
2024-08-20 14:46:28 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 14:46:28 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 14:46:28 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 14:46:28 INFO  JwtImplementation:139 - Is Token Expired: false
2024-08-20 14:46:28 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 14:46:28 INFO  JwtImplementation:131 - Is Token Valid: true
2024-08-20 14:46:28 TRACE DispatcherServlet:117 - GET "/getCoupons/getcouponconstructs/SUMMER2031", parameters={}, headers={masked} in DispatcherServlet 'dispatcherServlet'
2024-08-20 14:46:28 TRACE RequestMappingHandlerMapping:528 - Mapped to com.project.coupon.controller.GetCouponController#getUniqueCouponConstruts(String)
2024-08-20 14:46:28 TRACE HandlerMethod:180 - Arguments: [SUMMER2031]
2024-08-20 14:46:28 DEBUG HttpEntityMethodProcessor:275 - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-08-20 14:46:28 TRACE HttpEntityMethodProcessor:117 - Writing [UniqueCouponConstructResponse(couponCode=SUMMER2031, constructType=null, freebieItemMongo=null, discountPercentage=0.0, flatDiscount=0.0, discountCap=0.0, minimumOrderValue=0.0, productInclusion=[2, 3, 4], productExclusion=null, freebieItemFile=http://localhost:8080/coupon/download_general/FREEBIE, productInclusionFile=http://localhost:8080/coupon/download_general/PRODUCT_INCLUSION, productExclusionFile=http://localhost:8080/coupon/download_general/PRODUCT_EXCLUSION)]
2024-08-20 14:46:28 TRACE DispatcherServlet:1174 - No view rendering, null ModelAndView returned.
2024-08-20 14:46:28 DEBUG DispatcherServlet:1138 - Completed 200 OK, headers={masked}
2024-08-20 14:47:06 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 14:47:06 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 14:47:06 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 14:47:06 INFO  JwtImplementation:139 - Is Token Expired: false
2024-08-20 14:47:06 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 14:47:06 INFO  JwtImplementation:131 - Is Token Valid: true
2024-08-20 14:47:06 TRACE DispatcherServlet:117 - GET "/coupon/download_general/FREEBIE", parameters={}, headers={masked} in DispatcherServlet 'dispatcherServlet'
2024-08-20 14:47:06 TRACE RequestMappingHandlerMapping:528 - Mapped to com.project.coupon.controller.CouponController#downloadTemplate(String)
2024-08-20 14:47:06 TRACE HandlerMethod:180 - Arguments: [FREEBIE]
2024-08-20 14:47:06 DEBUG HttpEntityMethodProcessor:216 - Found 'Content-Type:application/octet-stream' in response
2024-08-20 14:47:06 TRACE HttpEntityMethodProcessor:117 - Writing [Byte array resource [resource loaded from byte array]]
2024-08-20 14:47:06 TRACE DispatcherServlet:1174 - No view rendering, null ModelAndView returned.
2024-08-20 14:47:06 DEBUG DispatcherServlet:1138 - Completed 200 OK, headers={masked}
2024-08-20 15:32:36 INFO  LocalContainerEntityManagerFactoryBean:650 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 15:32:36 INFO  HikariDataSource:350 - HikariPool-1 - Shutdown initiated...
2024-08-20 15:32:36 INFO  HikariDataSource:352 - HikariPool-1 - Shutdown completed.
2024-08-20 20:26:53 INFO  Version:21 - HV000001: Hibernate Validator 8.0.1.Final
2024-08-20 20:26:53 INFO  CouponApplication:50 - Starting CouponApplication using Java 21.0.2 with PID 88836 (/Users/satyakibhattacharje/Desktop/coupon 2/target/classes started by satyakibhattacharje in /Users/satyakibhattacharje/Desktop/coupon 2)
2024-08-20 20:26:53 DEBUG CouponApplication:51 - Running with Spring Boot v3.2.5, Spring v6.1.6
2024-08-20 20:26:53 INFO  CouponApplication:660 - The following 1 profile is active: "dev"
2024-08-20 20:26:53 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 20:26:53 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BaseCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ConstructsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ItemsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.MilestoneDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductExclusionRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentMilestoneMappingRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.StoreRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UsersRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 49 ms. Found 23 JPA repository interfaces.
2024-08-20 20:26:53 INFO  RepositoryConfigurationDelegate:295 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-20 20:26:53 INFO  RepositoryConfigurationDelegate:143 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.AuthRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.authservice.repositories.TokenRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponFeedbackRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.CouponIssueRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.DataLakeDataRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.IssueQuestionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.JpaItemsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.ProductMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.StoreMasterRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.jpaRepositories.TransactionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.BatchCouponEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.CouponRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ItemsEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductEntityExclusionRepsoitory; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.ProductEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDataRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.SegmentDetailsRepositoryEntity; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.StoreEntityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.TermsAndConditionsRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.repository.UniqueCouponRepo; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.PageRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.RoleRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationExtensionSupport:320 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.project.coupon.user.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-20 20:26:53 INFO  RepositoryConfigurationDelegate:211 - Finished Spring Data repository scanning in 16 ms. Found 15 MongoDB repository interfaces.
2024-08-20 20:26:53 INFO  TomcatWebServer:109 - Tomcat initialized with port 8080 (http)
2024-08-20 20:26:53 INFO  Http11NioProtocol:173 - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-20 20:26:53 INFO  StandardService:173 - Starting service [Tomcat]
2024-08-20 20:26:53 INFO  StandardEngine:173 - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-08-20 20:26:53 INFO  [/]:173 - Initializing Spring embedded WebApplicationContext
2024-08-20 20:26:53 INFO  ServletWebServerApplicationContext:296 - Root WebApplicationContext: initialization completed in 805 ms
2024-08-20 20:26:54 INFO  LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-20 20:26:54 INFO  Version:44 - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-08-20 20:26:54 INFO  RegionFactoryInitiator:50 - HHH000026: Second-level cache disabled
2024-08-20 20:26:54 INFO  SpringPersistenceUnitInfo:87 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-20 20:26:54 INFO  HikariDataSource:110 - HikariPool-1 - Starting...
2024-08-20 20:26:54 INFO  HikariPool:565 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@212e39ee
2024-08-20 20:26:54 INFO  HikariDataSource:123 - HikariPool-1 - Start completed.
2024-08-20 20:26:55 INFO  JtaPlatformInitiator:58 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-20 20:26:55 INFO  LocalContainerEntityManagerFactoryBean:437 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 20:26:55 DEBUG JwtAuthenticationFilter:240 - Filter 'jwtAuthenticationFilter' configured for use
2024-08-20 20:26:55 INFO  client:71 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.2+13-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@56a69c47, com.mongodb.Jep395RecordCodecProvider@333cedbd, com.mongodb.KotlinCodecProvider@388b9799]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-20 20:26:56 INFO  cluster:71 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=29481208, setName='rs0', canonicalAddress=127.0.0.1:27017, hosts=[127.0.0.1:27017], passives=[], arbiters=[], primary='127.0.0.1:27017', tagSet=TagSet{[]}, electionId=7fffffff0000000000000001, setVersion=1, topologyVersion=TopologyVersion{processId=66b601f70679bd8076e41ce4, counter=6}, lastWriteDate=Tue Aug 20 20:26:55 IST 2024, lastUpdateTimeNanos=1342553542798666}
2024-08-20 20:26:56 INFO  QueryEnhancerFactory:49 - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-20 20:26:56 WARN  JpaBaseConfiguration$JpaWebConfiguration:232 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-20 20:26:56 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.a.c.AuthController:
	{POST [/auth/register]}: register(SignUpRequestDto)
	{POST [/auth/token]}: token(LoginRequestDto)
2024-08-20 20:26:56 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.CouponController:
	{POST [/coupon/createcoupun]}: createCoupon(CouponRequest)
	{GET [/coupon/getbasecoupon/{basecouponname}]}: getBaseCoupon(String)
	{POST [/coupon/upload/{type}]}: uploadFile(MultipartFile,String)
	{POST [/coupon/uploadsegment/applicablefor/{couponcode}]}: uploadSegment(String,MultipartFile)
	{POST [/coupon/upload_items/{uniquecouponname}]}: uploadItems(String,String,MultipartFile)
	{PUT [/coupon/delete/unique]}: deleteUniqueCoupons(List)
	{POST [/coupon/createCouponConstruct]}: createCouponConstruct(CouponConstructRequest)
	{POST [/coupon/upload/image/{code}]}: uploadCouponImage(MultipartFile,String)
	{PUT [/coupon/createCouponConstruct]}: updateCouponConstruct(CouponConstructRequest)
	{POST [/coupon/type-selection]}: selectCouponType(CouponTypeSelectionRequest)
	{PUT [/coupon/type-selection]}: updateSelectCouponType(CouponTypeSelectionRequest)
	{POST [/coupon/usage/selection]}: couponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
	{POST [/coupon/createmilestonecoupons]}: createMilestoneCoupons(MilestoneRequest)
	{GET [/coupon/download_general/{type}]}: downloadTemplate(String)
	{POST [/coupon/createmongocoupon]}: createMongoCoupon(CouponRequest)
	{POST [/coupon/updatebasecoupon/{basecouponname}]}: createBaseCoupon(String,BaseCouponRequest)
	{POST [/coupon/createbasecoupon]}: createBaseCoupon(BaseCouponRequest)
	{POST [/coupon/createuniquecoupon]}: createUniqueCoupon(UniqueCouponRequest)
	{POST [/coupon/updateuniquecoupon]}: updateUniqueCoupon(UniqueCouponRequest)
	{GET [/coupon/getuniquecoupon/{uniquecouponname}]}: getUniqueCoupon(String)
	{GET [/coupon/getallbasecoupon]}: getAllBaseCoupon()
	{PUT [/coupon/delete/base]}: deleteBaseCoupons(List)
	{PUT [/coupon/delete/batch]}: deleteBatchCoupons(List)
	{POST [/coupon/uploadsegmentformilestone/{journeyName}]}: uploadSegmentForMilestoneCoupon(MultipartFile,String)
	{POST [/coupon/createUserSpecificConstraints]}: createUserSpecificConstraints(UserSpecificConstraintsRequest)
	{POST [/coupon/createCouponApplicability]}: createCouponApplicability(CouponApplicabilityRequest)
	{POST [/coupon/uploadsegment/batchcoupons/{couponcode}], consumes [multipart/form-data]}: uploadSegmentForBatchCoupons(String,MultipartFile,String,String)
	{PUT [/coupon/update-date-range/base]}: updateBaseCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/batch]}: updateBatchCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/update-date-range/unique]}: updateUniqueCouponDateRange(List,LocalDate,LocalDate)
	{PUT [/coupon/updateUserSpecificConstraints]}: updateUserSpecificConstraints(UserSpecificConstraintsRequest)
	{PUT [/coupon/updateCouponApplicability]}: updateCouponApplicability(CouponApplicabilityRequest)
	{PUT [/coupon/usage/selection]}: updateCouponUsageSelection(String,String,String,String,Integer,String,MultipartFile)
2024-08-20 20:26:56 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.GetCouponController:
	{GET [/getCoupons/search/{couponCategory}]}: searchCoupons(String,String,int,int)
	{GET [/getCoupons/getbasecoupons]}: getBaseCoupons(int,int)
	{POST [/getCoupons/updateStatus/{couponCategory}]}: updateStatus(String,UpdateStatusRequest)
	{GET [/getCoupons/getstoremaster]}: getStoreMaster()
	{GET [/getCoupons/filter/{couponCategory}]}: getFilteredCoupons(String,String,String,String,String,String,String,String,int,int,String)
	{GET [/getCoupons/getuniquecoupons]}: getUniqueCoupons(int,int)
	{GET [/getCoupons/getbatchcoupons]}: getBatchCoupons(int,int)
	{GET [/getCoupons/getmilestonedetails]}: getMilestoneDetails(int,int)
	{GET [/getCoupons/getmilestonecoupons/{mobileNumber}]}: getMilestonesCoupons(String)
	{GET [/getCoupons/getproductmaster]}: getProductMaster()
	{GET [/getCoupons/getuserspecificconstraints/{code}]}: getUniqueCouponUserSpecificConstraints(String)
	{GET [/getCoupons/number/{mobileNumber}]}: getCouponUsingMobileNumber(String)
	{GET [/getCoupons/couponCode/{couponCode}]}: getCouponUsingCouponCode(String)
	{GET [/getCoupons/getcouponapplicability/{code}]}: getUniqueCouponApplicability(String)
	{GET [/getCoupons/getcouponconstructs/{code}]}: getUniqueCouponConstruts(String)
	{GET [/getCoupons/getcouponusage/{code}]}: getgetUniqueCouponUsage(String)
2024-08-20 20:26:56 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.c.RedeemCouponController:
	{POST [/coupons/redeem-coupon/{couponCode}]}: redeemCoupon(PosInputRequest,String)
	{POST [/coupons/enquiry-coupon/{couponCode}]}: enquireCoupon(PosInputEnquiry,String)
	{POST [/coupons/settlement-coupon/{couponCode}]}: cancelCoupon(PosInputSettle,String)
	{POST [/coupons/cancellation-coupon/{couponCode}]}: settleCoupon(PosInputCancel,String)
	{POST [/coupons/feedback/{couponCode}]}: couponFeedback(CouponFeedbackRequest,String)
	{POST [/coupons/issue/{couponCode}]}: couponIssue(CouponIssueRequest,String)
	{POST [/coupons/issue-question]}: saveIssueQuestion(IssueQuestionRequest)
	{GET [/coupons/issue-question]}: getIssueQuestion()
	{POST [/coupons/redeemcoupon]}: redeemCouponForSapphire(PosInputRequest)
	{POST [/coupons/enquirycoupon]}: enquireCouponForSapphire(PosInputEnquiry)
	{POST [/coupons/cancellationcoupon]}: settleCouponForSapphire(PosInputCancel)
	{POST [/coupons/settlementcoupon]}: cancelCouponForSapphire(PosInputSettle)
2024-08-20 20:26:56 TRACE RequestMappingHandlerMapping:291 - 
	c.p.c.u.c.UserController:
	{POST [/user/login]}: login(LoginRequest)
	{POST [/user/createrole]}: createRole(CreateRoleRequest)
	{POST [/user/updaterole]}: updateRole(CreateRoleRequest)
	{POST [/user/createuser]}: createUser(CreateUserRequest)
	{POST [/user/updateuser]}: updateUser(CreateUserRequest)
	{GET [/user/getuser/{email}]}: getUser(String)
	{POST [/user/resetpassword]}: resetPassword(ResetPasswordRequest)
	{GET [/user/getallroles]}: getAllRoles()
2024-08-20 20:26:56 TRACE RequestMappingHandlerMapping:291 - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2024-08-20 20:26:56 DEBUG RequestMappingHandlerMapping:366 - 73 mappings in 'requestMappingHandlerMapping'
2024-08-20 20:26:56 DEBUG BeanNameUrlHandlerMapping:89 - Detected 0 mappings in 'beanNameHandlerMapping'
2024-08-20 20:26:56 TRACE RouterFunctionMapping:177 - 0 RouterFunction(s) in 'routerFunctionMapping'
2024-08-20 20:26:56 TRACE SimpleUrlHandlerMapping:452 - Mapped [/webjars/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2024-08-20 20:26:56 TRACE SimpleUrlHandlerMapping:452 - Mapped [/**] onto ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2024-08-20 20:26:56 DEBUG SimpleUrlHandlerMapping:187 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-08-20 20:26:56 INFO  DefaultSecurityFilterChain:54 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@72b000e2, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@50ad030a, org.springframework.security.web.context.SecurityContextHolderFilter@4ef69c53, org.springframework.security.web.header.HeaderWriterFilter@14cd3858, org.springframework.web.filter.CorsFilter@1c825108, org.springframework.security.web.authentication.logout.LogoutFilter@1898593, com.project.coupon.security.config.JwtAuthenticationFilter@7011eee0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@719a208f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3119ce7a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2c956132, org.springframework.security.web.session.SessionManagementFilter@544cd64b, org.springframework.security.web.access.ExceptionTranslationFilter@2e13c72b, org.springframework.security.web.access.intercept.AuthorizationFilter@5c2fd20c]
2024-08-20 20:26:56 DEBUG RequestMappingHandlerAdapter:634 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-08-20 20:26:56 DEBUG ExceptionHandlerExceptionResolver:305 - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-08-20 20:26:56 INFO  Http11NioProtocol:173 - Starting ProtocolHandler ["http-nio-8080"]
2024-08-20 20:26:56 INFO  TomcatWebServer:241 - Tomcat started on port 8080 (http) with context path ''
2024-08-20 20:26:56 INFO  CouponApplication:56 - Started CouponApplication in 3.984 seconds (process running for 4.983)
2024-08-20 20:27:31 INFO  [/]:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-20 20:27:31 INFO  DispatcherServlet:532 - Initializing Servlet 'dispatcherServlet'
2024-08-20 20:27:31 TRACE DispatcherServlet:530 - Detected org.springframework.web.multipart.support.StandardServletMultipartResolver@6ebdbe96
2024-08-20 20:27:31 TRACE DispatcherServlet:554 - Detected org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@e198e7f
2024-08-20 20:27:31 TRACE DispatcherServlet:580 - Detected org.springframework.web.servlet.theme.FixedThemeResolver@50c253b6
2024-08-20 20:27:31 TRACE DispatcherServlet:730 - Detected DefaultRequestToViewNameTranslator
2024-08-20 20:27:31 TRACE DispatcherServlet:794 - Detected SessionFlashMapManager
2024-08-20 20:27:31 DEBUG DispatcherServlet:549 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-08-20 20:27:31 INFO  DispatcherServlet:554 - Completed initialization in 33 ms
2024-08-20 20:27:31 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 20:27:31 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 20:27:31 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 20:27:31 INFO  JwtImplementation:139 - Is Token Expired: false
2024-08-20 20:27:31 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 20:27:31 INFO  JwtImplementation:131 - Is Token Valid: true
2024-08-20 20:27:31 TRACE DispatcherServlet:117 - GET "/coupon/download_general/STORE", parameters={}, headers={masked} in DispatcherServlet 'dispatcherServlet'
2024-08-20 20:27:31 TRACE RequestMappingHandlerMapping:528 - Mapped to com.project.coupon.controller.CouponController#downloadTemplate(String)
2024-08-20 20:27:31 TRACE HandlerMethod:180 - Arguments: [STORE]
2024-08-20 20:27:31 DEBUG HttpEntityMethodProcessor:216 - Found 'Content-Type:application/octet-stream' in response
2024-08-20 20:27:31 TRACE HttpEntityMethodProcessor:117 - Writing [Byte array resource [resource loaded from byte array]]
2024-08-20 20:27:31 TRACE DispatcherServlet:1174 - No view rendering, null ModelAndView returned.
2024-08-20 20:27:31 DEBUG DispatcherServlet:1138 - Completed 200 OK, headers={masked}
2024-08-20 20:28:34 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 20:28:34 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 20:28:34 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 20:28:34 INFO  JwtImplementation:139 - Is Token Expired: false
2024-08-20 20:28:34 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 20:28:34 INFO  JwtImplementation:131 - Is Token Valid: true
2024-08-20 20:28:34 TRACE DispatcherServlet:117 - GET "/coupon/download_general/STORE", parameters={}, headers={masked} in DispatcherServlet 'dispatcherServlet'
2024-08-20 20:28:34 TRACE RequestMappingHandlerMapping:528 - Mapped to com.project.coupon.controller.CouponController#downloadTemplate(String)
2024-08-20 20:28:34 TRACE HandlerMethod:180 - Arguments: [STORE]
2024-08-20 20:28:34 DEBUG HttpEntityMethodProcessor:216 - Found 'Content-Type:application/octet-stream' in response
2024-08-20 20:28:34 TRACE HttpEntityMethodProcessor:117 - Writing [Byte array resource [resource loaded from byte array]]
2024-08-20 20:28:34 TRACE DispatcherServlet:1174 - No view rendering, null ModelAndView returned.
2024-08-20 20:28:34 DEBUG DispatcherServlet:1138 - Completed 200 OK, headers={masked}
2024-08-20 20:30:49 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 20:30:49 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 20:30:49 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 20:30:49 INFO  JwtImplementation:139 - Is Token Expired: false
2024-08-20 20:30:49 INFO  JwtImplementation:116 - Extracted Claims: {user_id=1, roles=[], sub=satyaki0906@gmail.com, iat=1722722001, exp=1880402001}
2024-08-20 20:30:49 INFO  JwtImplementation:131 - Is Token Valid: true
2024-08-20 20:30:49 TRACE DispatcherServlet:117 - POST "/coupon/upload_items/SUMMER2031", parameters={multipart}, headers={masked} in DispatcherServlet 'dispatcherServlet'
2024-08-20 20:30:50 TRACE RequestMappingHandlerMapping:528 - Mapped to com.project.coupon.controller.CouponController#uploadItems(String, String, MultipartFile)
2024-08-20 20:30:50 TRACE HandlerMethod:180 - Arguments: [SUMMER2031, STORE, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1416597b]
2024-08-20 20:30:50 DEBUG HttpEntityMethodProcessor:275 - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2024-08-20 20:30:50 TRACE HttpEntityMethodProcessor:117 - Writing ["File uploaded and processed successfully."]
2024-08-20 20:30:50 TRACE DispatcherServlet:1174 - No view rendering, null ModelAndView returned.
2024-08-20 20:30:50 DEBUG DispatcherServlet:1138 - Completed 200 OK, headers={masked}
2024-08-20 20:31:32 INFO  LocalContainerEntityManagerFactoryBean:650 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-20 20:31:32 INFO  HikariDataSource:350 - HikariPool-1 - Shutdown initiated...
2024-08-20 20:31:32 INFO  HikariDataSource:352 - HikariPool-1 - Shutdown completed.
